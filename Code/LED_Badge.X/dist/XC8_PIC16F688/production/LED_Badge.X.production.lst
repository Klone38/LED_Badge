

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Sep 25 22:26:43 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F688
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 1.44
    31                           ; Generated 14/09/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F688 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0007                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0087                     	;# 
    93  008C                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0095                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0007                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  0081                     	;# 
   139  0085                     	;# 
   140  0087                     	;# 
   141  008C                     	;# 
   142  008E                     	;# 
   143  008F                     	;# 
   144  0090                     	;# 
   145  0091                     	;# 
   146  0095                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0007                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0087                     	;# 
   189  008C                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0095                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0007                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001E                     	;# 
   233  001F                     	;# 
   234  0081                     	;# 
   235  0085                     	;# 
   236  0087                     	;# 
   237  008C                     	;# 
   238  008E                     	;# 
   239  008F                     	;# 
   240  0090                     	;# 
   241  0091                     	;# 
   242  0095                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0096                     	;# 
   246  0097                     	;# 
   247  0098                     	;# 
   248  0099                     	;# 
   249  009A                     	;# 
   250  009A                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  0000                     	;# 
   257  0001                     	;# 
   258  0002                     	;# 
   259  0003                     	;# 
   260  0004                     	;# 
   261  0005                     	;# 
   262  0007                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000E                     	;# 
   267  000E                     	;# 
   268  000F                     	;# 
   269  0010                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0014                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  0081                     	;# 
   283  0085                     	;# 
   284  0087                     	;# 
   285  008C                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0095                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0007                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0087                     	;# 
   333  008C                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0095                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352                           
   353                           	psect	idataBANK0
   354  05A4                     __pidataBANK0:	
   355                           
   356                           ;initializer for _rowCount
   357  05A4  3402               	retlw	2
   358  05A5  3400               	retlw	0
   359                           
   360                           ;initializer for _frameSize
   361  05A6  3406               	retlw	6
   362  05A7  3400               	retlw	0
   363                           
   364                           ;initializer for _maxFrames
   365  05A8  3418               	retlw	24
   366  05A9  3400               	retlw	0
   367                           
   368                           	psect	idataBANK1
   369  04DD                     __pidataBANK1:	
   370                           
   371                           ;initializer for _buf
   372  04DD  3401               	retlw	1
   373  04DE  3401               	retlw	1
   374  04DF  3401               	retlw	1
   375  04E0  3401               	retlw	1
   376  04E1  3401               	retlw	1
   377  04E2  3401               	retlw	1
   378  04E3  3401               	retlw	1
   379  04E4  3401               	retlw	1
   380  04E5  3401               	retlw	1
   381  04E6  3401               	retlw	1
   382  04E7  3401               	retlw	1
   383  04E8  3401               	retlw	1
   384  04E9  3401               	retlw	1
   385  04EA  3401               	retlw	1
   386  04EB  3401               	retlw	1
   387  04EC  3401               	retlw	1
   388  04ED  3401               	retlw	1
   389  04EE  3401               	retlw	1
   390  04EF  3401               	retlw	1
   391  04F0  3401               	retlw	1
   392  04F1  3401               	retlw	1
   393  04F2  3401               	retlw	1
   394  04F3  3401               	retlw	1
   395  04F4  3401               	retlw	1
   396  04F5  3401               	retlw	1
   397  04F6  3401               	retlw	1
   398  04F7  3401               	retlw	1
   399  04F8  3401               	retlw	1
   400  04F9  3401               	retlw	1
   401  04FA  3401               	retlw	1
   402  04FB  3401               	retlw	1
   403  04FC  3401               	retlw	1
   404  04FD  3401               	retlw	1
   405  04FE  3401               	retlw	1
   406  04FF  3401               	retlw	1
   407  0500  3401               	retlw	1
   408  0501  3401               	retlw	1
   409  0502  3401               	retlw	1
   410  0503  3401               	retlw	1
   411  0504  3401               	retlw	1
   412  0505  3401               	retlw	1
   413  0506  3401               	retlw	1
   414  0507  3401               	retlw	1
   415  0508  3401               	retlw	1
   416  0509  3401               	retlw	1
   417  050A  3401               	retlw	1
   418  050B  3401               	retlw	1
   419  050C  3401               	retlw	1
   420                           
   421                           	psect	stringtext
   422  0100                     __pstringtext:	
   423  0100                     stringtab:	
   424  0100                     __stringtab:	
   425                           
   426                           ;	String table - string pointers are 2 bytes each
   427  0100  1BFF               	btfsc	btemp+1,7
   428  0101  290A               	ljmp	stringcode
   429  0102  1383               	bcf	3,7
   430  0103  187F               	btfsc	btemp+1,0
   431  0104  1783               	bsf	3,7
   432  0105  0800               	movf	0,w
   433  0106  0A84               	incf	4,f
   434  0107  1903               	skipnz
   435  0108  0AFF               	incf	btemp+1,f
   436  0109  0008               	return
   437  010A                     stringcode:	
   438  010A  087F               	movf	btemp+1,w
   439  010B  397F               	andlw	127
   440  010C  008A               	movwf	10
   441  010D  0804               	movf	4,w
   442  010E  0A84               	incf	4,f
   443  010F  1903               	skipnz
   444  0110  0AFF               	incf	btemp+1,f
   445  0111  0082               	movwf	2
   446  0112                     __stringbase:	
   447  0112                     __end_of__stringtab:	
   448  0112                     _animation:	
   449  0112  3424               	retlw	36
   450  0113  3400               	retlw	0
   451  0114  3424               	retlw	36
   452  0115  3400               	retlw	0
   453  0116  3400               	retlw	0
   454  0117  3400               	retlw	0
   455  0118  3442               	retlw	66
   456  0119  3400               	retlw	0
   457  011A  343C               	retlw	60
   458  011B  3400               	retlw	0
   459  011C  3480               	retlw	128
   460  011D  3400               	retlw	0
   461  011E  3424               	retlw	36
   462  011F  3400               	retlw	0
   463  0120  3424               	retlw	36
   464  0121  3400               	retlw	0
   465  0122  3400               	retlw	0
   466  0123  3400               	retlw	0
   467  0124  3442               	retlw	66
   468  0125  3400               	retlw	0
   469  0126  343C               	retlw	60
   470  0127  3400               	retlw	0
   471  0128  3440               	retlw	64
   472  0129  3400               	retlw	0
   473  012A  3424               	retlw	36
   474  012B  3400               	retlw	0
   475  012C  3424               	retlw	36
   476  012D  3400               	retlw	0
   477  012E  3400               	retlw	0
   478  012F  3400               	retlw	0
   479  0130  3442               	retlw	66
   480  0131  3400               	retlw	0
   481  0132  343C               	retlw	60
   482  0133  3400               	retlw	0
   483  0134  3420               	retlw	32
   484  0135  3400               	retlw	0
   485  0136  3424               	retlw	36
   486  0137  3400               	retlw	0
   487  0138  3424               	retlw	36
   488  0139  3400               	retlw	0
   489  013A  3400               	retlw	0
   490  013B  3400               	retlw	0
   491  013C  3442               	retlw	66
   492  013D  3400               	retlw	0
   493  013E  343C               	retlw	60
   494  013F  3400               	retlw	0
   495  0140  3410               	retlw	16
   496  0141  3400               	retlw	0
   497  0142  3424               	retlw	36
   498  0143  3400               	retlw	0
   499  0144  3424               	retlw	36
   500  0145  3400               	retlw	0
   501  0146  3400               	retlw	0
   502  0147  3400               	retlw	0
   503  0148  3442               	retlw	66
   504  0149  3400               	retlw	0
   505  014A  343C               	retlw	60
   506  014B  3400               	retlw	0
   507  014C  3408               	retlw	8
   508  014D  3400               	retlw	0
   509  014E  3424               	retlw	36
   510  014F  3400               	retlw	0
   511  0150  3424               	retlw	36
   512  0151  3400               	retlw	0
   513  0152  3400               	retlw	0
   514  0153  3400               	retlw	0
   515  0154  3442               	retlw	66
   516  0155  3400               	retlw	0
   517  0156  343C               	retlw	60
   518  0157  3400               	retlw	0
   519  0158  3404               	retlw	4
   520  0159  3400               	retlw	0
   521  015A  3424               	retlw	36
   522  015B  3400               	retlw	0
   523  015C  3424               	retlw	36
   524  015D  3400               	retlw	0
   525  015E  3400               	retlw	0
   526  015F  3400               	retlw	0
   527  0160  3442               	retlw	66
   528  0161  3400               	retlw	0
   529  0162  343C               	retlw	60
   530  0163  3400               	retlw	0
   531  0164  3402               	retlw	2
   532  0165  3400               	retlw	0
   533  0166  3424               	retlw	36
   534  0167  3400               	retlw	0
   535  0168  3424               	retlw	36
   536  0169  3400               	retlw	0
   537  016A  3400               	retlw	0
   538  016B  3400               	retlw	0
   539  016C  3442               	retlw	66
   540  016D  3400               	retlw	0
   541  016E  343C               	retlw	60
   542  016F  3400               	retlw	0
   543  0170  3401               	retlw	1
   544  0171  3400               	retlw	0
   545  0172  3424               	retlw	36
   546  0173  3400               	retlw	0
   547  0174  3424               	retlw	36
   548  0175  3400               	retlw	0
   549  0176  3400               	retlw	0
   550  0177  3400               	retlw	0
   551  0178  3442               	retlw	66
   552  0179  3400               	retlw	0
   553  017A  343D               	retlw	61
   554  017B  3400               	retlw	0
   555  017C  3400               	retlw	0
   556  017D  3400               	retlw	0
   557  017E  3424               	retlw	36
   558  017F  3400               	retlw	0
   559  0180  3424               	retlw	36
   560  0181  3400               	retlw	0
   561  0182  3400               	retlw	0
   562  0183  3400               	retlw	0
   563  0184  3443               	retlw	67
   564  0185  3400               	retlw	0
   565  0186  343C               	retlw	60
   566  0187  3400               	retlw	0
   567  0188  3400               	retlw	0
   568  0189  3400               	retlw	0
   569  018A  3424               	retlw	36
   570  018B  3400               	retlw	0
   571  018C  3424               	retlw	36
   572  018D  3400               	retlw	0
   573  018E  3401               	retlw	1
   574  018F  3400               	retlw	0
   575  0190  3442               	retlw	66
   576  0191  3400               	retlw	0
   577  0192  343C               	retlw	60
   578  0193  3400               	retlw	0
   579  0194  3400               	retlw	0
   580  0195  3400               	retlw	0
   581  0196  3424               	retlw	36
   582  0197  3400               	retlw	0
   583  0198  3425               	retlw	37
   584  0199  3400               	retlw	0
   585  019A  3400               	retlw	0
   586  019B  3400               	retlw	0
   587  019C  3442               	retlw	66
   588  019D  3400               	retlw	0
   589  019E  343C               	retlw	60
   590  019F  3400               	retlw	0
   591  01A0  3400               	retlw	0
   592  01A1  3400               	retlw	0
   593  01A2  3425               	retlw	37
   594  01A3  3400               	retlw	0
   595  01A4  3424               	retlw	36
   596  01A5  3400               	retlw	0
   597  01A6  3400               	retlw	0
   598  01A7  3400               	retlw	0
   599  01A8  3442               	retlw	66
   600  01A9  3400               	retlw	0
   601  01AA  343C               	retlw	60
   602  01AB  3400               	retlw	0
   603  01AC  3400               	retlw	0
   604  01AD  3400               	retlw	0
   605  01AE  3426               	retlw	38
   606  01AF  3400               	retlw	0
   607  01B0  3424               	retlw	36
   608  01B1  3400               	retlw	0
   609  01B2  3400               	retlw	0
   610  01B3  3400               	retlw	0
   611  01B4  3442               	retlw	66
   612  01B5  3400               	retlw	0
   613  01B6  343C               	retlw	60
   614  01B7  3400               	retlw	0
   615  01B8  3400               	retlw	0
   616  01B9  3400               	retlw	0
   617  01BA  3424               	retlw	36
   618  01BB  3400               	retlw	0
   619  01BC  3424               	retlw	36
   620  01BD  3400               	retlw	0
   621  01BE  3400               	retlw	0
   622  01BF  3400               	retlw	0
   623  01C0  3442               	retlw	66
   624  01C1  3400               	retlw	0
   625  01C2  343C               	retlw	60
   626  01C3  3400               	retlw	0
   627  01C4  3400               	retlw	0
   628  01C5  3400               	retlw	0
   629  01C6  342C               	retlw	44
   630  01C7  3400               	retlw	0
   631  01C8  3424               	retlw	36
   632  01C9  3400               	retlw	0
   633  01CA  3400               	retlw	0
   634  01CB  3400               	retlw	0
   635  01CC  3442               	retlw	66
   636  01CD  3400               	retlw	0
   637  01CE  343C               	retlw	60
   638  01CF  3400               	retlw	0
   639  01D0  3400               	retlw	0
   640  01D1  3400               	retlw	0
   641  01D2  3434               	retlw	52
   642  01D3  3400               	retlw	0
   643  01D4  3424               	retlw	36
   644  01D5  3400               	retlw	0
   645  01D6  3400               	retlw	0
   646  01D7  3400               	retlw	0
   647  01D8  3442               	retlw	66
   648  01D9  3400               	retlw	0
   649  01DA  343C               	retlw	60
   650  01DB  3400               	retlw	0
   651  01DC  3400               	retlw	0
   652  01DD  3400               	retlw	0
   653  01DE  3424               	retlw	36
   654  01DF  3400               	retlw	0
   655  01E0  3424               	retlw	36
   656  01E1  3400               	retlw	0
   657  01E2  3400               	retlw	0
   658  01E3  3400               	retlw	0
   659  01E4  3442               	retlw	66
   660  01E5  3400               	retlw	0
   661  01E6  343C               	retlw	60
   662  01E7  3400               	retlw	0
   663  01E8  3400               	retlw	0
   664  01E9  3400               	retlw	0
   665  01EA  3464               	retlw	100
   666  01EB  3400               	retlw	0
   667  01EC  3424               	retlw	36
   668  01ED  3400               	retlw	0
   669  01EE  3400               	retlw	0
   670  01EF  3400               	retlw	0
   671  01F0  3442               	retlw	66
   672  01F1  3400               	retlw	0
   673  01F2  343C               	retlw	60
   674  01F3  3400               	retlw	0
   675  01F4  3400               	retlw	0
   676  01F5  3400               	retlw	0
   677  01F6  34A4               	retlw	164
   678  01F7  3400               	retlw	0
   679  01F8  3424               	retlw	36
   680  01F9  3400               	retlw	0
   681  01FA  3400               	retlw	0
   682  01FB  3400               	retlw	0
   683  01FC  3442               	retlw	66
   684  01FD  3400               	retlw	0
   685  01FE  343C               	retlw	60
   686  01FF  3400               	retlw	0
   687  0200  3400               	retlw	0
   688  0201  3400               	retlw	0
   689  0202  3424               	retlw	36
   690  0203  3400               	retlw	0
   691  0204  34A4               	retlw	164
   692  0205  3400               	retlw	0
   693  0206  3400               	retlw	0
   694  0207  3400               	retlw	0
   695  0208  3442               	retlw	66
   696  0209  3400               	retlw	0
   697  020A  343C               	retlw	60
   698  020B  3400               	retlw	0
   699  020C  3400               	retlw	0
   700  020D  3400               	retlw	0
   701  020E  3424               	retlw	36
   702  020F  3400               	retlw	0
   703  0210  3424               	retlw	36
   704  0211  3400               	retlw	0
   705  0212  3480               	retlw	128
   706  0213  3400               	retlw	0
   707  0214  3442               	retlw	66
   708  0215  3400               	retlw	0
   709  0216  343C               	retlw	60
   710  0217  3400               	retlw	0
   711  0218  3400               	retlw	0
   712  0219  3400               	retlw	0
   713  021A  3424               	retlw	36
   714  021B  3400               	retlw	0
   715  021C  3424               	retlw	36
   716  021D  3400               	retlw	0
   717  021E  3400               	retlw	0
   718  021F  3400               	retlw	0
   719  0220  34C2               	retlw	194
   720  0221  3400               	retlw	0
   721  0222  343C               	retlw	60
   722  0223  3400               	retlw	0
   723  0224  3400               	retlw	0
   724  0225  3400               	retlw	0
   725  0226  3424               	retlw	36
   726  0227  3400               	retlw	0
   727  0228  3424               	retlw	36
   728  0229  3400               	retlw	0
   729  022A  3400               	retlw	0
   730  022B  3400               	retlw	0
   731  022C  3442               	retlw	66
   732  022D  3400               	retlw	0
   733  022E  34BC               	retlw	188
   734  022F  3400               	retlw	0
   735  0230  3400               	retlw	0
   736  0231  3400               	retlw	0
   737  0232                     __end_of_animation:	
   738  0007                     _PORTCbits	set	7
   739  005D                     _T0IE	set	93
   740  005A                     _T0IF	set	90
   741  0087                     _TRISC	set	135
   742  0085                     _TRISA	set	133
   743  0091                     _ANSEL	set	145
   744                           
   745                           ; #config settings
   746  0000                     
   747                           	psect	cinit
   748  0013                     start_initialization:	
   749  0013                     __initialization:	
   750                           
   751                           ; Initialize objects allocated to BANK1
   752  0013  1383               	bcf	3,7	;select IRP bank0
   753  0014  30D0               	movlw	low (__pdataBANK1+48)
   754  0015  00FD               	movwf	btemp+-1
   755  0016  3004               	movlw	high __pidataBANK1
   756  0017  00FE               	movwf	btemp
   757  0018  30DD               	movlw	low __pidataBANK1
   758  0019  00FF               	movwf	btemp+1
   759  001A  30A0               	movlw	low __pdataBANK1
   760  001B  0084               	movwf	4
   761  001C  118A  2585  118A   	fcall	init_ram0
   762                           
   763                           ; Initialize objects allocated to BANK0
   764  001F  3047               	movlw	low (__pdataBANK0+6)
   765  0020  00FD               	movwf	btemp+-1
   766  0021  3005               	movlw	high __pidataBANK0
   767  0022  00FE               	movwf	btemp
   768  0023  30A4               	movlw	low __pidataBANK0
   769  0024  00FF               	movwf	btemp+1
   770  0025  3041               	movlw	low __pdataBANK0
   771  0026  0084               	movwf	4
   772  0027  118A  2585         	fcall	init_ram0
   773                           
   774                           ; Clear objects allocated to BANK0
   775  0029  01C7               	clrf	__pbssBANK0& (0+127)
   776  002A  01C8               	clrf	(__pbssBANK0+1)& (0+127)
   777  002B  01C9               	clrf	(__pbssBANK0+2)& (0+127)
   778  002C                     end_of_initialization:	
   779                           ;End of C runtime variable initialization code
   780                           
   781  002C                     __end_of__initialization:	
   782  002C  0183               	clrf	3
   783  002D  118A  2C6C         	ljmp	_main	;jump to C main() function
   784                           
   785                           	psect	bssBANK0
   786  0047                     __pbssBANK0:	
   787  0047                     _frame:	
   788  0047                     	ds	2
   789  0049                     _currentRow:	
   790  0049                     	ds	1
   791                           
   792                           	psect	dataBANK0
   793  0041                     __pdataBANK0:	
   794  0041                     _rowCount:	
   795  0041                     	ds	2
   796  0043                     _frameSize:	
   797  0043                     	ds	2
   798  0045                     _maxFrames:	
   799  0045                     	ds	2
   800                           
   801                           	psect	dataBANK1
   802  00A0                     __pdataBANK1:	
   803  00A0                     _buf:	
   804  00A0                     	ds	48
   805                           
   806                           	psect	inittext
   807  0581                     init_fetch0:	
   808                           ;	Called with low address in FSR and high address in W
   809                           
   810  0581  087E               	movf	126,w
   811  0582  008A               	movwf	10
   812  0583  087F               	movf	127,w
   813  0584  0082               	movwf	2
   814  0585                     init_ram0:	
   815                           ;Called with:
   816                           ;	high address of idata address in btemp 
   817                           ;	low address of idata address in btemp+1 
   818                           ;	low address of data in FSR
   819                           ;	high address + 1 of data in btemp-1
   820                           
   821  0585  2581  118A         	fcall	init_fetch0
   822  0587  0080               	movwf	0
   823  0588  0A84               	incf	4,f
   824  0589  0804               	movf	4,w
   825  058A  067D               	xorwf	125,w
   826  058B  1903               	btfsc	3,2
   827  058C  3400               	retlw	0
   828  058D  0AFF               	incf	127,f
   829  058E  1903               	btfsc	3,2
   830  058F  0AFE               	incf	126,f
   831  0590  2D85               	goto	init_ram0
   832                           
   833                           	psect	cstackCOMMON
   834  0070                     __pcstackCOMMON:	
   835  0070                     ?_AdvanceAnimation:	
   836  0070                     ?_ConfigureOscillator:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_InitApp:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_ClearDisplay:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_InitAnimation:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_ReadyDisplay:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_PopulateColumns:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_AdvanceRow:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_isr:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ?_main:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?i1_AdvanceAnimation:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?i1___wmul:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     i1___wmul@multiplier:	
   870                           ; 2 bytes @ 0x0
   871                           
   872                           
   873                           ; 2 bytes @ 0x0
   874  0070                     	ds	2
   875  0072                     i1___wmul@multiplicand:	
   876                           
   877                           ; 2 bytes @ 0x2
   878  0072                     	ds	2
   879  0074                     ??i1___wmul:	
   880  0074                     i1___wmul@product:	
   881                           ; 1 bytes @ 0x4
   882                           
   883                           
   884                           ; 2 bytes @ 0x4
   885  0074                     	ds	2
   886  0076                     ??i1_AdvanceAnimation:	
   887                           
   888                           ; 1 bytes @ 0x6
   889  0076                     	ds	8
   890                           
   891                           	psect	cstackBANK0
   892  0020                     __pcstackBANK0:	
   893  0020                     i1AdvanceAnimation@k:	
   894                           
   895                           ; 2 bytes @ 0x0
   896  0020                     	ds	2
   897  0022                     i1AdvanceAnimation@x:	
   898                           
   899                           ; 2 bytes @ 0x2
   900  0022                     	ds	2
   901  0024                     i1AdvanceAnimation@y:	
   902                           
   903                           ; 2 bytes @ 0x4
   904  0024                     	ds	2
   905  0026                     ??_isr:	
   906                           
   907                           ; 1 bytes @ 0x6
   908  0026                     	ds	4
   909  002A                     ??_ConfigureOscillator:	
   910  002A                     ??_InitApp:	
   911                           ; 1 bytes @ 0xA
   912                           
   913  002A                     ??_ClearDisplay:	
   914                           ; 1 bytes @ 0xA
   915                           
   916  002A                     ??_InitAnimation:	
   917                           ; 1 bytes @ 0xA
   918                           
   919  002A                     ??_ReadyDisplay:	
   920                           ; 1 bytes @ 0xA
   921                           
   922  002A                     ??_PopulateColumns:	
   923                           ; 1 bytes @ 0xA
   924                           
   925  002A                     ??_AdvanceRow:	
   926                           ; 1 bytes @ 0xA
   927                           
   928  002A                     ?___wmul:	
   929                           ; 1 bytes @ 0xA
   930                           
   931  002A                     ___wmul@multiplier:	
   932                           ; 2 bytes @ 0xA
   933                           
   934                           
   935                           ; 2 bytes @ 0xA
   936  002A                     	ds	1
   937  002B                     ClearDisplay@i:	
   938                           
   939                           ; 2 bytes @ 0xB
   940  002B                     	ds	1
   941  002C                     ___wmul@multiplicand:	
   942                           
   943                           ; 2 bytes @ 0xC
   944  002C                     	ds	1
   945  002D                     PopulateColumns@i:	
   946                           
   947                           ; 2 bytes @ 0xD
   948  002D                     	ds	1
   949  002E                     ??___wmul:	
   950  002E                     ___wmul@product:	
   951                           ; 1 bytes @ 0xE
   952                           
   953                           
   954                           ; 2 bytes @ 0xE
   955  002E                     	ds	2
   956  0030                     ??_AdvanceAnimation:	
   957                           
   958                           ; 1 bytes @ 0x10
   959  0030                     	ds	2
   960  0032                     InitAnimation@k:	
   961                           
   962                           ; 2 bytes @ 0x12
   963  0032                     	ds	2
   964  0034                     InitAnimation@x:	
   965                           
   966                           ; 2 bytes @ 0x14
   967  0034                     	ds	2
   968  0036                     InitAnimation@y:	
   969                           
   970                           ; 2 bytes @ 0x16
   971  0036                     	ds	2
   972  0038                     AdvanceAnimation@k:	
   973                           
   974                           ; 2 bytes @ 0x18
   975  0038                     	ds	2
   976  003A                     AdvanceAnimation@x:	
   977                           
   978                           ; 2 bytes @ 0x1A
   979  003A                     	ds	2
   980  003C                     AdvanceAnimation@y:	
   981                           
   982                           ; 2 bytes @ 0x1C
   983  003C                     	ds	2
   984  003E                     ??_main:	
   985                           
   986                           ; 1 bytes @ 0x1E
   987  003E                     	ds	1
   988  003F                     main@counter:	
   989                           
   990                           ; 2 bytes @ 0x1F
   991  003F                     	ds	2
   992                           
   993                           	psect	maintext
   994  046C                     __pmaintext:	
   995 ;;
   996 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   997 ;;
   998 ;; *************** function _main *****************
   999 ;; Defined at:
  1000 ;;		line 26 in file "main.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  counter         2   31[BANK0 ] int 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : B00/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1014 ;;      Params:         0       0       0       0
  1015 ;;      Locals:         0       2       0       0
  1016 ;;      Temps:          0       1       0       0
  1017 ;;      Totals:         0       3       0       0
  1018 ;;Total ram usage:        3 bytes
  1019 ;; Hardware stack levels required when called:    5
  1020 ;; This function calls:
  1021 ;;		_AdvanceAnimation
  1022 ;;		_AdvanceRow
  1023 ;;		_ClearDisplay
  1024 ;;		_ConfigureOscillator
  1025 ;;		_InitAnimation
  1026 ;;		_InitApp
  1027 ;;		_PopulateColumns
  1028 ;;		_ReadyDisplay
  1029 ;; This function is called by:
  1030 ;;		Startup code after reset
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           
  1035                           ;psect for function _main
  1036  046C                     _main:	
  1037                           
  1038                           ;main.c: 29: ConfigureOscillator();
  1039                           
  1040                           ;incstack = 0
  1041                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1042  046C  118A  25AA  118A   	fcall	_ConfigureOscillator
  1043                           
  1044                           ;main.c: 32: InitApp();
  1045  046F  118A  259B  118A   	fcall	_InitApp
  1046                           
  1047                           ;main.c: 34: ClearDisplay();
  1048  0472  118A  24A8  118A   	fcall	_ClearDisplay
  1049                           
  1050                           ;main.c: 35: InitAnimation();
  1051  0475  118A  23F3  118A   	fcall	_InitAnimation
  1052                           
  1053                           ;main.c: 36: ReadyDisplay();
  1054  0478  118A  2591  118A   	fcall	_ReadyDisplay
  1055  047B                     L1:	
  1056                           
  1057                           ;main.c: 38: int counter = 0;
  1058  047B  1283               	bcf	3,5	;RP0=0, select bank0
  1059  047C  1303               	bcf	3,6	;RP1=0, select bank0
  1060  047D  01BF               	clrf	main@counter
  1061  047E  01C0               	clrf	main@counter+1
  1062  047F                     l1035:	
  1063                           ;main.c: 40: while(1)
  1064                           
  1065                           
  1066                           ;main.c: 41: {
  1067                           ;main.c: 43: PopulateColumns();
  1068  047F  118A  2378  118A   	fcall	_PopulateColumns
  1069                           
  1070                           ;main.c: 46: _delay((unsigned long)((500)*(8000000/4000000.0)));
  1071  0482  30C7               	movlw	199
  1072  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0485  00BE               	movwf	??_main
  1075  0486                     u1137:	
  1076  0486  2C87               	nop2
  1077  0487  0BBE               	decfsz	??_main,f
  1078  0488  2C86               	goto	u1137
  1079  0489  2C8A               	nop2
  1080  048A  0000               	nop
  1081                           
  1082                           ;main.c: 48: PORTCbits.RC4 = 1;
  1083  048B  1283               	bcf	3,5	;RP0=0, select bank0
  1084  048C  1303               	bcf	3,6	;RP1=0, select bank0
  1085  048D  1607               	bsf	7,4	;volatile
  1086                           
  1087                           ;main.c: 51: AdvanceRow();
  1088  048E  118A  2551  118A   	fcall	_AdvanceRow
  1089                           
  1090                           ;main.c: 53: counter++;
  1091  0491  3001               	movlw	1
  1092  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0494  07BF               	addwf	main@counter,f
  1095  0495  1803               	skipnc
  1096  0496  0AC0               	incf	main@counter+1,f
  1097  0497  3000               	movlw	0
  1098  0498  07C0               	addwf	main@counter+1,f
  1099                           
  1100                           ;main.c: 55: if(counter > 500){
  1101  0499  0840               	movf	main@counter+1,w
  1102  049A  3A80               	xorlw	128
  1103  049B  00FF               	movwf	127
  1104  049C  3081               	movlw	129
  1105  049D  027F               	subwf	127,w
  1106  049E  1D03               	skipz
  1107  049F  2CA2               	goto	u1125
  1108  04A0  30F5               	movlw	245
  1109  04A1  023F               	subwf	main@counter,w
  1110  04A2                     u1125:	
  1111  04A2  1C03               	skipc
  1112  04A3  2C7F               	goto	l1035
  1113                           
  1114                           ;main.c: 56: AdvanceAnimation();
  1115  04A4  118A  2232  118A   	fcall	_AdvanceAnimation
  1116  04A7  2C7B               	goto	L1
  1117  04A8                     __end_of_main:	
  1118                           ;main.c: 57: counter = 0;
  1119                           
  1120                           
  1121                           	psect	text1
  1122  0591                     __ptext1:	
  1123 ;; *************** function _ReadyDisplay *****************
  1124 ;; Defined at:
  1125 ;;		line 114 in file "user.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		None
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1139 ;;      Params:         0       0       0       0
  1140 ;;      Locals:         0       0       0       0
  1141 ;;      Temps:          0       0       0       0
  1142 ;;      Totals:         0       0       0       0
  1143 ;;Total ram usage:        0 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    3
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _ReadyDisplay
  1155  0591                     _ReadyDisplay:	
  1156                           
  1157                           ;user.c: 116: PORTCbits.RC4 = 1;
  1158                           
  1159                           ;incstack = 0
  1160                           ; Regs used in _ReadyDisplay: []
  1161  0591  1283               	bcf	3,5	;RP0=0, select bank0
  1162  0592  1303               	bcf	3,6	;RP1=0, select bank0
  1163  0593  1607               	bsf	7,4	;volatile
  1164                           
  1165                           ;user.c: 118: PORTCbits.RC1 = 1;
  1166  0594  1487               	bsf	7,1	;volatile
  1167                           
  1168                           ;user.c: 121: PORTCbits.RC3 = 1;
  1169  0595  1587               	bsf	7,3	;volatile
  1170                           
  1171                           ;user.c: 122: PORTCbits.RC3 = 0;
  1172  0596  1187               	bcf	7,3	;volatile
  1173                           
  1174                           ;user.c: 123: PORTCbits.RC3 = 1;
  1175  0597  1587               	bsf	7,3	;volatile
  1176                           
  1177                           ;user.c: 124: PORTCbits.RC3 = 0;
  1178  0598  1187               	bcf	7,3	;volatile
  1179                           
  1180                           ;user.c: 126: PORTCbits.RC4 = 0;
  1181  0599  1207               	bcf	7,4	;volatile
  1182  059A  0008               	return
  1183  059B                     __end_of_ReadyDisplay:	
  1184                           
  1185                           	psect	text2
  1186  0378                     __ptext2:	
  1187 ;; *************** function _PopulateColumns *****************
  1188 ;; Defined at:
  1189 ;;		line 131 in file "user.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  i               2   13[BANK0 ] int 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1203 ;;      Params:         0       0       0       0
  1204 ;;      Locals:         0       2       0       0
  1205 ;;      Temps:          0       3       0       0
  1206 ;;      Totals:         0       5       0       0
  1207 ;;Total ram usage:        5 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    3
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           
  1218                           ;psect for function _PopulateColumns
  1219  0378                     _PopulateColumns:	
  1220                           
  1221                           ;user.c: 133: PORTCbits.RC4 = 1;
  1222                           
  1223                           ;incstack = 0
  1224                           ; Regs used in _PopulateColumns: [wreg-fsr0h+status,2+status,0]
  1225  0378  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0379  1303               	bcf	3,6	;RP1=0, select bank0
  1227  037A  1607               	bsf	7,4	;volatile
  1228                           
  1229                           ;user.c: 136: for(int i =7;i>=0;i--)
  1230  037B  3007               	movlw	7
  1231  037C  00AD               	movwf	PopulateColumns@i
  1232  037D  3000               	movlw	0
  1233  037E  00AE               	movwf	PopulateColumns@i+1
  1234  037F  1BAE               	btfsc	PopulateColumns@i+1,7
  1235  0380  2BE8               	goto	l95
  1236  0381                     l943:	
  1237                           
  1238                           ;user.c: 137: {
  1239                           ;user.c: 140: if(i==3)
  1240  0381  3003               	movlw	3
  1241  0382  062D               	xorwf	PopulateColumns@i,w
  1242  0383  042E               	iorwf	PopulateColumns@i+1,w
  1243  0384  1D03               	btfss	3,2
  1244  0385  2B91               	goto	l947
  1245                           
  1246                           ;user.c: 141: {
  1247                           ;user.c: 142: PORTCbits.RC0 = !buf[currentRow][0];
  1248  0386  0849               	movf	_currentRow,w
  1249  0387  00AA               	movwf	??_PopulateColumns
  1250  0388  3002               	movlw	2
  1251  0389                     u835:	
  1252  0389  1003               	clrc
  1253  038A  0DAA               	rlf	??_PopulateColumns,f
  1254  038B  3EFF               	addlw	-1
  1255  038C  1D03               	skipz
  1256  038D  2B89               	goto	u835
  1257  038E  1003               	clrc
  1258  038F  0D2A               	rlf	??_PopulateColumns,w
  1259  0390  2BC1               	goto	L9
  1260  0391                     l947:	
  1261                           ;user.c: 143: }
  1262                           
  1263                           
  1264                           ;user.c: 144: else if(i==2)
  1265  0391  3002               	movlw	2
  1266  0392  062D               	xorwf	PopulateColumns@i,w
  1267  0393  042E               	iorwf	PopulateColumns@i+1,w
  1268  0394  1D03               	btfss	3,2
  1269  0395  2BA2               	goto	l951
  1270                           
  1271                           ;user.c: 145: {
  1272                           ;user.c: 146: PORTCbits.RC0 = !buf[currentRow][1];
  1273  0396  0849               	movf	_currentRow,w
  1274  0397  00AA               	movwf	??_PopulateColumns
  1275  0398  3002               	movlw	2
  1276  0399                     u875:	
  1277  0399  1003               	clrc
  1278  039A  0DAA               	rlf	??_PopulateColumns,f
  1279  039B  3EFF               	addlw	-1
  1280  039C  1D03               	skipz
  1281  039D  2B99               	goto	u875
  1282  039E  1003               	clrc
  1283  039F  0D2A               	rlf	??_PopulateColumns,w
  1284  03A0  3E01               	addlw	1
  1285  03A1  2BC1               	goto	L9
  1286  03A2                     l951:	
  1287                           ;user.c: 147: }
  1288                           
  1289                           
  1290                           ;user.c: 148: else if(i==1)
  1291  03A2  032D               	decf	PopulateColumns@i,w
  1292  03A3  042E               	iorwf	PopulateColumns@i+1,w
  1293  03A4  1D03               	btfss	3,2
  1294  03A5  2BB2               	goto	l955
  1295                           
  1296                           ;user.c: 149: {
  1297                           ;user.c: 150: PORTCbits.RC0 = !buf[currentRow][2];
  1298  03A6  0849               	movf	_currentRow,w
  1299  03A7  00AA               	movwf	??_PopulateColumns
  1300  03A8  3002               	movlw	2
  1301  03A9                     u915:	
  1302  03A9  1003               	clrc
  1303  03AA  0DAA               	rlf	??_PopulateColumns,f
  1304  03AB  3EFF               	addlw	-1
  1305  03AC  1D03               	skipz
  1306  03AD  2BA9               	goto	u915
  1307  03AE  1003               	clrc
  1308  03AF  0D2A               	rlf	??_PopulateColumns,w
  1309  03B0  3E02               	addlw	2
  1310  03B1  2BC1               	goto	L9
  1311  03B2                     l955:	
  1312                           ;user.c: 151: }
  1313                           
  1314                           
  1315                           ;user.c: 152: else if(i==0)
  1316  03B2  082D               	movf	PopulateColumns@i,w
  1317  03B3  042E               	iorwf	PopulateColumns@i+1,w
  1318  03B4  1D03               	btfss	3,2
  1319  03B5  2BC3               	goto	l959
  1320                           
  1321                           ;user.c: 153: {
  1322                           ;user.c: 154: PORTCbits.RC0 = !buf[currentRow][3];
  1323  03B6  0849               	movf	_currentRow,w
  1324  03B7  00AA               	movwf	??_PopulateColumns
  1325  03B8  3002               	movlw	2
  1326  03B9                     u955:	
  1327  03B9  1003               	clrc
  1328  03BA  0DAA               	rlf	??_PopulateColumns,f
  1329  03BB  3EFF               	addlw	-1
  1330  03BC  1D03               	skipz
  1331  03BD  2BB9               	goto	u955
  1332  03BE  1003               	clrc
  1333  03BF  0D2A               	rlf	??_PopulateColumns,w
  1334  03C0  3E03               	addlw	3
  1335  03C1                     L9:	
  1336  03C1  3EA0               	addlw	(low (_buf| 0))& (0+255)
  1337  03C2  2BD2               	goto	L8
  1338  03C3                     l959:	
  1339                           ;user.c: 155: }
  1340                           
  1341                           
  1342                           ;user.c: 156: else
  1343                           ;user.c: 157: {
  1344                           ;user.c: 158: PORTCbits.RC0 = !buf[currentRow][i];
  1345  03C3  0849               	movf	_currentRow,w
  1346  03C4  00AA               	movwf	??_PopulateColumns
  1347  03C5  3003               	movlw	3
  1348  03C6                     u985:	
  1349  03C6  1003               	clrc
  1350  03C7  0DAA               	rlf	??_PopulateColumns,f
  1351  03C8  3EFF               	addlw	-1
  1352  03C9  1D03               	skipz
  1353  03CA  2BC6               	goto	u985
  1354  03CB  30A0               	movlw	(low (_buf| 0))& (0+255)
  1355  03CC  072A               	addwf	??_PopulateColumns,w
  1356  03CD  00AB               	movwf	??_PopulateColumns+1
  1357  03CE  082D               	movf	PopulateColumns@i,w
  1358  03CF  072B               	addwf	??_PopulateColumns+1,w
  1359  03D0  00AC               	movwf	??_PopulateColumns+2
  1360  03D1  082C               	movf	??_PopulateColumns+2,w
  1361  03D2                     L8:	
  1362  03D2  0084               	movwf	4
  1363  03D3  1383               	bcf	3,7	;select IRP bank1
  1364  03D4  0800               	movf	0,w
  1365  03D5  1D03               	btfss	3,2
  1366  03D6  2BDB               	goto	u990
  1367  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1368  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1369  03D9  1407               	bsf	7,0	;volatile
  1370  03DA  2BDE               	goto	l961
  1371  03DB                     u990:	
  1372  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1373  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1374  03DD  1007               	bcf	7,0	;volatile
  1375  03DE                     l961:	
  1376                           
  1377                           ;user.c: 159: }
  1378                           ;user.c: 162: PORTCbits.RC2 = 1;
  1379  03DE  1507               	bsf	7,2	;volatile
  1380                           
  1381                           ;user.c: 163: PORTCbits.RC2 = 0;
  1382  03DF  1107               	bcf	7,2	;volatile
  1383  03E0  30FF               	movlw	255
  1384  03E1  07AD               	addwf	PopulateColumns@i,f
  1385  03E2  1803               	skipnc
  1386  03E3  0AAE               	incf	PopulateColumns@i+1,f
  1387  03E4  30FF               	movlw	255
  1388  03E5  07AE               	addwf	PopulateColumns@i+1,f
  1389  03E6  1FAE               	btfss	PopulateColumns@i+1,7
  1390  03E7  2B81               	goto	l943
  1391  03E8                     l95:	
  1392                           
  1393                           ;user.c: 167: }
  1394                           ;user.c: 171: PORTCbits.RC4 = 0;
  1395  03E8  1207               	bcf	7,4	;volatile
  1396                           
  1397                           ;user.c: 173: currentRow++;
  1398  03E9  3001               	movlw	1
  1399  03EA  00AA               	movwf	??_PopulateColumns
  1400  03EB  082A               	movf	??_PopulateColumns,w
  1401  03EC  07C9               	addwf	_currentRow,f
  1402                           
  1403                           ;user.c: 174: if(currentRow == 6){
  1404  03ED  3006               	movlw	6
  1405  03EE  0649               	xorwf	_currentRow,w
  1406  03EF  1D03               	btfss	3,2
  1407  03F0  0008               	return
  1408                           
  1409                           ;user.c: 175: currentRow = 0;
  1410  03F1  01C9               	clrf	_currentRow
  1411  03F2  0008               	return
  1412  03F3                     __end_of_PopulateColumns:	
  1413                           
  1414                           	psect	text3
  1415  059B                     __ptext3:	
  1416 ;; *************** function _InitApp *****************
  1417 ;; Defined at:
  1418 ;;		line 42 in file "user.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1432 ;;      Params:         0       0       0       0
  1433 ;;      Locals:         0       0       0       0
  1434 ;;      Temps:          0       0       0       0
  1435 ;;      Totals:         0       0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    3
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _InitApp
  1448  059B                     _InitApp:	
  1449                           
  1450                           ;user.c: 51: ANSEL = 0b00000000;
  1451                           
  1452                           ;incstack = 0
  1453                           ; Regs used in _InitApp: [wreg+status,2]
  1454  059B  1683               	bsf	3,5	;RP0=1, select bank1
  1455  059C  1303               	bcf	3,6	;RP1=0, select bank1
  1456  059D  0191               	clrf	17	;volatile
  1457                           
  1458                           ;user.c: 53: TRISA = 0b11111111;
  1459  059E  30FF               	movlw	255
  1460  059F  0085               	movwf	5	;volatile
  1461                           
  1462                           ;user.c: 54: TRISC = 0b11000000;
  1463  05A0  30C0               	movlw	192
  1464  05A1  0087               	movwf	7	;volatile
  1465                           
  1466                           ;user.c: 56: T0IE = 0;
  1467  05A2  128B               	bcf	11,5	;volatile
  1468  05A3  0008               	return
  1469  05A4                     __end_of_InitApp:	
  1470                           
  1471                           	psect	text4
  1472  03F3                     __ptext4:	
  1473 ;; *************** function _InitAnimation *****************
  1474 ;; Defined at:
  1475 ;;		line 61 in file "user.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  x               2   20[BANK0 ] int 
  1480 ;;  k               2   18[BANK0 ] int 
  1481 ;;  y               2   22[BANK0 ] int 
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1491 ;;      Params:         0       0       0       0
  1492 ;;      Locals:         0       6       0       0
  1493 ;;      Temps:          0       8       0       0
  1494 ;;      Totals:         0      14       0       0
  1495 ;;Total ram usage:       14 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    3
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           
  1506                           ;psect for function _InitAnimation
  1507  03F3                     _InitAnimation:	
  1508                           
  1509                           ;user.c: 64: for(int y = 0;y<6;y++){
  1510                           
  1511                           ;incstack = 0
  1512                           ; Regs used in _InitAnimation: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1513  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  1514  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  1515  03F5  01B6               	clrf	InitAnimation@y
  1516  03F6  01B7               	clrf	InitAnimation@y+1
  1517  03F7                     L10:	
  1518  03F7  0837               	movf	InitAnimation@y+1,w
  1519  03F8  3A80               	xorlw	128
  1520  03F9  00FF               	movwf	127
  1521  03FA  3080               	movlw	128
  1522  03FB  027F               	subwf	127,w
  1523  03FC  1D03               	skipz
  1524  03FD  2C00               	goto	u755
  1525  03FE  3006               	movlw	6
  1526  03FF  0236               	subwf	InitAnimation@y,w
  1527  0400                     u755:	
  1528  0400  1803               	btfsc	3,0
  1529  0401  0008               	return
  1530                           
  1531                           ;user.c: 65: for(int x =0,k = 7;x<8;x++,k--){
  1532  0402  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0403  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0404  01B4               	clrf	InitAnimation@x
  1535  0405  01B5               	clrf	InitAnimation@x+1
  1536  0406  3007               	movlw	7
  1537  0407  00B2               	movwf	InitAnimation@k
  1538  0408  3000               	movlw	0
  1539  0409  00B3               	movwf	InitAnimation@k+1
  1540  040A  0835               	movf	InitAnimation@x+1,w
  1541  040B  3A80               	xorlw	128
  1542  040C  00FF               	movwf	127
  1543  040D  3080               	movlw	128
  1544  040E  027F               	subwf	127,w
  1545  040F  1D03               	skipz
  1546  0410  2C13               	goto	u765
  1547  0411  3008               	movlw	8
  1548  0412  0234               	subwf	InitAnimation@x,w
  1549  0413                     u765:	
  1550  0413  1803               	btfsc	3,0
  1551  0414  2C63               	goto	l929
  1552  0415                     l921:	
  1553                           
  1554                           ;user.c: 66: buf[y][x] = (animation[y] >> k) & 1;
  1555  0415  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0416  1303               	bcf	3,6	;RP1=0, select bank0
  1557  0417  0837               	movf	InitAnimation@y+1,w
  1558  0418  00AB               	movwf	??_InitAnimation+1
  1559  0419  0836               	movf	InitAnimation@y,w
  1560  041A  00AA               	movwf	??_InitAnimation
  1561  041B  1003               	clrc
  1562  041C  0DAA               	rlf	??_InitAnimation,f
  1563  041D  0DAB               	rlf	??_InitAnimation+1,f
  1564  041E  3081               	movlw	high (_animation| (0+32768))
  1565  041F  072B               	addwf	??_InitAnimation+1,w
  1566  0420  00FF               	movwf	127
  1567  0421  3012               	movlw	low (_animation| (0+32768))
  1568  0422  072A               	addwf	??_InitAnimation,w
  1569  0423  0084               	movwf	4
  1570  0424  1803               	skipnc
  1571  0425  0AFF               	incf	127,f
  1572  0426  118A  2100  118A   	fcall	stringtab
  1573  0429  00AC               	movwf	??_InitAnimation+2
  1574  042A  118A  2100  118A   	fcall	stringtab
  1575  042D  00AD               	movwf	??_InitAnimation+3
  1576  042E  0A32               	incf	InitAnimation@k,w
  1577  042F  2C33               	goto	u774
  1578  0430                     u775:	
  1579  0430  1003               	clrc
  1580  0431  0CAD               	rrf	??_InitAnimation+3,f
  1581  0432  0CAC               	rrf	??_InitAnimation+2,f
  1582  0433                     u774:	
  1583  0433  3EFF               	addlw	-1
  1584  0434  1D03               	skipz
  1585  0435  2C30               	goto	u775
  1586  0436  082C               	movf	??_InitAnimation+2,w
  1587  0437  3901               	andlw	1
  1588  0438  00AE               	movwf	??_InitAnimation+4
  1589  0439  0836               	movf	InitAnimation@y,w
  1590  043A  00AF               	movwf	??_InitAnimation+5
  1591  043B  3003               	movlw	3
  1592  043C                     u785:	
  1593  043C  1003               	clrc
  1594  043D  0DAF               	rlf	??_InitAnimation+5,f
  1595  043E  3EFF               	addlw	-1
  1596  043F  1D03               	skipz
  1597  0440  2C3C               	goto	u785
  1598  0441  30A0               	movlw	(low (_buf| 0))& (0+255)
  1599  0442  072F               	addwf	??_InitAnimation+5,w
  1600  0443  00B0               	movwf	??_InitAnimation+6
  1601  0444  0834               	movf	InitAnimation@x,w
  1602  0445  0730               	addwf	??_InitAnimation+6,w
  1603  0446  00B1               	movwf	??_InitAnimation+7
  1604  0447  0831               	movf	??_InitAnimation+7,w
  1605  0448  0084               	movwf	4
  1606  0449  082E               	movf	??_InitAnimation+4,w
  1607  044A  1383               	bcf	3,7	;select IRP bank1
  1608  044B  0080               	movwf	0
  1609  044C  3001               	movlw	1
  1610  044D  07B4               	addwf	InitAnimation@x,f
  1611  044E  1803               	skipnc
  1612  044F  0AB5               	incf	InitAnimation@x+1,f
  1613  0450  3000               	movlw	0
  1614  0451  07B5               	addwf	InitAnimation@x+1,f
  1615  0452  30FF               	movlw	255
  1616  0453  07B2               	addwf	InitAnimation@k,f
  1617  0454  1803               	skipnc
  1618  0455  0AB3               	incf	InitAnimation@k+1,f
  1619  0456  30FF               	movlw	255
  1620  0457  07B3               	addwf	InitAnimation@k+1,f
  1621  0458  0835               	movf	InitAnimation@x+1,w
  1622  0459  3A80               	xorlw	128
  1623  045A  00FF               	movwf	127
  1624  045B  3080               	movlw	128
  1625  045C  027F               	subwf	127,w
  1626  045D  1D03               	skipz
  1627  045E  2C61               	goto	u795
  1628  045F  3008               	movlw	8
  1629  0460  0234               	subwf	InitAnimation@x,w
  1630  0461                     u795:	
  1631  0461  1C03               	skipc
  1632  0462  2C15               	goto	l921
  1633  0463                     l929:	
  1634  0463  3001               	movlw	1
  1635  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0466  07B6               	addwf	InitAnimation@y,f
  1638  0467  1803               	skipnc
  1639  0468  0AB7               	incf	InitAnimation@y+1,f
  1640  0469  3000               	movlw	0
  1641  046A  07B7               	addwf	InitAnimation@y+1,f
  1642  046B  2BF7               	goto	L10
  1643  046C                     __end_of_InitAnimation:	
  1644                           
  1645                           	psect	text5
  1646  05AA                     __ptext5:	
  1647 ;; *************** function _ConfigureOscillator *****************
  1648 ;; Defined at:
  1649 ;;		line 18 in file "system.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		None
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1663 ;;      Params:         0       0       0       0
  1664 ;;      Locals:         0       0       0       0
  1665 ;;      Temps:          0       0       0       0
  1666 ;;      Totals:         0       0       0       0
  1667 ;;Total ram usage:        0 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    3
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _ConfigureOscillator
  1679  05AA                     _ConfigureOscillator:	
  1680                           
  1681                           ;incstack = 0
  1682                           ; Regs used in _ConfigureOscillator: []
  1683  05AA  0008               	return
  1684  05AB                     __end_of_ConfigureOscillator:	
  1685                           
  1686                           	psect	text6
  1687  04A8                     __ptext6:	
  1688 ;; *************** function _ClearDisplay *****************
  1689 ;; Defined at:
  1690 ;;		line 72 in file "user.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  i               2   11[BANK0 ] int 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2, btemp+1
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1704 ;;      Params:         0       0       0       0
  1705 ;;      Locals:         0       2       0       0
  1706 ;;      Temps:          0       1       0       0
  1707 ;;      Totals:         0       3       0       0
  1708 ;;Total ram usage:        3 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    3
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function _ClearDisplay
  1720  04A8                     _ClearDisplay:	
  1721                           
  1722                           ;user.c: 77: PORTCbits.RC4 = 1;
  1723                           
  1724                           ;incstack = 0
  1725                           ; Regs used in _ClearDisplay: [wreg+status,2+btemp+1]
  1726  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1727  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1728  04AA  1607               	bsf	7,4	;volatile
  1729                           
  1730                           ;user.c: 79: PORTCbits.RC1 = 0;
  1731  04AB  1087               	bcf	7,1	;volatile
  1732                           
  1733                           ;user.c: 80: PORTCbits.RC0 = 1;
  1734  04AC  1407               	bsf	7,0	;volatile
  1735                           
  1736                           ;user.c: 82: for(int i = 0;i<8;i++){
  1737  04AD  01AB               	clrf	ClearDisplay@i
  1738  04AE  01AC               	clrf	ClearDisplay@i+1
  1739  04AF  082C               	movf	ClearDisplay@i+1,w
  1740  04B0  3A80               	xorlw	128
  1741  04B1  00FF               	movwf	127
  1742  04B2  3080               	movlw	128
  1743  04B3  027F               	subwf	127,w
  1744  04B4  1D03               	skipz
  1745  04B5  2CB8               	goto	u735
  1746  04B6  3008               	movlw	8
  1747  04B7  022B               	subwf	ClearDisplay@i,w
  1748  04B8                     u735:	
  1749  04B8  1803               	btfsc	3,0
  1750  04B9  2CD9               	goto	l79
  1751  04BA                     l78:	
  1752                           
  1753                           ;user.c: 83: PORTCbits.RC3 = 1;
  1754  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  1755  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1756  04BC  1587               	bsf	7,3	;volatile
  1757                           
  1758                           ;user.c: 84: PORTCbits.RC2 = 1;
  1759  04BD  1507               	bsf	7,2	;volatile
  1760                           
  1761                           ;user.c: 85: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1762  04BE  3006               	movlw	6
  1763  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  1764  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  1765  04C1  00AA               	movwf	??_ClearDisplay
  1766  04C2                     u1147:	
  1767  04C2  0BAA               	decfsz	??_ClearDisplay,f
  1768  04C3  2CC2               	goto	u1147
  1769                           
  1770                           ;user.c: 87: PORTCbits.RC3 = 0;
  1771  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  1772  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  1773  04C6  1187               	bcf	7,3	;volatile
  1774                           
  1775                           ;user.c: 88: PORTCbits.RC2 = 0;
  1776  04C7  1107               	bcf	7,2	;volatile
  1777  04C8  3001               	movlw	1
  1778  04C9  07AB               	addwf	ClearDisplay@i,f
  1779  04CA  1803               	skipnc
  1780  04CB  0AAC               	incf	ClearDisplay@i+1,f
  1781  04CC  3000               	movlw	0
  1782  04CD  07AC               	addwf	ClearDisplay@i+1,f
  1783  04CE  082C               	movf	ClearDisplay@i+1,w
  1784  04CF  3A80               	xorlw	128
  1785  04D0  00FF               	movwf	127
  1786  04D1  3080               	movlw	128
  1787  04D2  027F               	subwf	127,w
  1788  04D3  1D03               	skipz
  1789  04D4  2CD7               	goto	u745
  1790  04D5  3008               	movlw	8
  1791  04D6  022B               	subwf	ClearDisplay@i,w
  1792  04D7                     u745:	
  1793  04D7  1C03               	skipc
  1794  04D8  2CBA               	goto	l78
  1795  04D9                     l79:	
  1796                           
  1797                           ;user.c: 89: }
  1798                           ;user.c: 91: PORTCbits.RC4 = 0;
  1799  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1800  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1801  04DB  1207               	bcf	7,4	;volatile
  1802  04DC  0008               	return
  1803  04DD                     __end_of_ClearDisplay:	
  1804                           
  1805                           	psect	text7
  1806  0551                     __ptext7:	
  1807 ;; *************** function _AdvanceRow *****************
  1808 ;; Defined at:
  1809 ;;		line 97 in file "user.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, btemp+1
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1823 ;;      Params:         0       0       0       0
  1824 ;;      Locals:         0       0       0       0
  1825 ;;      Temps:          0       0       0       0
  1826 ;;      Totals:         0       0       0       0
  1827 ;;Total ram usage:        0 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    3
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           
  1838                           ;psect for function _AdvanceRow
  1839  0551                     _AdvanceRow:	
  1840                           
  1841                           ;user.c: 100: if(rowCount >= 6)
  1842                           
  1843                           ;incstack = 0
  1844                           ; Regs used in _AdvanceRow: [wreg+status,2+btemp+1]
  1845  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0553  0842               	movf	_rowCount+1,w
  1848  0554  3A80               	xorlw	128
  1849  0555  00FF               	movwf	127
  1850  0556  3080               	movlw	128
  1851  0557  027F               	subwf	127,w
  1852  0558  1D03               	skipz
  1853  0559  2D5C               	goto	u1035
  1854  055A  3006               	movlw	6
  1855  055B  0241               	subwf	_rowCount,w
  1856  055C                     u1035:	
  1857  055C  1C03               	skipc
  1858  055D  2D63               	goto	l979
  1859                           
  1860                           ;user.c: 101: {
  1861                           ;user.c: 102: PORTCbits.RC1 = 1;
  1862  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1863  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0560  1487               	bsf	7,1	;volatile
  1865                           
  1866                           ;user.c: 104: rowCount = 0;
  1867  0561  01C1               	clrf	_rowCount
  1868  0562  01C2               	clrf	_rowCount+1
  1869  0563                     l979:	
  1870                           
  1871                           ;user.c: 105: }
  1872                           ;user.c: 107: PORTCbits.RC3 = 1;
  1873  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0565  1587               	bsf	7,3	;volatile
  1876                           
  1877                           ;user.c: 108: PORTCbits.RC3 = 0;
  1878  0566  1187               	bcf	7,3	;volatile
  1879                           
  1880                           ;user.c: 110: rowCount++;
  1881  0567  3001               	movlw	1
  1882  0568  07C1               	addwf	_rowCount,f
  1883  0569  1803               	skipnc
  1884  056A  0AC2               	incf	_rowCount+1,f
  1885  056B  3000               	movlw	0
  1886  056C  07C2               	addwf	_rowCount+1,f
  1887  056D  0008               	return
  1888  056E                     __end_of_AdvanceRow:	
  1889                           
  1890                           	psect	text8
  1891  0232                     __ptext8:	
  1892 ;; *************** function _AdvanceAnimation *****************
  1893 ;; Defined at:
  1894 ;;		line 180 in file "user.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;		None
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  x               2   26[BANK0 ] int 
  1899 ;;  k               2   24[BANK0 ] int 
  1900 ;;  y               2   28[BANK0 ] int 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1910 ;;      Params:         0       0       0       0
  1911 ;;      Locals:         0       6       0       0
  1912 ;;      Temps:          0       8       0       0
  1913 ;;      Totals:         0      14       0       0
  1914 ;;Total ram usage:       14 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    4
  1917 ;; This function calls:
  1918 ;;		___wmul
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _AdvanceAnimation
  1926  0232                     _AdvanceAnimation:	
  1927                           
  1928                           ;user.c: 181: if(frame >= maxFrames){
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _AdvanceAnimation: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1932  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0234  0848               	movf	_frame+1,w
  1935  0235  3A80               	xorlw	128
  1936  0236  00B0               	movwf	??_AdvanceAnimation
  1937  0237  0846               	movf	_maxFrames+1,w
  1938  0238  3A80               	xorlw	128
  1939  0239  0230               	subwf	??_AdvanceAnimation,w
  1940  023A  1D03               	skipz
  1941  023B  2A3E               	goto	u665
  1942  023C  0845               	movf	_maxFrames,w
  1943  023D  0247               	subwf	_frame,w
  1944  023E                     u665:	
  1945  023E  1C03               	skipc
  1946  023F  2A45               	goto	l855
  1947                           
  1948                           ;user.c: 182: frame = 0;
  1949  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0242  01C7               	clrf	_frame
  1952  0243  01C8               	clrf	_frame+1
  1953                           
  1954                           ;user.c: 183: } else {
  1955  0244  2A4D               	goto	l857
  1956  0245                     l855:	
  1957                           
  1958                           ;user.c: 184: frame++;
  1959  0245  3001               	movlw	1
  1960  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0248  07C7               	addwf	_frame,f
  1963  0249  1803               	skipnc
  1964  024A  0AC8               	incf	_frame+1,f
  1965  024B  3000               	movlw	0
  1966  024C  07C8               	addwf	_frame+1,f
  1967  024D                     l857:	
  1968                           
  1969                           ;user.c: 185: }
  1970                           ;user.c: 188: for(int y = 0;y<6;y++){
  1971  024D  01BC               	clrf	AdvanceAnimation@y
  1972  024E  01BD               	clrf	AdvanceAnimation@y+1
  1973  024F                     L11:	
  1974  024F  083D               	movf	AdvanceAnimation@y+1,w
  1975  0250  3A80               	xorlw	128
  1976  0251  00FF               	movwf	127
  1977  0252  3080               	movlw	128
  1978  0253  027F               	subwf	127,w
  1979  0254  1D03               	skipz
  1980  0255  2A58               	goto	u675
  1981  0256  3006               	movlw	6
  1982  0257  023C               	subwf	AdvanceAnimation@y,w
  1983  0258                     u675:	
  1984  0258  1803               	btfsc	3,0
  1985  0259  0008               	return
  1986                           
  1987                           ;user.c: 191: for(int x =0,k = 7;x<8;x++,k--){
  1988  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1989  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1990  025C  01BA               	clrf	AdvanceAnimation@x
  1991  025D  01BB               	clrf	AdvanceAnimation@x+1
  1992  025E  3007               	movlw	7
  1993  025F  00B8               	movwf	AdvanceAnimation@k
  1994  0260  3000               	movlw	0
  1995  0261  00B9               	movwf	AdvanceAnimation@k+1
  1996  0262  083B               	movf	AdvanceAnimation@x+1,w
  1997  0263  3A80               	xorlw	128
  1998  0264  00FF               	movwf	127
  1999  0265  3080               	movlw	128
  2000  0266  027F               	subwf	127,w
  2001  0267  1D03               	skipz
  2002  0268  2A6B               	goto	u685
  2003  0269  3008               	movlw	8
  2004  026A  023A               	subwf	AdvanceAnimation@x,w
  2005  026B                     u685:	
  2006  026B  1803               	btfsc	3,0
  2007  026C  2ACC               	goto	l879
  2008  026D                     l871:	
  2009                           
  2010                           ;user.c: 192: buf[y][x] = (animation[(frame*frameSize)+y] >> k) & 1;
  2011  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2012  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2013  026F  0848               	movf	_frame+1,w
  2014  0270  00AB               	movwf	___wmul@multiplier+1
  2015  0271  0847               	movf	_frame,w
  2016  0272  00AA               	movwf	___wmul@multiplier
  2017  0273  0844               	movf	_frameSize+1,w
  2018  0274  00AD               	movwf	___wmul@multiplicand+1
  2019  0275  0843               	movf	_frameSize,w
  2020  0276  00AC               	movwf	___wmul@multiplicand
  2021  0277  118A  250D  118A   	fcall	___wmul
  2022  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2023  027B  1303               	bcf	3,6	;RP1=0, select bank0
  2024  027C  083C               	movf	AdvanceAnimation@y,w
  2025  027D  072A               	addwf	?___wmul,w
  2026  027E  00B0               	movwf	??_AdvanceAnimation
  2027  027F  083D               	movf	AdvanceAnimation@y+1,w
  2028  0280  1803               	skipnc
  2029  0281  0A3D               	incf	AdvanceAnimation@y+1,w
  2030  0282  072B               	addwf	?___wmul+1,w
  2031  0283  00B1               	movwf	??_AdvanceAnimation+1
  2032  0284  1003               	clrc
  2033  0285  0DB0               	rlf	??_AdvanceAnimation,f
  2034  0286  0DB1               	rlf	??_AdvanceAnimation+1,f
  2035  0287  3081               	movlw	high (_animation| (0+32768))
  2036  0288  0731               	addwf	??_AdvanceAnimation+1,w
  2037  0289  00FF               	movwf	127
  2038  028A  3012               	movlw	low (_animation| (0+32768))
  2039  028B  0730               	addwf	??_AdvanceAnimation,w
  2040  028C  0084               	movwf	4
  2041  028D  1803               	skipnc
  2042  028E  0AFF               	incf	127,f
  2043  028F  118A  2100  118A   	fcall	stringtab
  2044  0292  00B2               	movwf	??_AdvanceAnimation+2
  2045  0293  118A  2100  118A   	fcall	stringtab
  2046  0296  00B3               	movwf	??_AdvanceAnimation+3
  2047  0297  0A38               	incf	AdvanceAnimation@k,w
  2048  0298  2A9C               	goto	u694
  2049  0299                     u695:	
  2050  0299  1003               	clrc
  2051  029A  0CB3               	rrf	??_AdvanceAnimation+3,f
  2052  029B  0CB2               	rrf	??_AdvanceAnimation+2,f
  2053  029C                     u694:	
  2054  029C  3EFF               	addlw	-1
  2055  029D  1D03               	skipz
  2056  029E  2A99               	goto	u695
  2057  029F  0832               	movf	??_AdvanceAnimation+2,w
  2058  02A0  3901               	andlw	1
  2059  02A1  00B4               	movwf	??_AdvanceAnimation+4
  2060  02A2  083C               	movf	AdvanceAnimation@y,w
  2061  02A3  00B5               	movwf	??_AdvanceAnimation+5
  2062  02A4  3003               	movlw	3
  2063  02A5                     u705:	
  2064  02A5  1003               	clrc
  2065  02A6  0DB5               	rlf	??_AdvanceAnimation+5,f
  2066  02A7  3EFF               	addlw	-1
  2067  02A8  1D03               	skipz
  2068  02A9  2AA5               	goto	u705
  2069  02AA  30A0               	movlw	(low (_buf| 0))& (0+255)
  2070  02AB  0735               	addwf	??_AdvanceAnimation+5,w
  2071  02AC  00B6               	movwf	??_AdvanceAnimation+6
  2072  02AD  083A               	movf	AdvanceAnimation@x,w
  2073  02AE  0736               	addwf	??_AdvanceAnimation+6,w
  2074  02AF  00B7               	movwf	??_AdvanceAnimation+7
  2075  02B0  0837               	movf	??_AdvanceAnimation+7,w
  2076  02B1  0084               	movwf	4
  2077  02B2  0834               	movf	??_AdvanceAnimation+4,w
  2078  02B3  1383               	bcf	3,7	;select IRP bank1
  2079  02B4  0080               	movwf	0
  2080  02B5  3001               	movlw	1
  2081  02B6  07BA               	addwf	AdvanceAnimation@x,f
  2082  02B7  1803               	skipnc
  2083  02B8  0ABB               	incf	AdvanceAnimation@x+1,f
  2084  02B9  3000               	movlw	0
  2085  02BA  07BB               	addwf	AdvanceAnimation@x+1,f
  2086  02BB  30FF               	movlw	255
  2087  02BC  07B8               	addwf	AdvanceAnimation@k,f
  2088  02BD  1803               	skipnc
  2089  02BE  0AB9               	incf	AdvanceAnimation@k+1,f
  2090  02BF  30FF               	movlw	255
  2091  02C0  07B9               	addwf	AdvanceAnimation@k+1,f
  2092  02C1  083B               	movf	AdvanceAnimation@x+1,w
  2093  02C2  3A80               	xorlw	128
  2094  02C3  00FF               	movwf	127
  2095  02C4  3080               	movlw	128
  2096  02C5  027F               	subwf	127,w
  2097  02C6  1D03               	skipz
  2098  02C7  2ACA               	goto	u715
  2099  02C8  3008               	movlw	8
  2100  02C9  023A               	subwf	AdvanceAnimation@x,w
  2101  02CA                     u715:	
  2102  02CA  1C03               	skipc
  2103  02CB  2A6D               	goto	l871
  2104  02CC                     l879:	
  2105  02CC  3001               	movlw	1
  2106  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2107  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2108  02CF  07BC               	addwf	AdvanceAnimation@y,f
  2109  02D0  1803               	skipnc
  2110  02D1  0ABD               	incf	AdvanceAnimation@y+1,f
  2111  02D2  3000               	movlw	0
  2112  02D3  07BD               	addwf	AdvanceAnimation@y+1,f
  2113  02D4  2A4F               	goto	L11
  2114  02D5                     __end_of_AdvanceAnimation:	
  2115                           
  2116                           	psect	text9
  2117  050D                     __ptext9:	
  2118 ;; *************** function ___wmul *****************
  2119 ;; Defined at:
  2120 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  multiplier      2   10[BANK0 ] unsigned int 
  2123 ;;  multiplicand    2   12[BANK0 ] unsigned int 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  product         2   14[BANK0 ] unsigned int 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  2   10[BANK0 ] unsigned int 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2135 ;;      Params:         0       4       0       0
  2136 ;;      Locals:         0       2       0       0
  2137 ;;      Temps:          0       0       0       0
  2138 ;;      Totals:         0       6       0       0
  2139 ;;Total ram usage:        6 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    3
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_AdvanceAnimation
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function ___wmul
  2151  050D                     ___wmul:	
  2152                           
  2153                           ;incstack = 0
  2154                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2155  050D  1283               	bcf	3,5	;RP0=0, select bank0
  2156  050E  1303               	bcf	3,6	;RP1=0, select bank0
  2157  050F  01AE               	clrf	___wmul@product
  2158  0510  01AF               	clrf	___wmul@product+1
  2159  0511                     l825:	
  2160  0511  1C2A               	btfss	___wmul@multiplier,0
  2161  0512  2D19               	goto	l203
  2162  0513  082C               	movf	___wmul@multiplicand,w
  2163  0514  07AE               	addwf	___wmul@product,f
  2164  0515  1803               	skipnc
  2165  0516  0AAF               	incf	___wmul@product+1,f
  2166  0517  082D               	movf	___wmul@multiplicand+1,w
  2167  0518  07AF               	addwf	___wmul@product+1,f
  2168  0519                     l203:	
  2169  0519  3001               	movlw	1
  2170  051A                     u595:	
  2171  051A  1003               	clrc
  2172  051B  0DAC               	rlf	___wmul@multiplicand,f
  2173  051C  0DAD               	rlf	___wmul@multiplicand+1,f
  2174  051D  3EFF               	addlw	-1
  2175  051E  1D03               	skipz
  2176  051F  2D1A               	goto	u595
  2177  0520  3001               	movlw	1
  2178  0521                     u605:	
  2179  0521  1003               	clrc
  2180  0522  0CAB               	rrf	___wmul@multiplier+1,f
  2181  0523  0CAA               	rrf	___wmul@multiplier,f
  2182  0524  3EFF               	addlw	-1
  2183  0525  1D03               	skipz
  2184  0526  2D21               	goto	u605
  2185  0527  082A               	movf	___wmul@multiplier,w
  2186  0528  042B               	iorwf	___wmul@multiplier+1,w
  2187  0529  1D03               	btfss	3,2
  2188  052A  2D11               	goto	l825
  2189  052B  082F               	movf	___wmul@product+1,w
  2190  052C  00AB               	movwf	?___wmul+1
  2191  052D  082E               	movf	___wmul@product,w
  2192  052E  00AA               	movwf	?___wmul
  2193  052F  0008               	return
  2194  0530                     __end_of___wmul:	
  2195                           
  2196                           	psect	text10
  2197  056E                     __ptext10:	
  2198 ;; *************** function _isr *****************
  2199 ;; Defined at:
  2200 ;;		line 24 in file "interrupts.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2214 ;;      Params:         0       0       0       0
  2215 ;;      Locals:         0       0       0       0
  2216 ;;      Temps:          0       4       0       0
  2217 ;;      Totals:         0       4       0       0
  2218 ;;Total ram usage:        4 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    2
  2221 ;; This function calls:
  2222 ;;		i1_AdvanceAnimation
  2223 ;; This function is called by:
  2224 ;;		Interrupt level 1
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _isr
  2230  056E                     _isr:	
  2231                           
  2232                           ;interrupts.c: 35: if(T0IF == 1)
  2233  056E  1D0B               	btfss	11,2	;volatile
  2234  056F  2D74               	goto	i1l11
  2235                           
  2236                           ;interrupts.c: 36: {
  2237                           ;interrupts.c: 37: AdvanceAnimation();
  2238  0570  118A  22D5  118A   	fcall	i1_AdvanceAnimation
  2239                           
  2240                           ;interrupts.c: 38: T0IF = 0;
  2241  0573  110B               	bcf	11,2	;volatile
  2242  0574                     i1l11:	
  2243                           ;interrupts.c: 40: else
  2244                           ;interrupts.c: 41: {
  2245                           
  2246                           ;interrupts.c: 39: }
  2247                           
  2248  0574  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0575  1303               	bcf	3,6	;RP1=0, select bank0
  2250  0576  0829               	movf	??_isr+3,w
  2251  0577  00FF               	movwf	127
  2252  0578  0828               	movf	??_isr+2,w
  2253  0579  008A               	movwf	10
  2254  057A  0827               	movf	??_isr+1,w
  2255  057B  0084               	movwf	4
  2256  057C  0E26               	swapf	??_isr^0,w
  2257  057D  0083               	movwf	3
  2258  057E  0EFE               	swapf	126,f
  2259  057F  0E7E               	swapf	126,w
  2260  0580  0009               	retfie
  2261  0581                     __end_of_isr:	
  2262                           
  2263                           	psect	intentry
  2264  0004                     __pintentry:	
  2265                           ;incstack = 0
  2266                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2267                           
  2268  0004                     interrupt_function:	
  2269  007E                     saved_w	set	btemp
  2270  0004  00FE               	movwf	btemp
  2271  0005  0E03               	swapf	3,w
  2272  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0008  00A6               	movwf	??_isr
  2275  0009  0804               	movf	4,w
  2276  000A  00A7               	movwf	??_isr+1
  2277  000B  080A               	movf	10,w
  2278  000C  00A8               	movwf	??_isr+2
  2279  000D  087F               	movf	btemp+1,w
  2280  000E  00A9               	movwf	??_isr+3
  2281  000F  118A  2D6E         	ljmp	_isr
  2282                           
  2283                           	psect	text11
  2284  02D5                     __ptext11:	
  2285 ;; *************** function i1_AdvanceAnimation *****************
  2286 ;; Defined at:
  2287 ;;		line 180 in file "user.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  AdvanceAnima    2    4[BANK0 ] int 
  2292 ;;  AdvanceAnima    2    2[BANK0 ] int 
  2293 ;;  AdvanceAnima    2    0[BANK0 ] int 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2303 ;;      Params:         0       0       0       0
  2304 ;;      Locals:         0       6       0       0
  2305 ;;      Temps:          8       0       0       0
  2306 ;;      Totals:         8       6       0       0
  2307 ;;Total ram usage:       14 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    1
  2310 ;; This function calls:
  2311 ;;		i1___wmul
  2312 ;; This function is called by:
  2313 ;;		_isr
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function i1_AdvanceAnimation
  2319  02D5                     i1_AdvanceAnimation:	
  2320                           
  2321                           ;user.c: 181: if(frame >= maxFrames){
  2322                           
  2323                           ;incstack = 0
  2324                           ; Regs used in i1_AdvanceAnimation: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2325  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2326  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2327  02D7  0848               	movf	_frame+1,w
  2328  02D8  3A80               	xorlw	128
  2329  02D9  00F6               	movwf	??i1_AdvanceAnimation
  2330  02DA  0846               	movf	_maxFrames+1,w
  2331  02DB  3A80               	xorlw	128
  2332  02DC  0276               	subwf	??i1_AdvanceAnimation,w
  2333  02DD  1D03               	skipz
  2334  02DE  2AE1               	goto	u104_25
  2335  02DF  0845               	movf	_maxFrames,w
  2336  02E0  0247               	subwf	_frame,w
  2337  02E1                     u104_25:	
  2338  02E1  1C03               	skipc
  2339  02E2  2AE8               	goto	i1l989
  2340                           
  2341                           ;user.c: 182: frame = 0;
  2342  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2343  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2344  02E5  01C7               	clrf	_frame
  2345  02E6  01C8               	clrf	_frame+1
  2346                           
  2347                           ;user.c: 183: } else {
  2348  02E7  2AF0               	goto	i1l991
  2349  02E8                     i1l989:	
  2350                           
  2351                           ;user.c: 184: frame++;
  2352  02E8  3001               	movlw	1
  2353  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2354  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2355  02EB  07C7               	addwf	_frame,f
  2356  02EC  1803               	skipnc
  2357  02ED  0AC8               	incf	_frame+1,f
  2358  02EE  3000               	movlw	0
  2359  02EF  07C8               	addwf	_frame+1,f
  2360  02F0                     i1l991:	
  2361                           
  2362                           ;user.c: 185: }
  2363                           ;user.c: 188: for(int y = 0;y<6;y++){
  2364  02F0  01A4               	clrf	i1AdvanceAnimation@y
  2365  02F1  01A5               	clrf	i1AdvanceAnimation@y+1
  2366  02F2                     L12:	
  2367  02F2  0825               	movf	i1AdvanceAnimation@y+1,w
  2368  02F3  3A80               	xorlw	128
  2369  02F4  00FF               	movwf	127
  2370  02F5  3080               	movlw	128
  2371  02F6  027F               	subwf	127,w
  2372  02F7  1D03               	skipz
  2373  02F8  2AFB               	goto	u105_25
  2374  02F9  3006               	movlw	6
  2375  02FA  0224               	subwf	i1AdvanceAnimation@y,w
  2376  02FB                     u105_25:	
  2377  02FB  1803               	btfsc	3,0
  2378  02FC  0008               	return
  2379                           
  2380                           ;user.c: 191: for(int x =0,k = 7;x<8;x++,k--){
  2381  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2382  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2383  02FF  01A2               	clrf	i1AdvanceAnimation@x
  2384  0300  01A3               	clrf	i1AdvanceAnimation@x+1
  2385  0301  3007               	movlw	7
  2386  0302  00A0               	movwf	i1AdvanceAnimation@k
  2387  0303  3000               	movlw	0
  2388  0304  00A1               	movwf	i1AdvanceAnimation@k+1
  2389  0305  0823               	movf	i1AdvanceAnimation@x+1,w
  2390  0306  3A80               	xorlw	128
  2391  0307  00FF               	movwf	127
  2392  0308  3080               	movlw	128
  2393  0309  027F               	subwf	127,w
  2394  030A  1D03               	skipz
  2395  030B  2B0E               	goto	u106_25
  2396  030C  3008               	movlw	8
  2397  030D  0222               	subwf	i1AdvanceAnimation@x,w
  2398  030E                     u106_25:	
  2399  030E  1803               	btfsc	3,0
  2400  030F  2B6F               	goto	i1l1013
  2401  0310                     i1l1005:	
  2402                           
  2403                           ;user.c: 192: buf[y][x] = (animation[(frame*frameSize)+y] >> k) & 1;
  2404  0310  1283               	bcf	3,5	;RP0=0, select bank0
  2405  0311  1303               	bcf	3,6	;RP1=0, select bank0
  2406  0312  0848               	movf	_frame+1,w
  2407  0313  00F1               	movwf	i1___wmul@multiplier+1
  2408  0314  0847               	movf	_frame,w
  2409  0315  00F0               	movwf	i1___wmul@multiplier
  2410  0316  0844               	movf	_frameSize+1,w
  2411  0317  00F3               	movwf	i1___wmul@multiplicand+1
  2412  0318  0843               	movf	_frameSize,w
  2413  0319  00F2               	movwf	i1___wmul@multiplicand
  2414  031A  118A  2530  118A   	fcall	i1___wmul
  2415  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2416  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2417  031F  0824               	movf	i1AdvanceAnimation@y,w
  2418  0320  0770               	addwf	?i1___wmul,w
  2419  0321  00F6               	movwf	??i1_AdvanceAnimation
  2420  0322  0825               	movf	i1AdvanceAnimation@y+1,w
  2421  0323  1803               	skipnc
  2422  0324  0A25               	incf	i1AdvanceAnimation@y+1,w
  2423  0325  0771               	addwf	?i1___wmul+1,w
  2424  0326  00F7               	movwf	??i1_AdvanceAnimation+1
  2425  0327  1003               	clrc
  2426  0328  0DF6               	rlf	??i1_AdvanceAnimation,f
  2427  0329  0DF7               	rlf	??i1_AdvanceAnimation+1,f
  2428  032A  3081               	movlw	high (_animation| (0+32768))
  2429  032B  0777               	addwf	??i1_AdvanceAnimation+1,w
  2430  032C  00FF               	movwf	127
  2431  032D  3012               	movlw	low (_animation| (0+32768))
  2432  032E  0776               	addwf	??i1_AdvanceAnimation,w
  2433  032F  0084               	movwf	4
  2434  0330  1803               	skipnc
  2435  0331  0AFF               	incf	127,f
  2436  0332  118A  2100  118A   	fcall	stringtab
  2437  0335  00F8               	movwf	??i1_AdvanceAnimation+2
  2438  0336  118A  2100  118A   	fcall	stringtab
  2439  0339  00F9               	movwf	??i1_AdvanceAnimation+3
  2440  033A  0A20               	incf	i1AdvanceAnimation@k,w
  2441  033B  2B3F               	goto	u107_24
  2442  033C                     u107_25:	
  2443  033C  1003               	clrc
  2444  033D  0CF9               	rrf	??i1_AdvanceAnimation+3,f
  2445  033E  0CF8               	rrf	??i1_AdvanceAnimation+2,f
  2446  033F                     u107_24:	
  2447  033F  3EFF               	addlw	-1
  2448  0340  1D03               	skipz
  2449  0341  2B3C               	goto	u107_25
  2450  0342  0878               	movf	??i1_AdvanceAnimation+2,w
  2451  0343  3901               	andlw	1
  2452  0344  00FA               	movwf	??i1_AdvanceAnimation+4
  2453  0345  0824               	movf	i1AdvanceAnimation@y,w
  2454  0346  00FB               	movwf	??i1_AdvanceAnimation+5
  2455  0347  3003               	movlw	3
  2456  0348                     u108_25:	
  2457  0348  1003               	clrc
  2458  0349  0DFB               	rlf	??i1_AdvanceAnimation+5,f
  2459  034A  3EFF               	addlw	-1
  2460  034B  1D03               	skipz
  2461  034C  2B48               	goto	u108_25
  2462  034D  30A0               	movlw	(low (_buf| 0))& (0+255)
  2463  034E  077B               	addwf	??i1_AdvanceAnimation+5,w
  2464  034F  00FC               	movwf	??i1_AdvanceAnimation+6
  2465  0350  0822               	movf	i1AdvanceAnimation@x,w
  2466  0351  077C               	addwf	??i1_AdvanceAnimation+6,w
  2467  0352  00FD               	movwf	??i1_AdvanceAnimation+7
  2468  0353  087D               	movf	??i1_AdvanceAnimation+7,w
  2469  0354  0084               	movwf	4
  2470  0355  087A               	movf	??i1_AdvanceAnimation+4,w
  2471  0356  1383               	bcf	3,7	;select IRP bank1
  2472  0357  0080               	movwf	0
  2473  0358  3001               	movlw	1
  2474  0359  07A2               	addwf	i1AdvanceAnimation@x,f
  2475  035A  1803               	skipnc
  2476  035B  0AA3               	incf	i1AdvanceAnimation@x+1,f
  2477  035C  3000               	movlw	0
  2478  035D  07A3               	addwf	i1AdvanceAnimation@x+1,f
  2479  035E  30FF               	movlw	255
  2480  035F  07A0               	addwf	i1AdvanceAnimation@k,f
  2481  0360  1803               	skipnc
  2482  0361  0AA1               	incf	i1AdvanceAnimation@k+1,f
  2483  0362  30FF               	movlw	255
  2484  0363  07A1               	addwf	i1AdvanceAnimation@k+1,f
  2485  0364  0823               	movf	i1AdvanceAnimation@x+1,w
  2486  0365  3A80               	xorlw	128
  2487  0366  00FF               	movwf	127
  2488  0367  3080               	movlw	128
  2489  0368  027F               	subwf	127,w
  2490  0369  1D03               	skipz
  2491  036A  2B6D               	goto	u109_25
  2492  036B  3008               	movlw	8
  2493  036C  0222               	subwf	i1AdvanceAnimation@x,w
  2494  036D                     u109_25:	
  2495  036D  1C03               	skipc
  2496  036E  2B10               	goto	i1l1005
  2497  036F                     i1l1013:	
  2498  036F  3001               	movlw	1
  2499  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2501  0372  07A4               	addwf	i1AdvanceAnimation@y,f
  2502  0373  1803               	skipnc
  2503  0374  0AA5               	incf	i1AdvanceAnimation@y+1,f
  2504  0375  3000               	movlw	0
  2505  0376  07A5               	addwf	i1AdvanceAnimation@y+1,f
  2506  0377  2AF2               	goto	L12
  2507  0378                     __end_ofi1_AdvanceAnimation:	
  2508                           
  2509                           	psect	text12
  2510  0530                     __ptext12:	
  2511 ;; *************** function i1___wmul *****************
  2512 ;; Defined at:
  2513 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  multiplier      2    0[COMMON] unsigned int 
  2516 ;;  multiplicand    2    2[COMMON] unsigned int 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  __wmul          2    4[COMMON] unsigned int 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  2    0[COMMON] unsigned int 
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2528 ;;      Params:         4       0       0       0
  2529 ;;      Locals:         2       0       0       0
  2530 ;;      Temps:          0       0       0       0
  2531 ;;      Totals:         6       0       0       0
  2532 ;;Total ram usage:        6 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; This function calls:
  2535 ;;		Nothing
  2536 ;; This function is called by:
  2537 ;;		i1_AdvanceAnimation
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           
  2542                           ;psect for function i1___wmul
  2543  0530                     i1___wmul:	
  2544                           
  2545                           ;incstack = 0
  2546                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  2547  0530  01F4               	clrf	i1___wmul@product
  2548  0531  01F5               	clrf	i1___wmul@product+1
  2549  0532                     i1l839:	
  2550  0532  1C70               	btfss	i1___wmul@multiplier,0
  2551  0533  2D3A               	goto	i1l203
  2552  0534  0872               	movf	i1___wmul@multiplicand,w
  2553  0535  07F4               	addwf	i1___wmul@product,f
  2554  0536  1803               	skipnc
  2555  0537  0AF5               	incf	i1___wmul@product+1,f
  2556  0538  0873               	movf	i1___wmul@multiplicand+1,w
  2557  0539  07F5               	addwf	i1___wmul@product+1,f
  2558  053A                     i1l203:	
  2559  053A  3001               	movlw	1
  2560  053B                     u63_25:	
  2561  053B  1003               	clrc
  2562  053C  0DF2               	rlf	i1___wmul@multiplicand,f
  2563  053D  0DF3               	rlf	i1___wmul@multiplicand+1,f
  2564  053E  3EFF               	addlw	-1
  2565  053F  1D03               	skipz
  2566  0540  2D3B               	goto	u63_25
  2567  0541  3001               	movlw	1
  2568  0542                     u64_25:	
  2569  0542  1003               	clrc
  2570  0543  0CF1               	rrf	i1___wmul@multiplier+1,f
  2571  0544  0CF0               	rrf	i1___wmul@multiplier,f
  2572  0545  3EFF               	addlw	-1
  2573  0546  1D03               	skipz
  2574  0547  2D42               	goto	u64_25
  2575  0548  0870               	movf	i1___wmul@multiplier,w
  2576  0549  0471               	iorwf	i1___wmul@multiplier+1,w
  2577  054A  1D03               	btfss	3,2
  2578  054B  2D32               	goto	i1l839
  2579  054C  0875               	movf	i1___wmul@product+1,w
  2580  054D  00F1               	movwf	?i1___wmul+1
  2581  054E  0874               	movf	i1___wmul@product,w
  2582  054F  00F0               	movwf	?i1___wmul
  2583  0550  0008               	return
  2584  0551                     __end_ofi1___wmul:	
  2585  007E                     btemp	set	126	;btemp
  2586  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    288
    Data        54
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      42
    BANK1            80      0      48
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_AdvanceAnimation
    i1_AdvanceAnimation->i1___wmul

Critical Paths under _main in BANK0

    _main->_AdvanceAnimation
    _AdvanceAnimation->___wmul

Critical Paths under _isr in BANK0

    _isr->i1_AdvanceAnimation

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     811
                                             30 BANK0      3     3      0
                   _AdvanceAnimation
                         _AdvanceRow
                       _ClearDisplay
                _ConfigureOscillator
                      _InitAnimation
                            _InitApp
                    _PopulateColumns
                       _ReadyDisplay
 ---------------------------------------------------------------------------------
 (1) _ReadyDisplay                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PopulateColumns                                      5     5      0     156
                                             10 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitAnimation                                       14    14      0     182
                                             10 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearDisplay                                         3     3      0      46
                                             10 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _AdvanceRow                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AdvanceAnimation                                    14    14      0     402
                                             16 BANK0     14    14      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                             10 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0     326
                                              6 BANK0      4     4      0
                 i1_AdvanceAnimation
 ---------------------------------------------------------------------------------
 (4) i1_AdvanceAnimation                                  14    14      0     326
                                              6 COMMON     8     8      0
                                              0 BANK0      6     6      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AdvanceAnimation
     ___wmul
   _AdvanceRow
   _ClearDisplay
   _ConfigureOscillator
   _InitAnimation
   _InitApp
   _PopulateColumns
   _ReadyDisplay

 _isr (ROOT)
   i1_AdvanceAnimation
     i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      30       5       60.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      2A       3       52.5%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      68      10        0.0%
ABS                  0      0      68       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Sep 25 22:26:43 2018

                           pc 0002                   __CFG_CP$OFF 0000                            l78 04BA  
                          l79 04D9                            l95 03E8                            fsr 0004  
         ___wmul@multiplicand 002C              i1___wmul@product 0074                           l203 0519  
                         l825 0511                           l921 0415                           l871 026D  
                         l855 0245                           l951 03A2                           l943 0381  
                         l857 024D                           l929 0463                           l961 03DE  
                         l955 03B2                           l947 0391                           l879 02CC  
                         l959 03C3                           l979 0563                 _InitAnimation 03F3  
                __CFG_CPD$OFF 0000                           u605 0521                           u705 02A5  
                         u715 02CA                           u735 04B8                           u665 023E  
                         u745 04D7                           u595 051A                           u675 0258  
                         u755 0400                           u915 03A9                           u835 0389  
                         u685 026B                           u765 0413                           u694 029C  
                         u774 0433                           u695 0299                           u775 0430  
                         u785 043C                           u795 0461                           u955 03B9  
                         u875 0399                           u990 03DB                           u985 03C6  
                         _buf 00A0                           _isr 056E                           fsr0 0004  
                         indf 0000                  __CFG_IESO$ON 0000                          l1035 047F  
                        ?_isr 0070                    _AdvanceRow 0551                          _T0IE 005D  
                        _T0IF 005A                          u1035 055C                          u1125 04A2  
                        u1137 0486                          u1147 04C2                   main@counter 003F  
                        i1l11 0574                 __CFG_FCMEN$ON 0000                          _main 046C  
                        btemp 007E                          start 0011                 __CFG_MCLRE$ON 0000  
             __end_of_InitApp 05A4                         ??_isr 0026                ?_InitAnimation 0070  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                         _ANSEL 0091  
                       i1l203 053A                         i1l839 0532                         i1l991 02F0  
                       i1l989 02E8                         u63_25 053B                         u64_25 0542  
                       _TRISA 0085                         _TRISC 0087           _ConfigureOscillator 05AA  
                       _frame 0047                __CFG_BOREN$OFF 0000                         pclath 000A  
            __end_ofi1___wmul 0551                         status 0003           i1___wmul@multiplier 0070  
                       wtemp0 007E          ?_ConfigureOscillator 0070               __initialization 0013  
               ?_ReadyDisplay 0070                  __end_of_main 04A8              PopulateColumns@i 002D  
                      ??_main 003E                 ClearDisplay@i 002B         __size_of_ClearDisplay 0035  
                 ?_AdvanceRow 0070                        i1l1013 036F                        i1l1005 0310  
                      u104_25 02E1                        u105_25 02FB                        u106_25 030E  
                      u107_24 033F                        u107_25 033C                        u108_25 0348  
                      u109_25 036D                     ??_InitApp 002A         ??_ConfigureOscillator 002A  
              __CFG_PWRTE$OFF 0000                ??_ReadyDisplay 002A                        ___wmul 050D  
             ??_InitAnimation 002A                  _ClearDisplay 04A8                        saved_w 007E  
             _PopulateColumns 0378       __end_of__initialization 002C             ?_AdvanceAnimation 0070  
          ??_AdvanceAnimation 0030                __pcstackCOMMON 0070                  __pidataBANK0 05A4  
                __pidataBANK1 04DD           __size_of_AdvanceRow 001D                     ?i1___wmul 0070  
           AdvanceAnimation@k 0038             AdvanceAnimation@x 003A             AdvanceAnimation@y 003C  
                  __pbssBANK0 0047   __size_ofi1_AdvanceAnimation 00A3                    __pmaintext 046C  
                     ?___wmul 002A                    __pintentry 0004                    ??i1___wmul 0074  
     __end_of_PopulateColumns 03F3          __end_of_ReadyDisplay 059B                    __stringtab 0100  
                     _InitApp 059B             __end_of_animation 0232               __size_of___wmul 0023  
                  _currentRow 0049                       __ptext1 0591                       __ptext2 0378  
                     __ptext3 059B                       __ptext4 03F3                       __ptext5 05AA  
                     __ptext6 04A8                       __ptext7 0551                       __ptext8 0232  
                     __ptext9 050D                  __size_of_isr 0013                  ??_AdvanceRow 002A  
        end_of_initialization 002C                  __pstringtext 0100         i1___wmul@multiplicand 0072  
          __end_of_AdvanceRow 056E                     _PORTCbits 0007              ?_PopulateColumns 0070  
 __end_of_ConfigureOscillator 05AB                __end_of___wmul 0530     __size_of_AdvanceAnimation 00A3  
       __end_of_InitAnimation 046C         __size_of_ReadyDisplay 000A           start_initialization 0013  
           __size_ofi1___wmul 0021                   __end_of_isr 0581                  _ReadyDisplay 0591  
                    ??___wmul 002E                    init_fetch0 0581                   __pdataBANK0 0041  
                 __pdataBANK1 00A0                InitAnimation@k 0032                InitAnimation@x 0034  
              InitAnimation@y 0036                     ___latbits 0001                 __pcstackBANK0 0020  
  __end_ofi1_AdvanceAnimation 0378                      ?_InitApp 0070                     _animation 0112  
         i1AdvanceAnimation@k 0020           i1AdvanceAnimation@x 0022           i1AdvanceAnimation@y 0024  
                   _frameSize 0043                     _maxFrames 0045             interrupt_function 0004  
              ___wmul@product 002E              _AdvanceAnimation 0232                   __stringbase 0112  
               ?_ClearDisplay 0070             ___wmul@multiplier 002A                      i1___wmul 0530  
            __size_of_InitApp 0009                ??_ClearDisplay 002A            __end_of__stringtab 0112  
                    __ptext10 056E                      __ptext11 02D5                      __ptext12 0530  
    __size_of_PopulateColumns 007B                 __size_of_main 003C  __size_of_ConfigureOscillator 0001  
                    _rowCount 0041                      init_ram0 0585                      intlevel1 0000  
      __size_of_InitAnimation 0079                     stringcode 010A            i1_AdvanceAnimation 02D5  
         ?i1_AdvanceAnimation 0070                      stringtab 0100            __CFG_FOSC$INTOSCIO 0000  
        ??i1_AdvanceAnimation 0076      __end_of_AdvanceAnimation 02D5          __end_of_ClearDisplay 04DD  
           ??_PopulateColumns 002A  
