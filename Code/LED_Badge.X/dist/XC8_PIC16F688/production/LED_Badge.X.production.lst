

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Apr 18 08:44:38 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F688
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 1.41
    25                           ; Generated 25/01/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F688 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0007                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0087                     	;# 
    87  008C                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0095                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0007                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0014                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0087                     	;# 
   135  008C                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0095                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0007                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0087                     	;# 
   183  008C                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0095                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0007                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000E                     	;# 
   213  000E                     	;# 
   214  000F                     	;# 
   215  0010                     	;# 
   216  0011                     	;# 
   217  0012                     	;# 
   218  0013                     	;# 
   219  0014                     	;# 
   220  0015                     	;# 
   221  0016                     	;# 
   222  0017                     	;# 
   223  0018                     	;# 
   224  0019                     	;# 
   225  001A                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  0087                     	;# 
   231  008C                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0095                     	;# 
   237  0095                     	;# 
   238  0096                     	;# 
   239  0096                     	;# 
   240  0097                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009A                     	;# 
   244  009A                     	;# 
   245  009B                     	;# 
   246  009C                     	;# 
   247  009D                     	;# 
   248  009E                     	;# 
   249  009F                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0007                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0087                     	;# 
   279  008C                     	;# 
   280  008E                     	;# 
   281  008F                     	;# 
   282  0090                     	;# 
   283  0091                     	;# 
   284  0095                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0007                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0087                     	;# 
   327  008C                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0095                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0096                     	;# 
   336  0097                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009A                     	;# 
   340  009A                     	;# 
   341  009B                     	;# 
   342  009C                     	;# 
   343  009D                     	;# 
   344  009E                     	;# 
   345  009F                     	;# 
   346                           
   347                           	psect	idataCOMMON
   348  0172                     __pidataCOMMON:	
   349                           
   350                           ;initializer for _rowCount
   351  0172  3402               	retlw	2
   352  0173  3400               	retlw	0
   353                           
   354                           	psect	idataBANK0
   355  00D9                     __pidataBANK0:	
   356                           
   357                           ;initializer for _buf
   358  00D9  3400               	retlw	0
   359  00DA  3400               	retlw	0
   360  00DB  3401               	retlw	1
   361  00DC  3400               	retlw	0
   362  00DD  3400               	retlw	0
   363  00DE  3401               	retlw	1
   364  00DF  3400               	retlw	0
   365  00E0  3400               	retlw	0
   366  00E1  3400               	retlw	0
   367  00E2  3400               	retlw	0
   368  00E3  3401               	retlw	1
   369  00E4  3400               	retlw	0
   370  00E5  3400               	retlw	0
   371  00E6  3401               	retlw	1
   372  00E7  3400               	retlw	0
   373  00E8  3400               	retlw	0
   374  00E9  3400               	retlw	0
   375  00EA  3400               	retlw	0
   376  00EB  3400               	retlw	0
   377  00EC  3400               	retlw	0
   378  00ED  3400               	retlw	0
   379  00EE  3400               	retlw	0
   380  00EF  3400               	retlw	0
   381  00F0  3400               	retlw	0
   382  00F1  3400               	retlw	0
   383  00F2  3401               	retlw	1
   384  00F3  3400               	retlw	0
   385  00F4  3400               	retlw	0
   386  00F5  3400               	retlw	0
   387  00F6  3400               	retlw	0
   388  00F7  3401               	retlw	1
   389  00F8  3400               	retlw	0
   390  00F9  3400               	retlw	0
   391  00FA  3400               	retlw	0
   392  00FB  3401               	retlw	1
   393  00FC  3401               	retlw	1
   394  00FD  3401               	retlw	1
   395  00FE  3401               	retlw	1
   396  00FF  3400               	retlw	0
   397  0100  3400               	retlw	0
   398  0101  3400               	retlw	0
   399  0102  3400               	retlw	0
   400  0103  3400               	retlw	0
   401  0104  3400               	retlw	0
   402  0105  3400               	retlw	0
   403  0106  3400               	retlw	0
   404  0107  3400               	retlw	0
   405  0108  3400               	retlw	0
   406  0007                     _PORTCbits	set	7
   407  0087                     _TRISC	set	135
   408  0085                     _TRISA	set	133
   409  0091                     _ANSEL	set	145
   410                           
   411                           ; #config settings
   412  0000                     
   413                           	psect	cinit
   414  0013                     start_initialization:	
   415  0013                     __initialization:	
   416                           
   417                           ; Initialize objects allocated to BANK0
   418  0013  1383               	bcf	3,7	;select IRP bank0
   419  0014  3050               	movlw	low (__pdataBANK0+48)
   420  0015  00FD               	movwf	btemp+-1
   421  0016  3000               	movlw	high __pidataBANK0
   422  0017  00FE               	movwf	btemp
   423  0018  30D9               	movlw	low __pidataBANK0
   424  0019  00FF               	movwf	btemp+1
   425  001A  3020               	movlw	low __pdataBANK0
   426  001B  0084               	movwf	4
   427  001C  118A  2149  118A   	fcall	init_ram0
   428                           
   429                           ; Initialize objects allocated to COMMON
   430  001F  118A  2172  118A   	fcall	__pidataCOMMON	;fetch initializer
   431  0022  00F8               	movwf	__pdataCOMMON& (0+127)
   432  0023  118A  2173         	fcall	__pidataCOMMON+1	;fetch initializer
   433  0025  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   434                           
   435                           ; Clear objects allocated to COMMON
   436  0026  01F6               	clrf	__pbssCOMMON& (0+127)
   437  0027  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   438  0028                     end_of_initialization:	
   439                           ;End of C runtime variable initialization code
   440                           
   441  0028                     __end_of__initialization:	
   442  0028  0183               	clrf	3
   443  0029  118A  2909         	ljmp	_main	;jump to C main() function
   444                           
   445                           	psect	bssCOMMON
   446  0076                     __pbssCOMMON:	
   447  0076                     _currentRow:	
   448  0076                     	ds	2
   449                           
   450                           	psect	dataCOMMON
   451  0078                     __pdataCOMMON:	
   452  0078                     _rowCount:	
   453  0078                     	ds	2
   454                           
   455                           	psect	dataBANK0
   456  0020                     __pdataBANK0:	
   457  0020                     _buf:	
   458  0020                     	ds	48
   459                           
   460                           	psect	inittext
   461  0145                     init_fetch0:	
   462                           ;	Called with low address in FSR and high address in W
   463                           
   464  0145  087E               	movf	126,w
   465  0146  008A               	movwf	10
   466  0147  087F               	movf	127,w
   467  0148  0082               	movwf	2
   468  0149                     init_ram0:	
   469                           ;Called with:
   470                           ;	high address of idata address in btemp 
   471                           ;	low address of idata address in btemp+1 
   472                           ;	low address of data in FSR
   473                           ;	high address + 1 of data in btemp-1
   474                           
   475  0149  2145  118A         	fcall	init_fetch0
   476  014B  0080               	movwf	0
   477  014C  0A84               	incf	4,f
   478  014D  0804               	movf	4,w
   479  014E  067D               	xorwf	125,w
   480  014F  1903               	btfsc	3,2
   481  0150  3400               	retlw	0
   482  0151  0AFF               	incf	127,f
   483  0152  1903               	btfsc	3,2
   484  0153  0AFE               	incf	126,f
   485  0154  2949               	goto	init_ram0
   486                           
   487                           	psect	cstackCOMMON
   488  0070                     __pcstackCOMMON:	
   489  0070                     ?_ConfigureOscillator:	
   490  0070                     ?_InitApp:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_ClearDisplay:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_ReadyDisplay:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_PopulateColumns:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_AdvanceRow:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_isr:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ??_isr:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_main:	
   512                           ; 1 bytes @ 0x0
   513                           
   514                           
   515                           ; 1 bytes @ 0x0
   516  0070                     	ds	4
   517  0074                     ??_ConfigureOscillator:	
   518  0074                     ??_InitApp:	
   519                           ; 1 bytes @ 0x4
   520                           
   521  0074                     ??_ClearDisplay:	
   522                           ; 1 bytes @ 0x4
   523                           
   524  0074                     ??_ReadyDisplay:	
   525                           ; 1 bytes @ 0x4
   526                           
   527  0074                     ??_AdvanceRow:	
   528                           ; 1 bytes @ 0x4
   529                           
   530  0074                     PopulateColumns@i:	
   531                           ; 1 bytes @ 0x4
   532                           
   533                           
   534                           ; 2 bytes @ 0x4
   535  0074                     	ds	2
   536                           
   537                           	psect	cstackBANK0
   538  0050                     __pcstackBANK0:	
   539  0050                     ??_PopulateColumns:	
   540  0050                     ClearDisplay@i:	
   541                           ; 1 bytes @ 0x0
   542                           
   543                           
   544                           ; 2 bytes @ 0x0
   545  0050                     	ds	3
   546  0053                     ??_main:	
   547                           
   548                           ; 1 bytes @ 0x3
   549  0053                     	ds	2
   550                           
   551                           	psect	maintext
   552  0109                     __pmaintext:	
   553 ;;
   554 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   555 ;;
   556 ;; *************** function _main *****************
   557 ;; Defined at:
   558 ;;		line 26 in file "main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : B00/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   572 ;;      Params:         0       0       0       0
   573 ;;      Locals:         0       0       0       0
   574 ;;      Temps:          0       2       0       0
   575 ;;      Totals:         0       2       0       0
   576 ;;Total ram usage:        2 bytes
   577 ;; Hardware stack levels required when called:    2
   578 ;; This function calls:
   579 ;;		_AdvanceRow
   580 ;;		_ClearDisplay
   581 ;;		_ConfigureOscillator
   582 ;;		_InitApp
   583 ;;		_PopulateColumns
   584 ;;		_ReadyDisplay
   585 ;; This function is called by:
   586 ;;		Startup code after reset
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           
   591                           ;psect for function _main
   592  0109                     _main:	
   593                           
   594                           ;main.c: 29: ConfigureOscillator();
   595                           
   596                           ;incstack = 0
   597                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   598  0109  118A  2174  118A   	fcall	_ConfigureOscillator
   599                           
   600                           ;main.c: 32: InitApp();
   601  010C  118A  216A  118A   	fcall	_InitApp
   602                           
   603                           ;main.c: 34: ClearDisplay();
   604  010F  118A  20A5  118A   	fcall	_ClearDisplay
   605                           
   606                           ;main.c: 36: ReadyDisplay();
   607  0112  118A  2160  118A   	fcall	_ReadyDisplay
   608  0115                     l726:	
   609                           ;main.c: 38: while(1)
   610                           
   611                           
   612                           ;main.c: 39: {
   613                           ;main.c: 41: PopulateColumns();
   614  0115  118A  202B  118A   	fcall	_PopulateColumns
   615                           
   616                           ;main.c: 45: _delay((unsigned long)((1000)*(8000000/4000000.0)));
   617  0118  3003               	movlw	3
   618  0119  1283               	bcf	3,5	;RP0=0, select bank0
   619  011A  1303               	bcf	3,6	;RP1=0, select bank0
   620  011B  00D4               	movwf	??_main+1
   621  011C  3097               	movlw	151
   622  011D  00D3               	movwf	??_main
   623  011E                     u327:	
   624  011E  0BD3               	decfsz	??_main,f
   625  011F  291E               	goto	u327
   626  0120  0BD4               	decfsz	??_main+1,f
   627  0121  291E               	goto	u327
   628  0122  0000               	nop
   629                           
   630                           ;main.c: 47: PORTCbits.RC4 = 1;
   631  0123  1283               	bcf	3,5	;RP0=0, select bank0
   632  0124  1303               	bcf	3,6	;RP1=0, select bank0
   633  0125  1607               	bsf	7,4	;volatile
   634                           
   635                           ;main.c: 50: AdvanceRow();
   636  0126  118A  212A  118A   	fcall	_AdvanceRow
   637  0129  2915               	goto	l726
   638  012A                     __end_of_main:	
   639                           
   640                           	psect	text1
   641  0160                     __ptext1:	
   642 ;; *************** function _ReadyDisplay *****************
   643 ;; Defined at:
   644 ;;		line 94 in file "user.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		None
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   658 ;;      Params:         0       0       0       0
   659 ;;      Locals:         0       0       0       0
   660 ;;      Temps:          0       0       0       0
   661 ;;      Totals:         0       0       0       0
   662 ;;Total ram usage:        0 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; Hardware stack levels required when called:    1
   665 ;; This function calls:
   666 ;;		Nothing
   667 ;; This function is called by:
   668 ;;		_main
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           
   673                           ;psect for function _ReadyDisplay
   674  0160                     _ReadyDisplay:	
   675                           
   676                           ;user.c: 96: PORTCbits.RC4 = 1;
   677                           
   678                           ;incstack = 0
   679                           ; Regs used in _ReadyDisplay: []
   680  0160  1283               	bcf	3,5	;RP0=0, select bank0
   681  0161  1303               	bcf	3,6	;RP1=0, select bank0
   682  0162  1607               	bsf	7,4	;volatile
   683                           
   684                           ;user.c: 98: PORTCbits.RC1 = 1;
   685  0163  1487               	bsf	7,1	;volatile
   686                           
   687                           ;user.c: 101: PORTCbits.RC3 = 1;
   688  0164  1587               	bsf	7,3	;volatile
   689                           
   690                           ;user.c: 102: PORTCbits.RC3 = 0;
   691  0165  1187               	bcf	7,3	;volatile
   692                           
   693                           ;user.c: 103: PORTCbits.RC3 = 1;
   694  0166  1587               	bsf	7,3	;volatile
   695                           
   696                           ;user.c: 104: PORTCbits.RC3 = 0;
   697  0167  1187               	bcf	7,3	;volatile
   698                           
   699                           ;user.c: 106: PORTCbits.RC4 = 0;
   700  0168  1207               	bcf	7,4	;volatile
   701  0169  0008               	return
   702  016A                     __end_of_ReadyDisplay:	
   703                           
   704                           	psect	text2
   705  002B                     __ptext2:	
   706 ;; *************** function _PopulateColumns *****************
   707 ;; Defined at:
   708 ;;		line 111 in file "user.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  i               2    4[COMMON] int 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   722 ;;      Params:         0       0       0       0
   723 ;;      Locals:         2       0       0       0
   724 ;;      Temps:          0       3       0       0
   725 ;;      Totals:         2       3       0       0
   726 ;;Total ram usage:        5 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    1
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_main
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           
   737                           ;psect for function _PopulateColumns
   738  002B                     _PopulateColumns:	
   739                           
   740                           ;user.c: 113: PORTCbits.RC4 = 1;
   741                           
   742                           ;incstack = 0
   743                           ; Regs used in _PopulateColumns: [wreg-fsr0h+status,2+status,0]
   744  002B  1283               	bcf	3,5	;RP0=0, select bank0
   745  002C  1303               	bcf	3,6	;RP1=0, select bank0
   746  002D  1607               	bsf	7,4	;volatile
   747                           
   748                           ;user.c: 116: for(int i =7;i>=0;i--)
   749  002E  3007               	movlw	7
   750  002F  00F4               	movwf	PopulateColumns@i
   751  0030  3000               	movlw	0
   752  0031  00F5               	movwf	PopulateColumns@i+1
   753  0032  1BF5               	btfsc	PopulateColumns@i+1,7
   754  0033  2896               	goto	l63
   755  0034                     l686:	
   756                           
   757                           ;user.c: 117: {
   758                           ;user.c: 120: if(i==3)
   759  0034  3003               	movlw	3
   760  0035  0674               	xorwf	PopulateColumns@i,w
   761  0036  0475               	iorwf	PopulateColumns@i+1,w
   762  0037  1D03               	btfss	3,2
   763  0038  2844               	goto	l690
   764                           
   765                           ;user.c: 121: {
   766                           ;user.c: 122: PORTCbits.RC0 = buf[currentRow][0];
   767  0039  0876               	movf	_currentRow,w
   768  003A  00D0               	movwf	??_PopulateColumns
   769  003B  3002               	movlw	2
   770  003C                     u225:	
   771  003C  1003               	clrc
   772  003D  0DD0               	rlf	??_PopulateColumns,f
   773  003E  3EFF               	addlw	-1
   774  003F  1D03               	skipz
   775  0040  283C               	goto	u225
   776  0041  1003               	clrc
   777  0042  0D50               	rlf	??_PopulateColumns,w
   778  0043  2874               	goto	L3
   779  0044                     l690:	
   780                           ;user.c: 123: }
   781                           
   782                           
   783                           ;user.c: 124: else if(i==2)
   784  0044  3002               	movlw	2
   785  0045  0674               	xorwf	PopulateColumns@i,w
   786  0046  0475               	iorwf	PopulateColumns@i+1,w
   787  0047  1D03               	btfss	3,2
   788  0048  2855               	goto	l694
   789                           
   790                           ;user.c: 125: {
   791                           ;user.c: 126: PORTCbits.RC0 = buf[currentRow][1];
   792  0049  0876               	movf	_currentRow,w
   793  004A  00D0               	movwf	??_PopulateColumns
   794  004B  3002               	movlw	2
   795  004C                     u245:	
   796  004C  1003               	clrc
   797  004D  0DD0               	rlf	??_PopulateColumns,f
   798  004E  3EFF               	addlw	-1
   799  004F  1D03               	skipz
   800  0050  284C               	goto	u245
   801  0051  1003               	clrc
   802  0052  0D50               	rlf	??_PopulateColumns,w
   803  0053  3E01               	addlw	1
   804  0054  2874               	goto	L3
   805  0055                     l694:	
   806                           ;user.c: 127: }
   807                           
   808                           
   809                           ;user.c: 128: else if(i==1)
   810  0055  0374               	decf	PopulateColumns@i,w
   811  0056  0475               	iorwf	PopulateColumns@i+1,w
   812  0057  1D03               	btfss	3,2
   813  0058  2865               	goto	l698
   814                           
   815                           ;user.c: 129: {
   816                           ;user.c: 130: PORTCbits.RC0 = buf[currentRow][2];
   817  0059  0876               	movf	_currentRow,w
   818  005A  00D0               	movwf	??_PopulateColumns
   819  005B  3002               	movlw	2
   820  005C                     u265:	
   821  005C  1003               	clrc
   822  005D  0DD0               	rlf	??_PopulateColumns,f
   823  005E  3EFF               	addlw	-1
   824  005F  1D03               	skipz
   825  0060  285C               	goto	u265
   826  0061  1003               	clrc
   827  0062  0D50               	rlf	??_PopulateColumns,w
   828  0063  3E02               	addlw	2
   829  0064  2874               	goto	L3
   830  0065                     l698:	
   831                           ;user.c: 131: }
   832                           
   833                           
   834                           ;user.c: 132: else if(i==0)
   835  0065  0874               	movf	PopulateColumns@i,w
   836  0066  0475               	iorwf	PopulateColumns@i+1,w
   837  0067  1D03               	btfss	3,2
   838  0068  2876               	goto	l702
   839                           
   840                           ;user.c: 133: {
   841                           ;user.c: 134: PORTCbits.RC0 = buf[currentRow][3];
   842  0069  0876               	movf	_currentRow,w
   843  006A  00D0               	movwf	??_PopulateColumns
   844  006B  3002               	movlw	2
   845  006C                     u285:	
   846  006C  1003               	clrc
   847  006D  0DD0               	rlf	??_PopulateColumns,f
   848  006E  3EFF               	addlw	-1
   849  006F  1D03               	skipz
   850  0070  286C               	goto	u285
   851  0071  1003               	clrc
   852  0072  0D50               	rlf	??_PopulateColumns,w
   853  0073  3E03               	addlw	3
   854  0074                     L3:	
   855  0074  3E20               	addlw	(low (_buf| 0))& (0+255)
   856  0075  2885               	goto	L4
   857  0076                     l702:	
   858                           ;user.c: 135: }
   859                           
   860                           
   861                           ;user.c: 136: else
   862                           ;user.c: 137: {
   863                           ;user.c: 138: PORTCbits.RC0 = buf[currentRow][i];
   864  0076  0876               	movf	_currentRow,w
   865  0077  00D0               	movwf	??_PopulateColumns
   866  0078  3003               	movlw	3
   867  0079                     u295:	
   868  0079  1003               	clrc
   869  007A  0DD0               	rlf	??_PopulateColumns,f
   870  007B  3EFF               	addlw	-1
   871  007C  1D03               	skipz
   872  007D  2879               	goto	u295
   873  007E  3020               	movlw	(low (_buf| 0))& (0+255)
   874  007F  0750               	addwf	??_PopulateColumns,w
   875  0080  00D1               	movwf	??_PopulateColumns+1
   876  0081  0874               	movf	PopulateColumns@i,w
   877  0082  0751               	addwf	??_PopulateColumns+1,w
   878  0083  00D2               	movwf	??_PopulateColumns+2
   879  0084  0852               	movf	??_PopulateColumns+2,w
   880  0085                     L4:	
   881  0085  0084               	movwf	4
   882  0086  1383               	bcf	3,7	;select IRP bank0
   883  0087  0C00               	rrf	0,w
   884  0088  1C03               	skipc
   885  0089  1007               	bcf	7,0	;volatile
   886  008A  1803               	skipnc
   887  008B  1407               	bsf	7,0	;volatile
   888                           
   889                           ;user.c: 139: }
   890                           ;user.c: 142: PORTCbits.RC2 = 1;
   891  008C  1507               	bsf	7,2	;volatile
   892                           
   893                           ;user.c: 143: PORTCbits.RC2 = 0;
   894  008D  1107               	bcf	7,2	;volatile
   895  008E  30FF               	movlw	255
   896  008F  07F4               	addwf	PopulateColumns@i,f
   897  0090  1803               	skipnc
   898  0091  0AF5               	incf	PopulateColumns@i+1,f
   899  0092  30FF               	movlw	255
   900  0093  07F5               	addwf	PopulateColumns@i+1,f
   901  0094  1FF5               	btfss	PopulateColumns@i+1,7
   902  0095  2834               	goto	l686
   903  0096                     l63:	
   904                           
   905                           ;user.c: 147: }
   906                           ;user.c: 151: PORTCbits.RC4 = 0;
   907  0096  1207               	bcf	7,4	;volatile
   908                           
   909                           ;user.c: 153: currentRow++;
   910  0097  3001               	movlw	1
   911  0098  07F6               	addwf	_currentRow,f
   912  0099  1803               	skipnc
   913  009A  0AF7               	incf	_currentRow+1,f
   914  009B  3000               	movlw	0
   915  009C  07F7               	addwf	_currentRow+1,f
   916                           
   917                           ;user.c: 154: if(currentRow == 6){
   918  009D  3006               	movlw	6
   919  009E  0676               	xorwf	_currentRow,w
   920  009F  0477               	iorwf	_currentRow+1,w
   921  00A0  1D03               	btfss	3,2
   922  00A1  0008               	return
   923                           
   924                           ;user.c: 155: currentRow = 0;
   925  00A2  01F6               	clrf	_currentRow
   926  00A3  01F7               	clrf	_currentRow+1
   927  00A4  0008               	return
   928  00A5                     __end_of_PopulateColumns:	
   929                           
   930                           	psect	text3
   931  016A                     __ptext3:	
   932 ;; *************** function _InitApp *****************
   933 ;; Defined at:
   934 ;;		line 35 in file "user.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   948 ;;      Params:         0       0       0       0
   949 ;;      Locals:         0       0       0       0
   950 ;;      Temps:          0       0       0       0
   951 ;;      Totals:         0       0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    1
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _InitApp
   964  016A                     _InitApp:	
   965                           
   966                           ;user.c: 44: ANSEL = 0b00000000;
   967                           
   968                           ;incstack = 0
   969                           ; Regs used in _InitApp: [wreg+status,2]
   970  016A  1683               	bsf	3,5	;RP0=1, select bank1
   971  016B  1303               	bcf	3,6	;RP1=0, select bank1
   972  016C  0191               	clrf	17	;volatile
   973                           
   974                           ;user.c: 46: TRISA = 0b11111111;
   975  016D  30FF               	movlw	255
   976  016E  0085               	movwf	5	;volatile
   977                           
   978                           ;user.c: 47: TRISC = 0b11000000;
   979  016F  30C0               	movlw	192
   980  0170  0087               	movwf	7	;volatile
   981  0171  0008               	return
   982  0172                     __end_of_InitApp:	
   983                           
   984                           	psect	text4
   985  0174                     __ptext4:	
   986 ;; *************** function _ConfigureOscillator *****************
   987 ;; Defined at:
   988 ;;		line 18 in file "system.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		None
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1002 ;;      Params:         0       0       0       0
  1003 ;;      Locals:         0       0       0       0
  1004 ;;      Temps:          0       0       0       0
  1005 ;;      Totals:         0       0       0       0
  1006 ;;Total ram usage:        0 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:    1
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           
  1017                           ;psect for function _ConfigureOscillator
  1018  0174                     _ConfigureOscillator:	
  1019                           
  1020                           ;incstack = 0
  1021                           ; Regs used in _ConfigureOscillator: []
  1022  0174  0008               	return
  1023  0175                     __end_of_ConfigureOscillator:	
  1024                           
  1025                           	psect	text5
  1026  00A5                     __ptext5:	
  1027 ;; *************** function _ClearDisplay *****************
  1028 ;; Defined at:
  1029 ;;		line 52 in file "user.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  i               2    0[BANK0 ] int 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, btemp+1
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1043 ;;      Params:         0       0       0       0
  1044 ;;      Locals:         0       2       0       0
  1045 ;;      Temps:          1       0       0       0
  1046 ;;      Totals:         1       2       0       0
  1047 ;;Total ram usage:        3 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:    1
  1050 ;; This function calls:
  1051 ;;		Nothing
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           
  1058                           ;psect for function _ClearDisplay
  1059  00A5                     _ClearDisplay:	
  1060                           
  1061                           ;user.c: 57: PORTCbits.RC4 = 1;
  1062                           
  1063                           ;incstack = 0
  1064                           ; Regs used in _ClearDisplay: [wreg+status,2+btemp+1]
  1065  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1066  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1067  00A7  1607               	bsf	7,4	;volatile
  1068                           
  1069                           ;user.c: 59: PORTCbits.RC1 = 0;
  1070  00A8  1087               	bcf	7,1	;volatile
  1071                           
  1072                           ;user.c: 60: PORTCbits.RC0 = 1;
  1073  00A9  1407               	bsf	7,0	;volatile
  1074                           
  1075                           ;user.c: 62: for(int i = 0;i<8;i++){
  1076  00AA  01D0               	clrf	ClearDisplay@i
  1077  00AB  01D1               	clrf	ClearDisplay@i+1
  1078  00AC  0851               	movf	ClearDisplay@i+1,w
  1079  00AD  3A80               	xorlw	128
  1080  00AE  00FF               	movwf	127
  1081  00AF  3080               	movlw	128
  1082  00B0  027F               	subwf	127,w
  1083  00B1  1D03               	skipz
  1084  00B2  28B5               	goto	u185
  1085  00B3  3008               	movlw	8
  1086  00B4  0250               	subwf	ClearDisplay@i,w
  1087  00B5                     u185:	
  1088  00B5  1803               	btfsc	3,0
  1089  00B6  28D5               	goto	l47
  1090  00B7                     l46:	
  1091                           
  1092                           ;user.c: 63: PORTCbits.RC3 = 1;
  1093  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1094  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1095  00B9  1587               	bsf	7,3	;volatile
  1096                           
  1097                           ;user.c: 64: PORTCbits.RC2 = 1;
  1098  00BA  1507               	bsf	7,2	;volatile
  1099                           
  1100                           ;user.c: 65: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1101  00BB  3006               	movlw	6
  1102  00BC  00F4               	movwf	??_ClearDisplay
  1103  00BD                     u337:	
  1104  00BD  0BF4               	decfsz	??_ClearDisplay,f
  1105  00BE  28BD               	goto	u337
  1106  00BF  0000               	nop
  1107                           
  1108                           ;user.c: 67: PORTCbits.RC3 = 0;
  1109  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1110  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1111  00C2  1187               	bcf	7,3	;volatile
  1112                           
  1113                           ;user.c: 68: PORTCbits.RC2 = 0;
  1114  00C3  1107               	bcf	7,2	;volatile
  1115  00C4  3001               	movlw	1
  1116  00C5  07D0               	addwf	ClearDisplay@i,f
  1117  00C6  1803               	skipnc
  1118  00C7  0AD1               	incf	ClearDisplay@i+1,f
  1119  00C8  3000               	movlw	0
  1120  00C9  07D1               	addwf	ClearDisplay@i+1,f
  1121  00CA  0851               	movf	ClearDisplay@i+1,w
  1122  00CB  3A80               	xorlw	128
  1123  00CC  00FF               	movwf	127
  1124  00CD  3080               	movlw	128
  1125  00CE  027F               	subwf	127,w
  1126  00CF  1D03               	skipz
  1127  00D0  28D3               	goto	u195
  1128  00D1  3008               	movlw	8
  1129  00D2  0250               	subwf	ClearDisplay@i,w
  1130  00D3                     u195:	
  1131  00D3  1C03               	skipc
  1132  00D4  28B7               	goto	l46
  1133  00D5                     l47:	
  1134                           
  1135                           ;user.c: 69: }
  1136                           ;user.c: 71: PORTCbits.RC4 = 0;
  1137  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1138  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1139  00D7  1207               	bcf	7,4	;volatile
  1140  00D8  0008               	return
  1141  00D9                     __end_of_ClearDisplay:	
  1142                           
  1143                           	psect	text6
  1144  012A                     __ptext6:	
  1145 ;; *************** function _AdvanceRow *****************
  1146 ;; Defined at:
  1147 ;;		line 77 in file "user.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, btemp+1
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1161 ;;      Params:         0       0       0       0
  1162 ;;      Locals:         0       0       0       0
  1163 ;;      Temps:          0       0       0       0
  1164 ;;      Totals:         0       0       0       0
  1165 ;;Total ram usage:        0 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _AdvanceRow
  1177  012A                     _AdvanceRow:	
  1178                           
  1179                           ;user.c: 80: if(rowCount >= 6)
  1180                           
  1181                           ;incstack = 0
  1182                           ; Regs used in _AdvanceRow: [wreg+status,2+btemp+1]
  1183  012A  0879               	movf	_rowCount+1,w
  1184  012B  3A80               	xorlw	128
  1185  012C  00FF               	movwf	127
  1186  012D  3080               	movlw	128
  1187  012E  027F               	subwf	127,w
  1188  012F  1D03               	skipz
  1189  0130  2933               	goto	u155
  1190  0131  3006               	movlw	6
  1191  0132  0278               	subwf	_rowCount,w
  1192  0133                     u155:	
  1193  0133  1C03               	skipc
  1194  0134  293A               	goto	l612
  1195                           
  1196                           ;user.c: 81: {
  1197                           ;user.c: 82: PORTCbits.RC1 = 1;
  1198  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0137  1487               	bsf	7,1	;volatile
  1201                           
  1202                           ;user.c: 84: rowCount = 0;
  1203  0138  01F8               	clrf	_rowCount
  1204  0139  01F9               	clrf	_rowCount+1
  1205  013A                     l612:	
  1206                           
  1207                           ;user.c: 85: }
  1208                           ;user.c: 87: PORTCbits.RC3 = 1;
  1209  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1210  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1211  013C  1587               	bsf	7,3	;volatile
  1212                           
  1213                           ;user.c: 88: PORTCbits.RC3 = 0;
  1214  013D  1187               	bcf	7,3	;volatile
  1215                           
  1216                           ;user.c: 90: rowCount++;
  1217  013E  3001               	movlw	1
  1218  013F  07F8               	addwf	_rowCount,f
  1219  0140  1803               	skipnc
  1220  0141  0AF9               	incf	_rowCount+1,f
  1221  0142  3000               	movlw	0
  1222  0143  07F9               	addwf	_rowCount+1,f
  1223  0144  0008               	return
  1224  0145                     __end_of_AdvanceRow:	
  1225                           
  1226                           	psect	text7
  1227  0155                     __ptext7:	
  1228 ;; *************** function _isr *****************
  1229 ;; Defined at:
  1230 ;;		line 23 in file "interrupts.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		None
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1244 ;;      Params:         0       0       0       0
  1245 ;;      Locals:         0       0       0       0
  1246 ;;      Temps:          4       0       0       0
  1247 ;;      Totals:         4       0       0       0
  1248 ;;Total ram usage:        4 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		Interrupt level 1
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function _isr
  1259  0155                     _isr:	
  1260  0155  0873               	movf	??_isr+3,w
  1261  0156  00FF               	movwf	127
  1262  0157  0872               	movf	??_isr+2,w
  1263  0158  008A               	movwf	10
  1264  0159  0871               	movf	??_isr+1,w
  1265  015A  0084               	movwf	4
  1266  015B  0E70               	swapf	??_isr^(0+-128),w
  1267  015C  0083               	movwf	3
  1268  015D  0EFE               	swapf	126,f
  1269  015E  0E7E               	swapf	126,w
  1270  015F  0009               	retfie
  1271  0160                     __end_of_isr:	
  1272  007E                     btemp	set	126	;btemp
  1273  007E                     wtemp0	set	126
  1274                           
  1275                           	psect	intentry
  1276  0004                     __pintentry:	
  1277                           ;incstack = 0
  1278                           ; Regs used in _isr: []
  1279                           
  1280  0004                     interrupt_function:	
  1281  007E                     saved_w	set	btemp
  1282  0004  00FE               	movwf	btemp
  1283  0005  0E03               	swapf	3,w
  1284  0006  00F0               	movwf	??_isr
  1285  0007  0804               	movf	4,w
  1286  0008  00F1               	movwf	??_isr+1
  1287  0009  080A               	movf	10,w
  1288  000A  00F2               	movwf	??_isr+2
  1289  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1290  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1291  000D  087F               	movf	btemp+1,w
  1292  000E  00F3               	movwf	??_isr+3
  1293  000F  118A  2955         	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        50
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      5      53
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PopulateColumns

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PopulateColumns

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     202
                                              3 BANK0      2     2      0
                         _AdvanceRow
                       _ClearDisplay
                _ConfigureOscillator
                            _InitApp
                    _PopulateColumns
                       _ReadyDisplay
 ---------------------------------------------------------------------------------
 (1) _ReadyDisplay                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PopulateColumns                                      5     5      0     156
                                              4 COMMON     2     2      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearDisplay                                         3     3      0      46
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _AdvanceRow                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AdvanceRow
   _ClearDisplay
   _ConfigureOscillator
   _InitApp
   _PopulateColumns
   _ReadyDisplay

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      5      35       3       66.3%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3F      10        0.0%
ABS                  0      0      3F       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Apr 18 08:44:38 2017

                           pc 0002                   __CFG_CP$OFF 0000                            l46 00B7  
                          l47 00D5                            l63 0096                            fsr 0004  
                         l612 013A                           l702 0076                           l726 0115  
                         l690 0044                           l694 0055                           l686 0034  
                         l698 0065                           u225 003C                           u155 0133  
                         u245 004C                           u327 011E                           u337 00BD  
                         u185 00B5                           u265 005C                  __CFG_CPD$OFF 0000  
                         u195 00D3                           u285 006C                           u295 0079  
                         _buf 0020                           _isr 0155                           fsr0 0004  
                         indf 0000                  __CFG_IESO$ON 0000                          ?_isr 0070  
                  _AdvanceRow 012A                 __CFG_FCMEN$ON 0000                          _main 0109  
                        btemp 007E                          start 0011                 __CFG_MCLRE$ON 0000  
             __end_of_InitApp 0172                         ??_isr 0070                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _ANSEL 0091                         _TRISA 0085  
                       _TRISC 0087           _ConfigureOscillator 0174                __CFG_BOREN$OFF 0000  
                       pclath 000A                         status 0003                         wtemp0 007E  
        ?_ConfigureOscillator 0070               __initialization 0013                 ?_ReadyDisplay 0070  
                __end_of_main 012A              PopulateColumns@i 0074                        ??_main 0053  
               ClearDisplay@i 0050         __size_of_ClearDisplay 0034                   ?_AdvanceRow 0070  
                   ??_InitApp 0074         ??_ConfigureOscillator 0074                __CFG_PWRTE$OFF 0000  
              ??_ReadyDisplay 0074                  _ClearDisplay 00A5                  __pdataCOMMON 0078  
                      saved_w 007E               _PopulateColumns 002B       __end_of__initialization 0028  
              __pcstackCOMMON 0070                  __pidataBANK0 00D9           __size_of_AdvanceRow 001B  
                  __pmaintext 0109                    __pintentry 0004       __end_of_PopulateColumns 00A5  
        __end_of_ReadyDisplay 016A                       _InitApp 016A                    _currentRow 0076  
                     __ptext1 0160                       __ptext2 002B                       __ptext3 016A  
                     __ptext4 0174                       __ptext5 00A5                       __ptext6 012A  
                     __ptext7 0155                  __size_of_isr 000B                  ??_AdvanceRow 0074  
        end_of_initialization 0028            __end_of_AdvanceRow 0145                     _PORTCbits 0007  
            ?_PopulateColumns 0070   __end_of_ConfigureOscillator 0175                 __pidataCOMMON 0172  
       __size_of_ReadyDisplay 000A           start_initialization 0013                   __end_of_isr 0160  
                _ReadyDisplay 0160                    init_fetch0 0145                   __pdataBANK0 0020  
                 __pbssCOMMON 0076                     ___latbits 0001                 __pcstackBANK0 0050  
                    ?_InitApp 0070             interrupt_function 0004                 ?_ClearDisplay 0070  
            __size_of_InitApp 0008                ??_ClearDisplay 0074      __size_of_PopulateColumns 007A  
               __size_of_main 0021  __size_of_ConfigureOscillator 0001                      _rowCount 0078  
                    init_ram0 0149                      intlevel1 0000            __CFG_FOSC$INTOSCIO 0000  
        __end_of_ClearDisplay 00D9             ??_PopulateColumns 0050  
