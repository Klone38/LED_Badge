

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Sep 19 12:22:33 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F688
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.44
    26                           ; Generated 14/09/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F688 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0007                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0087                     	;# 
    88  008C                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0095                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0007                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000E                     	;# 
   118  000E                     	;# 
   119  000F                     	;# 
   120  0010                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  0081                     	;# 
   134  0085                     	;# 
   135  0087                     	;# 
   136  008C                     	;# 
   137  008E                     	;# 
   138  008F                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0095                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0007                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0087                     	;# 
   184  008C                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0095                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0007                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000E                     	;# 
   214  000E                     	;# 
   215  000F                     	;# 
   216  0010                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0014                     	;# 
   221  0015                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0087                     	;# 
   232  008C                     	;# 
   233  008E                     	;# 
   234  008F                     	;# 
   235  0090                     	;# 
   236  0091                     	;# 
   237  0095                     	;# 
   238  0095                     	;# 
   239  0096                     	;# 
   240  0096                     	;# 
   241  0097                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009A                     	;# 
   245  009A                     	;# 
   246  009B                     	;# 
   247  009C                     	;# 
   248  009D                     	;# 
   249  009E                     	;# 
   250  009F                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0007                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000E                     	;# 
   262  000E                     	;# 
   263  000F                     	;# 
   264  0010                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0087                     	;# 
   280  008C                     	;# 
   281  008E                     	;# 
   282  008F                     	;# 
   283  0090                     	;# 
   284  0091                     	;# 
   285  0095                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0096                     	;# 
   289  0097                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009A                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0007                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0087                     	;# 
   328  008C                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0095                     	;# 
   334  0095                     	;# 
   335  0096                     	;# 
   336  0096                     	;# 
   337  0097                     	;# 
   338  0098                     	;# 
   339  0099                     	;# 
   340  009A                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347                           
   348                           	psect	idataCOMMON
   349  0375                     __pidataCOMMON:	
   350                           
   351                           ;initializer for _rowCount
   352  0375  3402               	retlw	2
   353  0376  3400               	retlw	0
   354                           
   355                           	psect	idataBANK0
   356  02D7                     __pidataBANK0:	
   357                           
   358                           ;initializer for _buf
   359  02D7  3400               	retlw	0
   360  02D8  3400               	retlw	0
   361  02D9  3401               	retlw	1
   362  02DA  3400               	retlw	0
   363  02DB  3400               	retlw	0
   364  02DC  3401               	retlw	1
   365  02DD  3400               	retlw	0
   366  02DE  3400               	retlw	0
   367  02DF  3400               	retlw	0
   368  02E0  3400               	retlw	0
   369  02E1  3401               	retlw	1
   370  02E2  3400               	retlw	0
   371  02E3  3400               	retlw	0
   372  02E4  3401               	retlw	1
   373  02E5  3400               	retlw	0
   374  02E6  3400               	retlw	0
   375  02E7  3400               	retlw	0
   376  02E8  3400               	retlw	0
   377  02E9  3400               	retlw	0
   378  02EA  3400               	retlw	0
   379  02EB  3400               	retlw	0
   380  02EC  3400               	retlw	0
   381  02ED  3400               	retlw	0
   382  02EE  3400               	retlw	0
   383  02EF  3400               	retlw	0
   384  02F0  3401               	retlw	1
   385  02F1  3400               	retlw	0
   386  02F2  3400               	retlw	0
   387  02F3  3400               	retlw	0
   388  02F4  3400               	retlw	0
   389  02F5  3401               	retlw	1
   390  02F6  3400               	retlw	0
   391  02F7  3400               	retlw	0
   392  02F8  3400               	retlw	0
   393  02F9  3401               	retlw	1
   394  02FA  3401               	retlw	1
   395  02FB  3401               	retlw	1
   396  02FC  3401               	retlw	1
   397  02FD  3400               	retlw	0
   398  02FE  3400               	retlw	0
   399  02FF  3400               	retlw	0
   400  0300  3400               	retlw	0
   401  0301  3400               	retlw	0
   402  0302  3400               	retlw	0
   403  0303  3400               	retlw	0
   404  0304  3400               	retlw	0
   405  0305  3400               	retlw	0
   406  0306  3400               	retlw	0
   407                           
   408                           	psect	stringtext
   409  0100                     __pstringtext:	
   410  0100                     stringtab:	
   411  0100                     __stringtab:	
   412  0100                     stringcode:	
   413                           ;	String table - string pointers are 2 bytes each
   414                           
   415  0100  087F               	movf	btemp+1,w
   416  0101  397F               	andlw	127
   417  0102  008A               	movwf	10
   418  0103  0804               	movf	4,w
   419  0104  0A84               	incf	4,f
   420  0105  1903               	skipnz
   421  0106  0AFF               	incf	btemp+1,f
   422  0107  0082               	movwf	2
   423  0108                     __stringbase:	
   424  0108                     __end_of__stringtab:	
   425  0108                     _test:	
   426  0108  3424               	retlw	36
   427  0109  3400               	retlw	0
   428  010A  3424               	retlw	36
   429  010B  3400               	retlw	0
   430  010C  3400               	retlw	0
   431  010D  3400               	retlw	0
   432  010E  3442               	retlw	66
   433  010F  3400               	retlw	0
   434  0110  343C               	retlw	60
   435  0111  3400               	retlw	0
   436  0112  3480               	retlw	128
   437  0113  3400               	retlw	0
   438  0114  3424               	retlw	36
   439  0115  3400               	retlw	0
   440  0116  3424               	retlw	36
   441  0117  3400               	retlw	0
   442  0118  3400               	retlw	0
   443  0119  3400               	retlw	0
   444  011A  3442               	retlw	66
   445  011B  3400               	retlw	0
   446  011C  343C               	retlw	60
   447  011D  3400               	retlw	0
   448  011E  3440               	retlw	64
   449  011F  3400               	retlw	0
   450  0120  3424               	retlw	36
   451  0121  3400               	retlw	0
   452  0122  3424               	retlw	36
   453  0123  3400               	retlw	0
   454  0124  3400               	retlw	0
   455  0125  3400               	retlw	0
   456  0126  3442               	retlw	66
   457  0127  3400               	retlw	0
   458  0128  343C               	retlw	60
   459  0129  3400               	retlw	0
   460  012A  3420               	retlw	32
   461  012B  3400               	retlw	0
   462  012C  3424               	retlw	36
   463  012D  3400               	retlw	0
   464  012E  3424               	retlw	36
   465  012F  3400               	retlw	0
   466  0130  3400               	retlw	0
   467  0131  3400               	retlw	0
   468  0132  3442               	retlw	66
   469  0133  3400               	retlw	0
   470  0134  343C               	retlw	60
   471  0135  3400               	retlw	0
   472  0136  3410               	retlw	16
   473  0137  3400               	retlw	0
   474  0138  3424               	retlw	36
   475  0139  3400               	retlw	0
   476  013A  3424               	retlw	36
   477  013B  3400               	retlw	0
   478  013C  3400               	retlw	0
   479  013D  3400               	retlw	0
   480  013E  3442               	retlw	66
   481  013F  3400               	retlw	0
   482  0140  343C               	retlw	60
   483  0141  3400               	retlw	0
   484  0142  3408               	retlw	8
   485  0143  3400               	retlw	0
   486  0144  3424               	retlw	36
   487  0145  3400               	retlw	0
   488  0146  3424               	retlw	36
   489  0147  3400               	retlw	0
   490  0148  3400               	retlw	0
   491  0149  3400               	retlw	0
   492  014A  3442               	retlw	66
   493  014B  3400               	retlw	0
   494  014C  343C               	retlw	60
   495  014D  3400               	retlw	0
   496  014E  3404               	retlw	4
   497  014F  3400               	retlw	0
   498  0150  3424               	retlw	36
   499  0151  3400               	retlw	0
   500  0152  3424               	retlw	36
   501  0153  3400               	retlw	0
   502  0154  3400               	retlw	0
   503  0155  3400               	retlw	0
   504  0156  3442               	retlw	66
   505  0157  3400               	retlw	0
   506  0158  343C               	retlw	60
   507  0159  3400               	retlw	0
   508  015A  3402               	retlw	2
   509  015B  3400               	retlw	0
   510  015C  3424               	retlw	36
   511  015D  3400               	retlw	0
   512  015E  3424               	retlw	36
   513  015F  3400               	retlw	0
   514  0160  3400               	retlw	0
   515  0161  3400               	retlw	0
   516  0162  3442               	retlw	66
   517  0163  3400               	retlw	0
   518  0164  343C               	retlw	60
   519  0165  3400               	retlw	0
   520  0166  3401               	retlw	1
   521  0167  3400               	retlw	0
   522  0168  3424               	retlw	36
   523  0169  3400               	retlw	0
   524  016A  3424               	retlw	36
   525  016B  3400               	retlw	0
   526  016C  3400               	retlw	0
   527  016D  3400               	retlw	0
   528  016E  3442               	retlw	66
   529  016F  3400               	retlw	0
   530  0170  343D               	retlw	61
   531  0171  3400               	retlw	0
   532  0172  3400               	retlw	0
   533  0173  3400               	retlw	0
   534  0174  3424               	retlw	36
   535  0175  3400               	retlw	0
   536  0176  3424               	retlw	36
   537  0177  3400               	retlw	0
   538  0178  3400               	retlw	0
   539  0179  3400               	retlw	0
   540  017A  3443               	retlw	67
   541  017B  3400               	retlw	0
   542  017C  343C               	retlw	60
   543  017D  3400               	retlw	0
   544  017E  3400               	retlw	0
   545  017F  3400               	retlw	0
   546  0180  3424               	retlw	36
   547  0181  3400               	retlw	0
   548  0182  3424               	retlw	36
   549  0183  3400               	retlw	0
   550  0184  3401               	retlw	1
   551  0185  3400               	retlw	0
   552  0186  3442               	retlw	66
   553  0187  3400               	retlw	0
   554  0188  343C               	retlw	60
   555  0189  3400               	retlw	0
   556  018A  3400               	retlw	0
   557  018B  3400               	retlw	0
   558  018C  3424               	retlw	36
   559  018D  3400               	retlw	0
   560  018E  3425               	retlw	37
   561  018F  3400               	retlw	0
   562  0190  3400               	retlw	0
   563  0191  3400               	retlw	0
   564  0192  3442               	retlw	66
   565  0193  3400               	retlw	0
   566  0194  343C               	retlw	60
   567  0195  3400               	retlw	0
   568  0196  3400               	retlw	0
   569  0197  3400               	retlw	0
   570  0198  3425               	retlw	37
   571  0199  3400               	retlw	0
   572  019A  3424               	retlw	36
   573  019B  3400               	retlw	0
   574  019C  3400               	retlw	0
   575  019D  3400               	retlw	0
   576  019E  3442               	retlw	66
   577  019F  3400               	retlw	0
   578  01A0  343C               	retlw	60
   579  01A1  3400               	retlw	0
   580  01A2  3400               	retlw	0
   581  01A3  3400               	retlw	0
   582  01A4  3426               	retlw	38
   583  01A5  3400               	retlw	0
   584  01A6  3424               	retlw	36
   585  01A7  3400               	retlw	0
   586  01A8  3400               	retlw	0
   587  01A9  3400               	retlw	0
   588  01AA  3442               	retlw	66
   589  01AB  3400               	retlw	0
   590  01AC  343C               	retlw	60
   591  01AD  3400               	retlw	0
   592  01AE  3400               	retlw	0
   593  01AF  3400               	retlw	0
   594  01B0  3424               	retlw	36
   595  01B1  3400               	retlw	0
   596  01B2  3424               	retlw	36
   597  01B3  3400               	retlw	0
   598  01B4  3400               	retlw	0
   599  01B5  3400               	retlw	0
   600  01B6  3442               	retlw	66
   601  01B7  3400               	retlw	0
   602  01B8  343C               	retlw	60
   603  01B9  3400               	retlw	0
   604  01BA  3400               	retlw	0
   605  01BB  3400               	retlw	0
   606  01BC  342C               	retlw	44
   607  01BD  3400               	retlw	0
   608  01BE  3424               	retlw	36
   609  01BF  3400               	retlw	0
   610  01C0  3400               	retlw	0
   611  01C1  3400               	retlw	0
   612  01C2  3442               	retlw	66
   613  01C3  3400               	retlw	0
   614  01C4  343C               	retlw	60
   615  01C5  3400               	retlw	0
   616  01C6  3400               	retlw	0
   617  01C7  3400               	retlw	0
   618  01C8  3434               	retlw	52
   619  01C9  3400               	retlw	0
   620  01CA  3424               	retlw	36
   621  01CB  3400               	retlw	0
   622  01CC  3400               	retlw	0
   623  01CD  3400               	retlw	0
   624  01CE  3442               	retlw	66
   625  01CF  3400               	retlw	0
   626  01D0  343C               	retlw	60
   627  01D1  3400               	retlw	0
   628  01D2  3400               	retlw	0
   629  01D3  3400               	retlw	0
   630  01D4  3424               	retlw	36
   631  01D5  3400               	retlw	0
   632  01D6  3424               	retlw	36
   633  01D7  3400               	retlw	0
   634  01D8  3400               	retlw	0
   635  01D9  3400               	retlw	0
   636  01DA  3442               	retlw	66
   637  01DB  3400               	retlw	0
   638  01DC  343C               	retlw	60
   639  01DD  3400               	retlw	0
   640  01DE  3400               	retlw	0
   641  01DF  3400               	retlw	0
   642  01E0  3464               	retlw	100
   643  01E1  3400               	retlw	0
   644  01E2  3424               	retlw	36
   645  01E3  3400               	retlw	0
   646  01E4  3400               	retlw	0
   647  01E5  3400               	retlw	0
   648  01E6  3442               	retlw	66
   649  01E7  3400               	retlw	0
   650  01E8  343C               	retlw	60
   651  01E9  3400               	retlw	0
   652  01EA  3400               	retlw	0
   653  01EB  3400               	retlw	0
   654  01EC  34A4               	retlw	164
   655  01ED  3400               	retlw	0
   656  01EE  3424               	retlw	36
   657  01EF  3400               	retlw	0
   658  01F0  3400               	retlw	0
   659  01F1  3400               	retlw	0
   660  01F2  3442               	retlw	66
   661  01F3  3400               	retlw	0
   662  01F4  343C               	retlw	60
   663  01F5  3400               	retlw	0
   664  01F6  3400               	retlw	0
   665  01F7  3400               	retlw	0
   666  01F8  3424               	retlw	36
   667  01F9  3400               	retlw	0
   668  01FA  34A4               	retlw	164
   669  01FB  3400               	retlw	0
   670  01FC  3400               	retlw	0
   671  01FD  3400               	retlw	0
   672  01FE  3442               	retlw	66
   673  01FF  3400               	retlw	0
   674  0200  343C               	retlw	60
   675  0201  3400               	retlw	0
   676  0202  3400               	retlw	0
   677  0203  3400               	retlw	0
   678  0204  3424               	retlw	36
   679  0205  3400               	retlw	0
   680  0206  3424               	retlw	36
   681  0207  3400               	retlw	0
   682  0208  3480               	retlw	128
   683  0209  3400               	retlw	0
   684  020A  3442               	retlw	66
   685  020B  3400               	retlw	0
   686  020C  343C               	retlw	60
   687  020D  3400               	retlw	0
   688  020E  3400               	retlw	0
   689  020F  3400               	retlw	0
   690  0210  3424               	retlw	36
   691  0211  3400               	retlw	0
   692  0212  3424               	retlw	36
   693  0213  3400               	retlw	0
   694  0214  3400               	retlw	0
   695  0215  3400               	retlw	0
   696  0216  34C2               	retlw	194
   697  0217  3400               	retlw	0
   698  0218  343C               	retlw	60
   699  0219  3400               	retlw	0
   700  021A  3400               	retlw	0
   701  021B  3400               	retlw	0
   702  021C  3424               	retlw	36
   703  021D  3400               	retlw	0
   704  021E  3424               	retlw	36
   705  021F  3400               	retlw	0
   706  0220  3400               	retlw	0
   707  0221  3400               	retlw	0
   708  0222  3442               	retlw	66
   709  0223  3400               	retlw	0
   710  0224  34BC               	retlw	188
   711  0225  3400               	retlw	0
   712  0226  3400               	retlw	0
   713  0227  3400               	retlw	0
   714  0228                     __end_of_test:	
   715  0007                     _PORTCbits	set	7
   716  005D                     _T0IE	set	93
   717  005A                     _T0IF	set	90
   718  0087                     _TRISC	set	135
   719  0085                     _TRISA	set	133
   720  0091                     _ANSEL	set	145
   721                           
   722                           ; #config settings
   723  0000                     
   724                           	psect	cinit
   725  0013                     start_initialization:	
   726  0013                     __initialization:	
   727                           
   728                           ; Initialize objects allocated to BANK0
   729  0013  1383               	bcf	3,7	;select IRP bank0
   730  0014  3050               	movlw	low (__pdataBANK0+48)
   731  0015  00FD               	movwf	btemp+-1
   732  0016  3002               	movlw	high __pidataBANK0
   733  0017  00FE               	movwf	btemp
   734  0018  30D7               	movlw	low __pidataBANK0
   735  0019  00FF               	movwf	btemp+1
   736  001A  3020               	movlw	low __pdataBANK0
   737  001B  0084               	movwf	4
   738  001C  118A  2356  118A   	fcall	init_ram0
   739                           
   740                           ; Initialize objects allocated to COMMON
   741  001F  118A  2375  118A   	fcall	__pidataCOMMON	;fetch initializer
   742  0022  00FA               	movwf	__pdataCOMMON& (0+127)
   743  0023  118A  2376         	fcall	__pidataCOMMON+1	;fetch initializer
   744  0025  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   745                           
   746                           ; Clear objects allocated to COMMON
   747  0026  01FC               	clrf	__pbssCOMMON& (0+127)
   748  0027                     end_of_initialization:	
   749                           ;End of C runtime variable initialization code
   750                           
   751  0027                     __end_of__initialization:	
   752  0027  0183               	clrf	3
   753  0028  118A  2B07         	ljmp	_main	;jump to C main() function
   754                           
   755                           	psect	bssCOMMON
   756  007C                     __pbssCOMMON:	
   757  007C                     _currentRow:	
   758  007C                     	ds	1
   759                           
   760                           	psect	dataCOMMON
   761  007A                     __pdataCOMMON:	
   762  007A                     _rowCount:	
   763  007A                     	ds	2
   764                           
   765                           	psect	dataBANK0
   766  0020                     __pdataBANK0:	
   767  0020                     _buf:	
   768  0020                     	ds	48
   769                           
   770                           	psect	inittext
   771  0352                     init_fetch0:	
   772                           ;	Called with low address in FSR and high address in W
   773                           
   774  0352  087E               	movf	126,w
   775  0353  008A               	movwf	10
   776  0354  087F               	movf	127,w
   777  0355  0082               	movwf	2
   778  0356                     init_ram0:	
   779                           ;Called with:
   780                           ;	high address of idata address in btemp 
   781                           ;	low address of idata address in btemp+1 
   782                           ;	low address of data in FSR
   783                           ;	high address + 1 of data in btemp-1
   784                           
   785  0356  2352  118A         	fcall	init_fetch0
   786  0358  0080               	movwf	0
   787  0359  0A84               	incf	4,f
   788  035A  0804               	movf	4,w
   789  035B  067D               	xorwf	125,w
   790  035C  1903               	btfsc	3,2
   791  035D  3400               	retlw	0
   792  035E  0AFF               	incf	127,f
   793  035F  1903               	btfsc	3,2
   794  0360  0AFE               	incf	126,f
   795  0361  2B56               	goto	init_ram0
   796                           
   797                           	psect	cstackCOMMON
   798  0070                     __pcstackCOMMON:	
   799  0070                     ?_advanceAnimation:	
   800  0070                     ??_advanceAnimation:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_ConfigureOscillator:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ?_InitApp:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_ClearDisplay:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_ReadyDisplay:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?_PopulateColumns:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_AdvanceRow:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_isr:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ??_isr:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_main:	
   828                           ; 1 bytes @ 0x0
   829                           
   830                           
   831                           ; 1 bytes @ 0x0
   832  0070                     	ds	4
   833  0074                     ??_ConfigureOscillator:	
   834  0074                     ??_InitApp:	
   835                           ; 1 bytes @ 0x4
   836                           
   837  0074                     ??_ClearDisplay:	
   838                           ; 1 bytes @ 0x4
   839                           
   840  0074                     ??_ReadyDisplay:	
   841                           ; 1 bytes @ 0x4
   842                           
   843  0074                     ??_PopulateColumns:	
   844                           ; 1 bytes @ 0x4
   845                           
   846  0074                     ??_AdvanceRow:	
   847                           ; 1 bytes @ 0x4
   848                           
   849                           
   850                           ; 1 bytes @ 0x4
   851  0074                     	ds	1
   852  0075                     ClearDisplay@i:	
   853                           
   854                           ; 2 bytes @ 0x5
   855  0075                     	ds	2
   856  0077                     PopulateColumns@i:	
   857                           
   858                           ; 2 bytes @ 0x7
   859  0077                     	ds	2
   860  0079                     ??_main:	
   861                           
   862                           ; 1 bytes @ 0x9
   863  0079                     	ds	1
   864                           
   865                           	psect	maintext
   866  0307                     __pmaintext:	
   867 ;;
   868 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   869 ;;
   870 ;; *************** function _main *****************
   871 ;; Defined at:
   872 ;;		line 26 in file "main.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : B00/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   886 ;;      Params:         0       0       0       0
   887 ;;      Locals:         0       0       0       0
   888 ;;      Temps:          1       0       0       0
   889 ;;      Totals:         1       0       0       0
   890 ;;Total ram usage:        1 bytes
   891 ;; Hardware stack levels required when called:    3
   892 ;; This function calls:
   893 ;;		_AdvanceRow
   894 ;;		_ClearDisplay
   895 ;;		_ConfigureOscillator
   896 ;;		_InitApp
   897 ;;		_PopulateColumns
   898 ;;		_ReadyDisplay
   899 ;; This function is called by:
   900 ;;		Startup code after reset
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           
   905                           ;psect for function _main
   906  0307                     _main:	
   907                           
   908                           ;main.c: 29: ConfigureOscillator();
   909                           
   910                           ;incstack = 0
   911                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   912  0307  118A  2377  118A   	fcall	_ConfigureOscillator
   913                           
   914                           ;main.c: 32: InitApp();
   915  030A  118A  236C  118A   	fcall	_InitApp
   916                           
   917                           ;main.c: 34: ClearDisplay();
   918  030D  118A  22A3  118A   	fcall	_ClearDisplay
   919                           
   920                           ;main.c: 36: ReadyDisplay();
   921  0310  118A  2362  118A   	fcall	_ReadyDisplay
   922  0313                     l649:	
   923                           ;main.c: 38: while(1)
   924                           
   925                           
   926                           ;main.c: 39: {
   927                           ;main.c: 41: PopulateColumns();
   928  0313  118A  2228  118A   	fcall	_PopulateColumns
   929                           
   930                           ;main.c: 44: _delay((unsigned long)((500)*(8000000/4000000.0)));
   931  0316  30C7               	movlw	199
   932  0317  00F9               	movwf	??_main
   933  0318                     u297:	
   934  0318  2B19               	nop2
   935  0319  0BF9               	decfsz	??_main,f
   936  031A  2B18               	goto	u297
   937  031B  2B1C               	nop2
   938  031C  2B1D               	nop2
   939                           
   940                           ;main.c: 46: PORTCbits.RC4 = 1;
   941  031D  1283               	bcf	3,5	;RP0=0, select bank0
   942  031E  1303               	bcf	3,6	;RP1=0, select bank0
   943  031F  1607               	bsf	7,4	;volatile
   944                           
   945                           ;main.c: 49: AdvanceRow();
   946  0320  118A  2324  118A   	fcall	_AdvanceRow
   947  0323  2B13               	goto	l649
   948  0324                     __end_of_main:	
   949                           
   950                           	psect	text1
   951  0362                     __ptext1:	
   952 ;; *************** function _ReadyDisplay *****************
   953 ;; Defined at:
   954 ;;		line 100 in file "user.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		None
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   968 ;;      Params:         0       0       0       0
   969 ;;      Locals:         0       0       0       0
   970 ;;      Temps:          0       0       0       0
   971 ;;      Totals:         0       0       0       0
   972 ;;Total ram usage:        0 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; Hardware stack levels required when called:    2
   975 ;; This function calls:
   976 ;;		Nothing
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           
   983                           ;psect for function _ReadyDisplay
   984  0362                     _ReadyDisplay:	
   985                           
   986                           ;user.c: 102: PORTCbits.RC4 = 1;
   987                           
   988                           ;incstack = 0
   989                           ; Regs used in _ReadyDisplay: []
   990  0362  1283               	bcf	3,5	;RP0=0, select bank0
   991  0363  1303               	bcf	3,6	;RP1=0, select bank0
   992  0364  1607               	bsf	7,4	;volatile
   993                           
   994                           ;user.c: 104: PORTCbits.RC1 = 1;
   995  0365  1487               	bsf	7,1	;volatile
   996                           
   997                           ;user.c: 107: PORTCbits.RC3 = 1;
   998  0366  1587               	bsf	7,3	;volatile
   999                           
  1000                           ;user.c: 108: PORTCbits.RC3 = 0;
  1001  0367  1187               	bcf	7,3	;volatile
  1002                           
  1003                           ;user.c: 109: PORTCbits.RC3 = 1;
  1004  0368  1587               	bsf	7,3	;volatile
  1005                           
  1006                           ;user.c: 110: PORTCbits.RC3 = 0;
  1007  0369  1187               	bcf	7,3	;volatile
  1008                           
  1009                           ;user.c: 112: PORTCbits.RC4 = 0;
  1010  036A  1207               	bcf	7,4	;volatile
  1011  036B  0008               	return
  1012  036C                     __end_of_ReadyDisplay:	
  1013                           
  1014                           	psect	text2
  1015  0228                     __ptext2:	
  1016 ;; *************** function _PopulateColumns *****************
  1017 ;; Defined at:
  1018 ;;		line 117 in file "user.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  i               2    7[COMMON] int 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1032 ;;      Params:         0       0       0       0
  1033 ;;      Locals:         2       0       0       0
  1034 ;;      Temps:          3       0       0       0
  1035 ;;      Totals:         5       0       0       0
  1036 ;;Total ram usage:        5 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    2
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           
  1047                           ;psect for function _PopulateColumns
  1048  0228                     _PopulateColumns:	
  1049                           
  1050                           ;user.c: 119: PORTCbits.RC4 = 1;
  1051                           
  1052                           ;incstack = 0
  1053                           ; Regs used in _PopulateColumns: [wreg-fsr0h+status,2+status,0]
  1054  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0229  1303               	bcf	3,6	;RP1=0, select bank0
  1056  022A  1607               	bsf	7,4	;volatile
  1057                           
  1058                           ;user.c: 122: for(int i =7;i>=0;i--)
  1059  022B  3007               	movlw	7
  1060  022C  00F7               	movwf	PopulateColumns@i
  1061  022D  3000               	movlw	0
  1062  022E  00F8               	movwf	PopulateColumns@i+1
  1063  022F  1BF8               	btfsc	PopulateColumns@i+1,7
  1064  0230  2A98               	goto	l75
  1065  0231                     l593:	
  1066                           
  1067                           ;user.c: 123: {
  1068                           ;user.c: 126: if(i==3)
  1069  0231  3003               	movlw	3
  1070  0232  0677               	xorwf	PopulateColumns@i,w
  1071  0233  0478               	iorwf	PopulateColumns@i+1,w
  1072  0234  1D03               	btfss	3,2
  1073  0235  2A41               	goto	l597
  1074                           
  1075                           ;user.c: 127: {
  1076                           ;user.c: 128: PORTCbits.RC0 = !buf[currentRow][0];
  1077  0236  087C               	movf	_currentRow,w
  1078  0237  00F4               	movwf	??_PopulateColumns
  1079  0238  3002               	movlw	2
  1080  0239                     u55:	
  1081  0239  1003               	clrc
  1082  023A  0DF4               	rlf	??_PopulateColumns,f
  1083  023B  3EFF               	addlw	-1
  1084  023C  1D03               	skipz
  1085  023D  2A39               	goto	u55
  1086  023E  1003               	clrc
  1087  023F  0D74               	rlf	??_PopulateColumns,w
  1088  0240  2A71               	goto	L8
  1089  0241                     l597:	
  1090                           ;user.c: 129: }
  1091                           
  1092                           
  1093                           ;user.c: 130: else if(i==2)
  1094  0241  3002               	movlw	2
  1095  0242  0677               	xorwf	PopulateColumns@i,w
  1096  0243  0478               	iorwf	PopulateColumns@i+1,w
  1097  0244  1D03               	btfss	3,2
  1098  0245  2A52               	goto	l601
  1099                           
  1100                           ;user.c: 131: {
  1101                           ;user.c: 132: PORTCbits.RC0 = !buf[currentRow][1];
  1102  0246  087C               	movf	_currentRow,w
  1103  0247  00F4               	movwf	??_PopulateColumns
  1104  0248  3002               	movlw	2
  1105  0249                     u95:	
  1106  0249  1003               	clrc
  1107  024A  0DF4               	rlf	??_PopulateColumns,f
  1108  024B  3EFF               	addlw	-1
  1109  024C  1D03               	skipz
  1110  024D  2A49               	goto	u95
  1111  024E  1003               	clrc
  1112  024F  0D74               	rlf	??_PopulateColumns,w
  1113  0250  3E01               	addlw	1
  1114  0251  2A71               	goto	L8
  1115  0252                     l601:	
  1116                           ;user.c: 133: }
  1117                           
  1118                           
  1119                           ;user.c: 134: else if(i==1)
  1120  0252  0377               	decf	PopulateColumns@i,w
  1121  0253  0478               	iorwf	PopulateColumns@i+1,w
  1122  0254  1D03               	btfss	3,2
  1123  0255  2A62               	goto	l605
  1124                           
  1125                           ;user.c: 135: {
  1126                           ;user.c: 136: PORTCbits.RC0 = !buf[currentRow][2];
  1127  0256  087C               	movf	_currentRow,w
  1128  0257  00F4               	movwf	??_PopulateColumns
  1129  0258  3002               	movlw	2
  1130  0259                     u135:	
  1131  0259  1003               	clrc
  1132  025A  0DF4               	rlf	??_PopulateColumns,f
  1133  025B  3EFF               	addlw	-1
  1134  025C  1D03               	skipz
  1135  025D  2A59               	goto	u135
  1136  025E  1003               	clrc
  1137  025F  0D74               	rlf	??_PopulateColumns,w
  1138  0260  3E02               	addlw	2
  1139  0261  2A71               	goto	L8
  1140  0262                     l605:	
  1141                           ;user.c: 137: }
  1142                           
  1143                           
  1144                           ;user.c: 138: else if(i==0)
  1145  0262  0877               	movf	PopulateColumns@i,w
  1146  0263  0478               	iorwf	PopulateColumns@i+1,w
  1147  0264  1D03               	btfss	3,2
  1148  0265  2A73               	goto	l609
  1149                           
  1150                           ;user.c: 139: {
  1151                           ;user.c: 140: PORTCbits.RC0 = !buf[currentRow][3];
  1152  0266  087C               	movf	_currentRow,w
  1153  0267  00F4               	movwf	??_PopulateColumns
  1154  0268  3002               	movlw	2
  1155  0269                     u175:	
  1156  0269  1003               	clrc
  1157  026A  0DF4               	rlf	??_PopulateColumns,f
  1158  026B  3EFF               	addlw	-1
  1159  026C  1D03               	skipz
  1160  026D  2A69               	goto	u175
  1161  026E  1003               	clrc
  1162  026F  0D74               	rlf	??_PopulateColumns,w
  1163  0270  3E03               	addlw	3
  1164  0271                     L8:	
  1165  0271  3E20               	addlw	(low (_buf| 0))& (0+255)
  1166  0272  2A82               	goto	L7
  1167  0273                     l609:	
  1168                           ;user.c: 141: }
  1169                           
  1170                           
  1171                           ;user.c: 142: else
  1172                           ;user.c: 143: {
  1173                           ;user.c: 144: PORTCbits.RC0 = !buf[currentRow][i];
  1174  0273  087C               	movf	_currentRow,w
  1175  0274  00F4               	movwf	??_PopulateColumns
  1176  0275  3003               	movlw	3
  1177  0276                     u205:	
  1178  0276  1003               	clrc
  1179  0277  0DF4               	rlf	??_PopulateColumns,f
  1180  0278  3EFF               	addlw	-1
  1181  0279  1D03               	skipz
  1182  027A  2A76               	goto	u205
  1183  027B  3020               	movlw	(low (_buf| 0))& (0+255)
  1184  027C  0774               	addwf	??_PopulateColumns,w
  1185  027D  00F5               	movwf	??_PopulateColumns+1
  1186  027E  0877               	movf	PopulateColumns@i,w
  1187  027F  0775               	addwf	??_PopulateColumns+1,w
  1188  0280  00F6               	movwf	??_PopulateColumns+2
  1189  0281  0876               	movf	??_PopulateColumns+2,w
  1190  0282                     L7:	
  1191  0282  0084               	movwf	4
  1192  0283  1383               	bcf	3,7	;select IRP bank0
  1193  0284  0800               	movf	0,w
  1194  0285  1D03               	btfss	3,2
  1195  0286  2A8B               	goto	u210
  1196  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0289  1407               	bsf	7,0	;volatile
  1199  028A  2A8E               	goto	l611
  1200  028B                     u210:	
  1201  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1202  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1203  028D  1007               	bcf	7,0	;volatile
  1204  028E                     l611:	
  1205                           
  1206                           ;user.c: 145: }
  1207                           ;user.c: 148: PORTCbits.RC2 = 1;
  1208  028E  1507               	bsf	7,2	;volatile
  1209                           
  1210                           ;user.c: 149: PORTCbits.RC2 = 0;
  1211  028F  1107               	bcf	7,2	;volatile
  1212  0290  30FF               	movlw	255
  1213  0291  07F7               	addwf	PopulateColumns@i,f
  1214  0292  1803               	skipnc
  1215  0293  0AF8               	incf	PopulateColumns@i+1,f
  1216  0294  30FF               	movlw	255
  1217  0295  07F8               	addwf	PopulateColumns@i+1,f
  1218  0296  1FF8               	btfss	PopulateColumns@i+1,7
  1219  0297  2A31               	goto	l593
  1220  0298                     l75:	
  1221                           
  1222                           ;user.c: 153: }
  1223                           ;user.c: 157: PORTCbits.RC4 = 0;
  1224  0298  1207               	bcf	7,4	;volatile
  1225                           
  1226                           ;user.c: 159: currentRow++;
  1227  0299  3001               	movlw	1
  1228  029A  00F4               	movwf	??_PopulateColumns
  1229  029B  0874               	movf	??_PopulateColumns,w
  1230  029C  07FC               	addwf	_currentRow,f
  1231                           
  1232                           ;user.c: 160: if(currentRow == 6){
  1233  029D  3006               	movlw	6
  1234  029E  067C               	xorwf	_currentRow,w
  1235  029F  1D03               	btfss	3,2
  1236  02A0  0008               	return
  1237                           
  1238                           ;user.c: 161: currentRow = 0;
  1239  02A1  01FC               	clrf	_currentRow
  1240  02A2  0008               	return
  1241  02A3                     __end_of_PopulateColumns:	
  1242                           
  1243                           	psect	text3
  1244  036C                     __ptext3:	
  1245 ;; *************** function _InitApp *****************
  1246 ;; Defined at:
  1247 ;;		line 39 in file "user.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1261 ;;      Params:         0       0       0       0
  1262 ;;      Locals:         0       0       0       0
  1263 ;;      Temps:          0       0       0       0
  1264 ;;      Totals:         0       0       0       0
  1265 ;;Total ram usage:        0 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    2
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _InitApp
  1277  036C                     _InitApp:	
  1278                           
  1279                           ;user.c: 48: ANSEL = 0b00000000;
  1280                           
  1281                           ;incstack = 0
  1282                           ; Regs used in _InitApp: [wreg+status,2]
  1283  036C  1683               	bsf	3,5	;RP0=1, select bank1
  1284  036D  1303               	bcf	3,6	;RP1=0, select bank1
  1285  036E  0191               	clrf	17	;volatile
  1286                           
  1287                           ;user.c: 50: TRISA = 0b11111111;
  1288  036F  30FF               	movlw	255
  1289  0370  0085               	movwf	5	;volatile
  1290                           
  1291                           ;user.c: 51: TRISC = 0b11000000;
  1292  0371  30C0               	movlw	192
  1293  0372  0087               	movwf	7	;volatile
  1294                           
  1295                           ;user.c: 53: T0IE = 0;
  1296  0373  128B               	bcf	11,5	;volatile
  1297  0374  0008               	return
  1298  0375                     __end_of_InitApp:	
  1299                           
  1300                           	psect	text4
  1301  0377                     __ptext4:	
  1302 ;; *************** function _ConfigureOscillator *****************
  1303 ;; Defined at:
  1304 ;;		line 18 in file "system.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		None
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1318 ;;      Params:         0       0       0       0
  1319 ;;      Locals:         0       0       0       0
  1320 ;;      Temps:          0       0       0       0
  1321 ;;      Totals:         0       0       0       0
  1322 ;;Total ram usage:        0 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    2
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _ConfigureOscillator
  1334  0377                     _ConfigureOscillator:	
  1335                           
  1336                           ;incstack = 0
  1337                           ; Regs used in _ConfigureOscillator: []
  1338  0377  0008               	return
  1339  0378                     __end_of_ConfigureOscillator:	
  1340                           
  1341                           	psect	text5
  1342  02A3                     __ptext5:	
  1343 ;; *************** function _ClearDisplay *****************
  1344 ;; Defined at:
  1345 ;;		line 58 in file "user.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  i               2    5[COMMON] int 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, btemp+1
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1359 ;;      Params:         0       0       0       0
  1360 ;;      Locals:         2       0       0       0
  1361 ;;      Temps:          1       0       0       0
  1362 ;;      Totals:         3       0       0       0
  1363 ;;Total ram usage:        3 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    2
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _ClearDisplay
  1375  02A3                     _ClearDisplay:	
  1376                           
  1377                           ;user.c: 63: PORTCbits.RC4 = 1;
  1378                           
  1379                           ;incstack = 0
  1380                           ; Regs used in _ClearDisplay: [wreg+status,2+btemp+1]
  1381  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1382  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1383  02A5  1607               	bsf	7,4	;volatile
  1384                           
  1385                           ;user.c: 65: PORTCbits.RC1 = 0;
  1386  02A6  1087               	bcf	7,1	;volatile
  1387                           
  1388                           ;user.c: 66: PORTCbits.RC0 = 1;
  1389  02A7  1407               	bsf	7,0	;volatile
  1390                           
  1391                           ;user.c: 68: for(int i = 0;i<8;i++){
  1392  02A8  01F5               	clrf	ClearDisplay@i
  1393  02A9  01F6               	clrf	ClearDisplay@i+1
  1394  02AA  0876               	movf	ClearDisplay@i+1,w
  1395  02AB  3A80               	xorlw	128
  1396  02AC  00FF               	movwf	127
  1397  02AD  3080               	movlw	128
  1398  02AE  027F               	subwf	127,w
  1399  02AF  1D03               	skipz
  1400  02B0  2AB3               	goto	u15
  1401  02B1  3008               	movlw	8
  1402  02B2  0275               	subwf	ClearDisplay@i,w
  1403  02B3                     u15:	
  1404  02B3  1803               	btfsc	3,0
  1405  02B4  2AD3               	goto	l59
  1406  02B5                     l58:	
  1407                           
  1408                           ;user.c: 69: PORTCbits.RC3 = 1;
  1409  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1410  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1411  02B7  1587               	bsf	7,3	;volatile
  1412                           
  1413                           ;user.c: 70: PORTCbits.RC2 = 1;
  1414  02B8  1507               	bsf	7,2	;volatile
  1415                           
  1416                           ;user.c: 71: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1417  02B9  3006               	movlw	6
  1418  02BA  00F4               	movwf	??_ClearDisplay
  1419  02BB                     u307:	
  1420  02BB  0BF4               	decfsz	??_ClearDisplay,f
  1421  02BC  2ABB               	goto	u307
  1422  02BD  0000               	nop
  1423                           
  1424                           ;user.c: 73: PORTCbits.RC3 = 0;
  1425  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1426  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1427  02C0  1187               	bcf	7,3	;volatile
  1428                           
  1429                           ;user.c: 74: PORTCbits.RC2 = 0;
  1430  02C1  1107               	bcf	7,2	;volatile
  1431  02C2  3001               	movlw	1
  1432  02C3  07F5               	addwf	ClearDisplay@i,f
  1433  02C4  1803               	skipnc
  1434  02C5  0AF6               	incf	ClearDisplay@i+1,f
  1435  02C6  3000               	movlw	0
  1436  02C7  07F6               	addwf	ClearDisplay@i+1,f
  1437  02C8  0876               	movf	ClearDisplay@i+1,w
  1438  02C9  3A80               	xorlw	128
  1439  02CA  00FF               	movwf	127
  1440  02CB  3080               	movlw	128
  1441  02CC  027F               	subwf	127,w
  1442  02CD  1D03               	skipz
  1443  02CE  2AD1               	goto	u25
  1444  02CF  3008               	movlw	8
  1445  02D0  0275               	subwf	ClearDisplay@i,w
  1446  02D1                     u25:	
  1447  02D1  1C03               	skipc
  1448  02D2  2AB5               	goto	l58
  1449  02D3                     l59:	
  1450                           
  1451                           ;user.c: 75: }
  1452                           ;user.c: 77: PORTCbits.RC4 = 0;
  1453  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1454  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1455  02D5  1207               	bcf	7,4	;volatile
  1456  02D6  0008               	return
  1457  02D7                     __end_of_ClearDisplay:	
  1458                           
  1459                           	psect	text6
  1460  0324                     __ptext6:	
  1461 ;; *************** function _AdvanceRow *****************
  1462 ;; Defined at:
  1463 ;;		line 83 in file "user.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, btemp+1
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1477 ;;      Params:         0       0       0       0
  1478 ;;      Locals:         0       0       0       0
  1479 ;;      Temps:          0       0       0       0
  1480 ;;      Totals:         0       0       0       0
  1481 ;;Total ram usage:        0 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    2
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _AdvanceRow
  1493  0324                     _AdvanceRow:	
  1494                           
  1495                           ;user.c: 86: if(rowCount >= 6)
  1496                           
  1497                           ;incstack = 0
  1498                           ; Regs used in _AdvanceRow: [wreg+status,2+btemp+1]
  1499  0324  087B               	movf	_rowCount+1,w
  1500  0325  3A80               	xorlw	128
  1501  0326  00FF               	movwf	127
  1502  0327  3080               	movlw	128
  1503  0328  027F               	subwf	127,w
  1504  0329  1D03               	skipz
  1505  032A  2B2D               	goto	u255
  1506  032B  3006               	movlw	6
  1507  032C  027A               	subwf	_rowCount,w
  1508  032D                     u255:	
  1509  032D  1C03               	skipc
  1510  032E  2B34               	goto	l629
  1511                           
  1512                           ;user.c: 87: {
  1513                           ;user.c: 88: PORTCbits.RC1 = 1;
  1514  032F  1283               	bcf	3,5	;RP0=0, select bank0
  1515  0330  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0331  1487               	bsf	7,1	;volatile
  1517                           
  1518                           ;user.c: 90: rowCount = 0;
  1519  0332  01FA               	clrf	_rowCount
  1520  0333  01FB               	clrf	_rowCount+1
  1521  0334                     l629:	
  1522                           
  1523                           ;user.c: 91: }
  1524                           ;user.c: 93: PORTCbits.RC3 = 1;
  1525  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0336  1587               	bsf	7,3	;volatile
  1528                           
  1529                           ;user.c: 94: PORTCbits.RC3 = 0;
  1530  0337  1187               	bcf	7,3	;volatile
  1531                           
  1532                           ;user.c: 96: rowCount++;
  1533  0338  3001               	movlw	1
  1534  0339  07FA               	addwf	_rowCount,f
  1535  033A  1803               	skipnc
  1536  033B  0AFB               	incf	_rowCount+1,f
  1537  033C  3000               	movlw	0
  1538  033D  07FB               	addwf	_rowCount+1,f
  1539  033E  0008               	return
  1540  033F                     __end_of_AdvanceRow:	
  1541                           
  1542                           	psect	text7
  1543  033F                     __ptext7:	
  1544 ;; *************** function _isr *****************
  1545 ;; Defined at:
  1546 ;;		line 24 in file "interrupts.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		status,2, status,0, pclath, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1560 ;;      Params:         0       0       0       0
  1561 ;;      Locals:         0       0       0       0
  1562 ;;      Temps:          4       0       0       0
  1563 ;;      Totals:         4       0       0       0
  1564 ;;Total ram usage:        4 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    1
  1567 ;; This function calls:
  1568 ;;		_advanceAnimation
  1569 ;; This function is called by:
  1570 ;;		Interrupt level 1
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           
  1575                           ;psect for function _isr
  1576  033F                     _isr:	
  1577                           
  1578                           ;interrupts.c: 35: if(T0IF == 1)
  1579  033F  1D0B               	btfss	11,2	;volatile
  1580  0340  2B45               	goto	i1l11
  1581                           
  1582                           ;interrupts.c: 36: {
  1583                           ;interrupts.c: 37: advanceAnimation();
  1584  0341  118A  2378  118A   	fcall	_advanceAnimation
  1585                           
  1586                           ;interrupts.c: 38: T0IF = 0;
  1587  0344  110B               	bcf	11,2	;volatile
  1588  0345                     i1l11:	
  1589                           ;interrupts.c: 40: else
  1590                           ;interrupts.c: 41: {
  1591                           
  1592                           ;interrupts.c: 39: }
  1593                           
  1594  0345  0873               	movf	??_isr+3,w
  1595  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0347  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0348  00FF               	movwf	127
  1598  0349  0872               	movf	??_isr+2,w
  1599  034A  008A               	movwf	10
  1600  034B  0871               	movf	??_isr+1,w
  1601  034C  0084               	movwf	4
  1602  034D  0E70               	swapf	??_isr^(0+-128),w
  1603  034E  0083               	movwf	3
  1604  034F  0EFE               	swapf	126,f
  1605  0350  0E7E               	swapf	126,w
  1606  0351  0009               	retfie
  1607  0352                     __end_of_isr:	
  1608                           
  1609                           	psect	intentry
  1610  0004                     __pintentry:	
  1611                           ;incstack = 0
  1612                           ; Regs used in _isr: [status,2+status,0+pclath+cstack]
  1613                           
  1614  0004                     interrupt_function:	
  1615  007E                     saved_w	set	btemp
  1616  0004  00FE               	movwf	btemp
  1617  0005  0E03               	swapf	3,w
  1618  0006  00F0               	movwf	??_isr
  1619  0007  0804               	movf	4,w
  1620  0008  00F1               	movwf	??_isr+1
  1621  0009  080A               	movf	10,w
  1622  000A  00F2               	movwf	??_isr+2
  1623  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1624  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1625  000D  087F               	movf	btemp+1,w
  1626  000E  00F3               	movwf	??_isr+3
  1627  000F  118A  2B3F         	ljmp	_isr
  1628                           
  1629                           	psect	text8
  1630  0378                     __ptext8:	
  1631 ;; *************** function _advanceAnimation *****************
  1632 ;; Defined at:
  1633 ;;		line 166 in file "user.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		None
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1647 ;;      Params:         0       0       0       0
  1648 ;;      Locals:         0       0       0       0
  1649 ;;      Temps:          0       0       0       0
  1650 ;;      Totals:         0       0       0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_isr
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           
  1661                           ;psect for function _advanceAnimation
  1662  0378                     _advanceAnimation:	
  1663                           
  1664                           ;incstack = 0
  1665                           ; Regs used in _advanceAnimation: []
  1666  0378  0008               	return
  1667  0379                     __end_of_advanceAnimation:	
  1668  007E                     btemp	set	126	;btemp
  1669  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    288
    Data        50
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80      0      48
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PopulateColumns

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     135
                                              9 COMMON     1     1      0
                         _AdvanceRow
                       _ClearDisplay
                _ConfigureOscillator
                            _InitApp
                    _PopulateColumns
                       _ReadyDisplay
 ---------------------------------------------------------------------------------
 (1) _ReadyDisplay                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PopulateColumns                                      5     5      0     105
                                              4 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearDisplay                                         3     3      0      30
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _AdvanceRow                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
                   _advanceAnimation
 ---------------------------------------------------------------------------------
 (3) _advanceAnimation                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AdvanceRow
   _ClearDisplay
   _ConfigureOscillator
   _InitApp
   _PopulateColumns
   _ReadyDisplay

 _isr (ROOT)
   _advanceAnimation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      30       3       60.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3D      10        0.0%
ABS                  0      0      3D       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Sep 19 12:22:33 2018

                           pc 0002                   __CFG_CP$OFF 0000                            l58 02B5  
                          l59 02D3                            l75 0298                            u15 02B3  
                          u25 02D1                            u55 0239                            u95 0249  
                          fsr 0004                           l601 0252                           l611 028E  
                         l605 0262                           l609 0273                           l629 0334  
                         l593 0231                           l649 0313                           l597 0241  
                         u210 028B                           u205 0276                           u135 0259  
                         u307 02BB                           u255 032D                           u175 0269  
                __CFG_CPD$OFF 0000                           u297 0318                           _buf 0020  
                         _isr 033F                           fsr0 0004                           indf 0000  
                __CFG_IESO$ON 0000                          ?_isr 0070                    _AdvanceRow 0324  
                        _T0IE 005D                          _T0IF 005A                          i1l11 0345  
               __CFG_FCMEN$ON 0000                          _main 0307                          _test 0108  
                        btemp 007E                          start 0011                 __CFG_MCLRE$ON 0000  
             __end_of_InitApp 0375                         ??_isr 0070              _advanceAnimation 0378  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                         _ANSEL 0091  
                       _TRISA 0085                         _TRISC 0087           _ConfigureOscillator 0377  
              __CFG_BOREN$OFF 0000                         pclath 000A                         status 0003  
                       wtemp0 007E          ?_ConfigureOscillator 0070               __initialization 0013  
               ?_ReadyDisplay 0070                  __end_of_main 0324                  __end_of_test 0228  
            PopulateColumns@i 0077                        ??_main 0079                 ClearDisplay@i 0075  
       __size_of_ClearDisplay 0034                   ?_AdvanceRow 0070                     ??_InitApp 0074  
       ??_ConfigureOscillator 0074                __CFG_PWRTE$OFF 0000                ??_ReadyDisplay 0074  
                _ClearDisplay 02A3                  __pdataCOMMON 007A                        saved_w 007E  
             _PopulateColumns 0228       __end_of__initialization 0027                __pcstackCOMMON 0070  
                __pidataBANK0 02D7           __size_of_AdvanceRow 001B      __end_of_advanceAnimation 0379  
                  __pmaintext 0307                    __pintentry 0004       __end_of_PopulateColumns 02A3  
        __end_of_ReadyDisplay 036C                    __stringtab 0100                       _InitApp 036C  
                  _currentRow 007C                       __ptext1 0362                       __ptext2 0228  
                     __ptext3 036C                       __ptext4 0377                       __ptext5 02A3  
                     __ptext6 0324                       __ptext7 033F                       __ptext8 0378  
                __size_of_isr 0013                  ??_AdvanceRow 0074          end_of_initialization 0027  
                __pstringtext 0100            __end_of_AdvanceRow 033F                     _PORTCbits 0007  
            ?_PopulateColumns 0070   __end_of_ConfigureOscillator 0378                 __pidataCOMMON 0375  
       __size_of_ReadyDisplay 000A           start_initialization 0013                   __end_of_isr 0352  
           ?_advanceAnimation 0070            ??_advanceAnimation 0070                  _ReadyDisplay 0362  
                  init_fetch0 0352                   __pdataBANK0 0020                   __pbssCOMMON 007C  
                   ___latbits 0001                      ?_InitApp 0070             interrupt_function 0004  
                 __stringbase 0108                 ?_ClearDisplay 0070              __size_of_InitApp 0009  
              ??_ClearDisplay 0074            __end_of__stringtab 0108      __size_of_PopulateColumns 007B  
               __size_of_main 001D  __size_of_ConfigureOscillator 0001                      _rowCount 007A  
   __size_of_advanceAnimation 0001                      init_ram0 0356                      intlevel1 0000  
                   stringcode 0100                      stringtab 0100            __CFG_FOSC$INTOSCIO 0000  
        __end_of_ClearDisplay 02D7             ??_PopulateColumns 0074  
