

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Nov 13 12:28:43 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F688
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.44
    30                           ; Generated 14/09/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F688 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0007                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0087                     	;# 
    92  008C                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0095                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0007                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  0087                     	;# 
   140  008C                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0095                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0007                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0087                     	;# 
   188  008C                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0095                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0007                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001E                     	;# 
   232  001F                     	;# 
   233  0081                     	;# 
   234  0085                     	;# 
   235  0087                     	;# 
   236  008C                     	;# 
   237  008E                     	;# 
   238  008F                     	;# 
   239  0090                     	;# 
   240  0091                     	;# 
   241  0095                     	;# 
   242  0095                     	;# 
   243  0096                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009A                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  009F                     	;# 
   255  0000                     	;# 
   256  0001                     	;# 
   257  0002                     	;# 
   258  0003                     	;# 
   259  0004                     	;# 
   260  0005                     	;# 
   261  0007                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0087                     	;# 
   284  008C                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0095                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0007                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0087                     	;# 
   332  008C                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0095                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351                           
   352                           	psect	idataCOMMON
   353  0386                     __pidataCOMMON:	
   354                           
   355                           ;initializer for _rowCount
   356  0386  3402               	retlw	2
   357  0387  3400               	retlw	0
   358                           
   359                           	psect	idataBANK0
   360  02B0                     __pidataBANK0:	
   361                           
   362                           ;initializer for _buf
   363  02B0  3401               	retlw	1
   364  02B1  3401               	retlw	1
   365  02B2  3401               	retlw	1
   366  02B3  3401               	retlw	1
   367  02B4  3401               	retlw	1
   368  02B5  3401               	retlw	1
   369  02B6  3401               	retlw	1
   370  02B7  3401               	retlw	1
   371  02B8  3401               	retlw	1
   372  02B9  3401               	retlw	1
   373  02BA  3401               	retlw	1
   374  02BB  3401               	retlw	1
   375  02BC  3401               	retlw	1
   376  02BD  3401               	retlw	1
   377  02BE  3401               	retlw	1
   378  02BF  3401               	retlw	1
   379  02C0  3401               	retlw	1
   380  02C1  3401               	retlw	1
   381  02C2  3401               	retlw	1
   382  02C3  3401               	retlw	1
   383  02C4  3401               	retlw	1
   384  02C5  3401               	retlw	1
   385  02C6  3401               	retlw	1
   386  02C7  3401               	retlw	1
   387  02C8  3401               	retlw	1
   388  02C9  3401               	retlw	1
   389  02CA  3401               	retlw	1
   390  02CB  3401               	retlw	1
   391  02CC  3401               	retlw	1
   392  02CD  3401               	retlw	1
   393  02CE  3401               	retlw	1
   394  02CF  3401               	retlw	1
   395  02D0  3401               	retlw	1
   396  02D1  3401               	retlw	1
   397  02D2  3401               	retlw	1
   398  02D3  3401               	retlw	1
   399  02D4  3401               	retlw	1
   400  02D5  3401               	retlw	1
   401  02D6  3401               	retlw	1
   402  02D7  3401               	retlw	1
   403  02D8  3401               	retlw	1
   404  02D9  3401               	retlw	1
   405  02DA  3401               	retlw	1
   406  02DB  3401               	retlw	1
   407  02DC  3401               	retlw	1
   408  02DD  3401               	retlw	1
   409  02DE  3401               	retlw	1
   410  02DF  3401               	retlw	1
   411                           
   412                           ;initializer for _frameSize
   413  02E0  3406               	retlw	6
   414  02E1  3400               	retlw	0
   415                           
   416                           ;initializer for _maxFrames
   417  02E2  3418               	retlw	24
   418  02E3  3400               	retlw	0
   419                           
   420                           	psect	strings
   421  0100                     __pstrings:	
   422  0100                     stringtab:	
   423  0100                     __stringtab:	
   424  0100                     stringcode:	
   425                           ;	String table - string pointers are 1 byte each
   426                           
   427  0100                     stringdir:	
   428  0100  3001               	movlw	high stringdir
   429  0101  008A               	movwf	10
   430  0102  0804               	movf	4,w
   431  0103  0A84               	incf	4,f
   432  0104  0782               	addwf	2,f
   433  0105                     __stringbase:	
   434  0105  3400               	retlw	0
   435  0106                     __end_of__stringtab:	
   436  0106                     _frameAnimation:	
   437  0106  3400               	retlw	0
   438  0107  3400               	retlw	0
   439  0108  341D               	retlw	29
   440  0109  3400               	retlw	0
   441  010A  3415               	retlw	21
   442  010B  3400               	retlw	0
   443  010C  3417               	retlw	23
   444  010D  3400               	retlw	0
   445  010E  3400               	retlw	0
   446  010F  3400               	retlw	0
   447  0110  340F               	retlw	15
   448  0111  3400               	retlw	0
   449  0112  3409               	retlw	9
   450  0113  3400               	retlw	0
   451  0114  3409               	retlw	9
   452  0115  3400               	retlw	0
   453  0116  3400               	retlw	0
   454  0117  3400               	retlw	0
   455  0118  340F               	retlw	15
   456  0119  3400               	retlw	0
   457  011A  3404               	retlw	4
   458  011B  3400               	retlw	0
   459  011C  3408               	retlw	8
   460  011D  3400               	retlw	0
   461  011E  3400               	retlw	0
   462  011F  3400               	retlw	0
   463  0120  3406               	retlw	6
   464  0121  3400               	retlw	0
   465  0122  3409               	retlw	9
   466  0123  3400               	retlw	0
   467  0124  3406               	retlw	6
   468  0125  3400               	retlw	0
   469  0126  3400               	retlw	0
   470  0127  3400               	retlw	0
   471  0128  341F               	retlw	31
   472  0129  3400               	retlw	0
   473  012A  3400               	retlw	0
   474  012B  3400               	retlw	0
   475  012C  341F               	retlw	31
   476  012D  3400               	retlw	0
   477  012E  3400               	retlw	0
   478  012F  3400               	retlw	0
   479  0130  3417               	retlw	23
   480  0131  3400               	retlw	0
   481  0132  3400               	retlw	0
   482  0133  3400               	retlw	0
   483  0134  340F               	retlw	15
   484  0135  3400               	retlw	0
   485  0136  3404               	retlw	4
   486  0137  3400               	retlw	0
   487  0138  3408               	retlw	8
   488  0139  3400               	retlw	0
   489  013A  3407               	retlw	7
   490  013B  3400               	retlw	0
   491  013C  3400               	retlw	0
   492  013D  3400               	retlw	0
   493  013E  341D               	retlw	29
   494  013F  3400               	retlw	0
   495  0140  3415               	retlw	21
   496  0141  3400               	retlw	0
   497  0142  340F               	retlw	15
   498  0143  3400               	retlw	0
   499  0144  3400               	retlw	0
   500  0145  3400               	retlw	0
   501  0146  3400               	retlw	0
   502  0147  3400               	retlw	0
   503  0148  3400               	retlw	0
   504  0149  3400               	retlw	0
   505  014A  3410               	retlw	16
   506  014B  3400               	retlw	0
   507  014C  3410               	retlw	16
   508  014D  3400               	retlw	0
   509  014E  341F               	retlw	31
   510  014F  3400               	retlw	0
   511  0150  3410               	retlw	16
   512  0151  3400               	retlw	0
   513  0152  3410               	retlw	16
   514  0153  3400               	retlw	0
   515  0154  3400               	retlw	0
   516  0155  3400               	retlw	0
   517  0156  340E               	retlw	14
   518  0157  3400               	retlw	0
   519  0158  3415               	retlw	21
   520  0159  3400               	retlw	0
   521  015A  340D               	retlw	13
   522  015B  3400               	retlw	0
   523  015C  3400               	retlw	0
   524  015D  3400               	retlw	0
   525  015E  3405               	retlw	5
   526  015F  3400               	retlw	0
   527  0160  3402               	retlw	2
   528  0161  3400               	retlw	0
   529  0162  3405               	retlw	5
   530  0163  3400               	retlw	0
   531  0164  3400               	retlw	0
   532  0165  3400               	retlw	0
   533  0166  3408               	retlw	8
   534  0167  3400               	retlw	0
   535  0168  340F               	retlw	15
   536  0169  3400               	retlw	0
   537  016A  3408               	retlw	8
   538  016B  3400               	retlw	0
   539  016C  3400               	retlw	0
   540  016D  3400               	retlw	0
   541  016E  3400               	retlw	0
   542  016F  3400               	retlw	0
   543  0170  341D               	retlw	29
   544  0171  3400               	retlw	0
   545  0172  3400               	retlw	0
   546  0173  3400               	retlw	0
   547  0174  341D               	retlw	29
   548  0175  3400               	retlw	0
   549  0176  3400               	retlw	0
   550  0177  3400               	retlw	0
   551  0178  3402               	retlw	2
   552  0179  3400               	retlw	0
   553  017A  3419               	retlw	25
   554  017B  3400               	retlw	0
   555  017C  3401               	retlw	1
   556  017D  3400               	retlw	0
   557  017E  3401               	retlw	1
   558  017F  3400               	retlw	0
   559  0180  3401               	retlw	1
   560  0181  3400               	retlw	0
   561  0182  3419               	retlw	25
   562  0183  3400               	retlw	0
   563  0184  3402               	retlw	2
   564  0185  3400               	retlw	0
   565  0186                     __end_of_frameAnimation:	
   566  0007                     _PORTCbits	set	7
   567  005D                     _T0IE	set	93
   568  005A                     _T0IF	set	90
   569  0087                     _TRISC	set	135
   570  0085                     _TRISA	set	133
   571  0091                     _ANSEL	set	145
   572                           
   573                           ; #config settings
   574  0000                     
   575                           	psect	cinit
   576  0013                     start_initialization:	
   577  0013                     __initialization:	
   578                           
   579                           ; Initialize objects allocated to BANK0
   580  0013  1383               	bcf	3,7	;select IRP bank0
   581  0014  3054               	movlw	low (__pdataBANK0+52)
   582  0015  00FD               	movwf	btemp+-1
   583  0016  3002               	movlw	high __pidataBANK0
   584  0017  00FE               	movwf	btemp
   585  0018  30B0               	movlw	low __pidataBANK0
   586  0019  00FF               	movwf	btemp+1
   587  001A  3020               	movlw	low __pdataBANK0
   588  001B  0084               	movwf	4
   589  001C  118A  235A  118A   	fcall	init_ram0
   590                           
   591                           ; Initialize objects allocated to COMMON
   592  001F  118A  2386  118A   	fcall	__pidataCOMMON	;fetch initializer
   593  0022  00F7               	movwf	__pdataCOMMON& (0+127)
   594  0023  118A  2387         	fcall	__pidataCOMMON+1	;fetch initializer
   595  0025  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   596                           
   597                           ; Clear objects allocated to BANK0
   598  0026  01EA               	clrf	__pbssBANK0& (0+127)
   599  0027  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   600                           
   601                           ; Clear objects allocated to COMMON
   602  0028  01F9               	clrf	__pbssCOMMON& (0+127)
   603  0029                     end_of_initialization:	
   604                           ;End of C runtime variable initialization code
   605                           
   606  0029                     __end_of__initialization:	
   607  0029  0183               	clrf	3
   608  002A  118A  2A6E         	ljmp	_main	;jump to C main() function
   609                           
   610                           	psect	bssCOMMON
   611  0079                     __pbssCOMMON:	
   612  0079                     _currentRow:	
   613  0079                     	ds	1
   614                           
   615                           	psect	dataCOMMON
   616  0077                     __pdataCOMMON:	
   617  0077                     _rowCount:	
   618  0077                     	ds	2
   619                           
   620                           	psect	bssBANK0
   621  006A                     __pbssBANK0:	
   622  006A                     _frame:	
   623  006A                     	ds	2
   624                           
   625                           	psect	dataBANK0
   626  0020                     __pdataBANK0:	
   627  0020                     _buf:	
   628  0020                     	ds	48
   629  0050                     _frameSize:	
   630  0050                     	ds	2
   631  0052                     _maxFrames:	
   632  0052                     	ds	2
   633                           
   634                           	psect	inittext
   635  0356                     init_fetch0:	
   636                           ;	Called with low address in FSR and high address in W
   637                           
   638  0356  087E               	movf	126,w
   639  0357  008A               	movwf	10
   640  0358  087F               	movf	127,w
   641  0359  0082               	movwf	2
   642  035A                     init_ram0:	
   643                           ;Called with:
   644                           ;	high address of idata address in btemp 
   645                           ;	low address of idata address in btemp+1 
   646                           ;	low address of data in FSR
   647                           ;	high address + 1 of data in btemp-1
   648                           
   649  035A  2356  118A         	fcall	init_fetch0
   650  035C  0080               	movwf	0
   651  035D  0A84               	incf	4,f
   652  035E  0804               	movf	4,w
   653  035F  067D               	xorwf	125,w
   654  0360  1903               	btfsc	3,2
   655  0361  3400               	retlw	0
   656  0362  0AFF               	incf	127,f
   657  0363  1903               	btfsc	3,2
   658  0364  0AFE               	incf	126,f
   659  0365  2B5A               	goto	init_ram0
   660                           
   661                           	psect	cstackCOMMON
   662  0070                     __pcstackCOMMON:	
   663  0070                     ?_ConfigureOscillator:	
   664  0070                     ?_InitApp:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_ClearDisplay:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_InitFrameAnimation:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_ReadyDisplay:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_PopulateColumns:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_AdvanceRow:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_AdvanceAnimationFrame:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_isr:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ??_isr:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_main:	
   692                           ; 1 bytes @ 0x0
   693                           
   694                           
   695                           ; 1 bytes @ 0x0
   696  0070                     	ds	4
   697  0074                     ??_ConfigureOscillator:	
   698  0074                     ??_InitApp:	
   699                           ; 1 bytes @ 0x4
   700                           
   701  0074                     ??_ClearDisplay:	
   702                           ; 1 bytes @ 0x4
   703                           
   704  0074                     ??_ReadyDisplay:	
   705                           ; 1 bytes @ 0x4
   706                           
   707  0074                     ??_PopulateColumns:	
   708                           ; 1 bytes @ 0x4
   709                           
   710  0074                     ??_AdvanceRow:	
   711                           ; 1 bytes @ 0x4
   712                           
   713  0074                     ??___wmul:	
   714                           ; 1 bytes @ 0x4
   715                           
   716  0074                     ___wmul@product:	
   717                           ; 1 bytes @ 0x4
   718                           
   719                           
   720                           ; 2 bytes @ 0x4
   721  0074                     	ds	1
   722  0075                     ClearDisplay@i:	
   723                           
   724                           ; 2 bytes @ 0x5
   725  0075                     	ds	2
   726                           
   727                           	psect	cstackBANK0
   728  0054                     __pcstackBANK0:	
   729  0054                     ??_InitFrameAnimation:	
   730  0054                     ?___wmul:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0054                     PopulateColumns@i:	
   734                           ; 2 bytes @ 0x0
   735                           
   736  0054                     ___wmul@multiplier:	
   737                           ; 2 bytes @ 0x0
   738                           
   739                           
   740                           ; 2 bytes @ 0x0
   741  0054                     	ds	2
   742  0056                     ___wmul@multiplicand:	
   743                           
   744                           ; 2 bytes @ 0x2
   745  0056                     	ds	2
   746  0058                     ??_AdvanceAnimationFrame:	
   747                           
   748                           ; 1 bytes @ 0x4
   749  0058                     	ds	3
   750  005B                     InitFrameAnimation@k:	
   751                           
   752                           ; 2 bytes @ 0x7
   753  005B                     	ds	2
   754  005D                     InitFrameAnimation@x:	
   755                           
   756                           ; 2 bytes @ 0x9
   757  005D                     	ds	2
   758  005F                     InitFrameAnimation@y:	
   759                           
   760                           ; 2 bytes @ 0xB
   761  005F                     	ds	2
   762  0061                     AdvanceAnimationFrame@k:	
   763                           
   764                           ; 2 bytes @ 0xD
   765  0061                     	ds	2
   766  0063                     AdvanceAnimationFrame@x:	
   767                           
   768                           ; 2 bytes @ 0xF
   769  0063                     	ds	2
   770  0065                     AdvanceAnimationFrame@y:	
   771                           
   772                           ; 2 bytes @ 0x11
   773  0065                     	ds	2
   774  0067                     ??_main:	
   775                           
   776                           ; 1 bytes @ 0x13
   777  0067                     	ds	1
   778  0068                     main@counter:	
   779                           
   780                           ; 2 bytes @ 0x14
   781  0068                     	ds	2
   782                           
   783                           	psect	maintext
   784  026E                     __pmaintext:	
   785 ;;
   786 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   787 ;;
   788 ;; *************** function _main *****************
   789 ;; Defined at:
   790 ;;		line 26 in file "main.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  counter         2   20[BANK0 ] int 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : B00/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   804 ;;      Params:         0       0       0       0
   805 ;;      Locals:         0       2       0       0
   806 ;;      Temps:          0       1       0       0
   807 ;;      Totals:         0       3       0       0
   808 ;;Total ram usage:        3 bytes
   809 ;; Hardware stack levels required when called:    3
   810 ;; This function calls:
   811 ;;		_AdvanceAnimationFrame
   812 ;;		_AdvanceRow
   813 ;;		_ClearDisplay
   814 ;;		_ConfigureOscillator
   815 ;;		_InitApp
   816 ;;		_InitFrameAnimation
   817 ;;		_PopulateColumns
   818 ;;		_ReadyDisplay
   819 ;; This function is called by:
   820 ;;		Startup code after reset
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function _main
   826  026E                     _main:	
   827                           
   828                           ;main.c: 29: ConfigureOscillator();
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   832  026E  118A  2388  118A   	fcall	_ConfigureOscillator
   833                           
   834                           ;main.c: 32: InitApp();
   835  0271  118A  237D  118A   	fcall	_InitApp
   836                           
   837                           ;main.c: 34: ClearDisplay();
   838  0274  118A  22E4  118A   	fcall	_ClearDisplay
   839                           
   840                           ;main.c: 35: InitFrameAnimation();
   841  0277  118A  21FF  118A   	fcall	_InitFrameAnimation
   842                           
   843                           ;main.c: 36: ReadyDisplay();
   844  027A  118A  2373  118A   	fcall	_ReadyDisplay
   845  027D                     L1:	
   846                           
   847                           ;main.c: 38: int counter = 0;
   848  027D  1283               	bcf	3,5	;RP0=0, select bank0
   849  027E  1303               	bcf	3,6	;RP1=0, select bank0
   850  027F  01E8               	clrf	main@counter
   851  0280  01E9               	clrf	main@counter+1
   852  0281                     l1059:	
   853                           ;main.c: 40: while(1)
   854                           
   855                           
   856                           ;main.c: 41: {
   857                           ;main.c: 42: PORTCbits.RC4 = 1;
   858  0281  1283               	bcf	3,5	;RP0=0, select bank0
   859  0282  1303               	bcf	3,6	;RP1=0, select bank0
   860  0283  1607               	bsf	7,4	;volatile
   861                           
   862                           ;main.c: 44: PopulateColumns();
   863  0284  118A  2186  118A   	fcall	_PopulateColumns
   864                           
   865                           ;main.c: 46: PORTCbits.RC4 = 0;
   866  0287  1283               	bcf	3,5	;RP0=0, select bank0
   867  0288  1303               	bcf	3,6	;RP1=0, select bank0
   868  0289  1207               	bcf	7,4	;volatile
   869                           
   870                           ;main.c: 48: _delay((unsigned long)((500)*(8000000/4000000.0)));
   871  028A  30C7               	movlw	199
   872  028B  1283               	bcf	3,5	;RP0=0, select bank0
   873  028C  1303               	bcf	3,6	;RP1=0, select bank0
   874  028D  00E7               	movwf	??_main
   875  028E                     u1287:	
   876  028E  2A8F               	nop2
   877  028F  0BE7               	decfsz	??_main,f
   878  0290  2A8E               	goto	u1287
   879  0291  2A92               	nop2
   880  0292  0000               	nop
   881                           
   882                           ;main.c: 50: PORTCbits.RC4 = 1;
   883  0293  1283               	bcf	3,5	;RP0=0, select bank0
   884  0294  1303               	bcf	3,6	;RP1=0, select bank0
   885  0295  1607               	bsf	7,4	;volatile
   886                           
   887                           ;main.c: 53: AdvanceRow();
   888  0296  118A  233B  118A   	fcall	_AdvanceRow
   889                           
   890                           ;main.c: 55: counter++;
   891  0299  3001               	movlw	1
   892  029A  1283               	bcf	3,5	;RP0=0, select bank0
   893  029B  1303               	bcf	3,6	;RP1=0, select bank0
   894  029C  07E8               	addwf	main@counter,f
   895  029D  1803               	skipnc
   896  029E  0AE9               	incf	main@counter+1,f
   897  029F  3000               	movlw	0
   898  02A0  07E9               	addwf	main@counter+1,f
   899                           
   900                           ;main.c: 57: if(counter > 500){
   901  02A1  0869               	movf	main@counter+1,w
   902  02A2  3A80               	xorlw	128
   903  02A3  00FF               	movwf	127
   904  02A4  3081               	movlw	129
   905  02A5  027F               	subwf	127,w
   906  02A6  1D03               	skipz
   907  02A7  2AAA               	goto	u1275
   908  02A8  30F5               	movlw	245
   909  02A9  0268               	subwf	main@counter,w
   910  02AA                     u1275:	
   911  02AA  1C03               	skipc
   912  02AB  2A81               	goto	l1059
   913                           
   914                           ;main.c: 58: AdvanceAnimationFrame();
   915  02AC  118A  202C  118A   	fcall	_AdvanceAnimationFrame
   916  02AF  2A7D               	goto	L1
   917  02B0                     __end_of_main:	
   918                           ;main.c: 59: counter = 0;
   919                           
   920                           
   921                           	psect	text1
   922  0373                     __ptext1:	
   923 ;; *************** function _ReadyDisplay *****************
   924 ;; Defined at:
   925 ;;		line 114 in file "user.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		None
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   939 ;;      Params:         0       0       0       0
   940 ;;      Locals:         0       0       0       0
   941 ;;      Temps:          0       0       0       0
   942 ;;      Totals:         0       0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    1
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _ReadyDisplay
   955  0373                     _ReadyDisplay:	
   956                           
   957                           ;user.c: 116: PORTCbits.RC4 = 1;
   958                           
   959                           ;incstack = 0
   960                           ; Regs used in _ReadyDisplay: []
   961  0373  1283               	bcf	3,5	;RP0=0, select bank0
   962  0374  1303               	bcf	3,6	;RP1=0, select bank0
   963  0375  1607               	bsf	7,4	;volatile
   964                           
   965                           ;user.c: 118: PORTCbits.RC1 = 1;
   966  0376  1487               	bsf	7,1	;volatile
   967                           
   968                           ;user.c: 121: PORTCbits.RC3 = 1;
   969  0377  1587               	bsf	7,3	;volatile
   970                           
   971                           ;user.c: 122: PORTCbits.RC3 = 0;
   972  0378  1187               	bcf	7,3	;volatile
   973                           
   974                           ;user.c: 123: PORTCbits.RC3 = 1;
   975  0379  1587               	bsf	7,3	;volatile
   976                           
   977                           ;user.c: 124: PORTCbits.RC3 = 0;
   978  037A  1187               	bcf	7,3	;volatile
   979                           
   980                           ;user.c: 126: PORTCbits.RC4 = 0;
   981  037B  1207               	bcf	7,4	;volatile
   982  037C  0008               	return
   983  037D                     __end_of_ReadyDisplay:	
   984                           
   985                           	psect	text2
   986  0186                     __ptext2:	
   987 ;; *************** function _PopulateColumns *****************
   988 ;; Defined at:
   989 ;;		line 131 in file "user.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  i               2    0[BANK0 ] int 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1003 ;;      Params:         0       0       0       0
  1004 ;;      Locals:         0       2       0       0
  1005 ;;      Temps:          3       0       0       0
  1006 ;;      Totals:         3       2       0       0
  1007 ;;Total ram usage:        5 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function _PopulateColumns
  1019  0186                     _PopulateColumns:	
  1020                           
  1021                           ;user.c: 136: for(int i =7;i>=0;i--)
  1022                           
  1023                           ;incstack = 0
  1024                           ; Regs used in _PopulateColumns: [wreg-fsr0h+status,2+status,0]
  1025  0186  3007               	movlw	7
  1026  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0189  00D4               	movwf	PopulateColumns@i
  1029  018A  3000               	movlw	0
  1030  018B  00D5               	movwf	PopulateColumns@i+1
  1031  018C  1BD5               	btfsc	PopulateColumns@i+1,7
  1032  018D  29F5               	goto	l1011
  1033  018E                     l985:	
  1034                           
  1035                           ;user.c: 137: {
  1036                           ;user.c: 142: if(i==3)
  1037  018E  3003               	movlw	3
  1038  018F  0654               	xorwf	PopulateColumns@i,w
  1039  0190  0455               	iorwf	PopulateColumns@i+1,w
  1040  0191  1D03               	btfss	3,2
  1041  0192  299E               	goto	l989
  1042                           
  1043                           ;user.c: 143: {
  1044                           ;user.c: 144: PORTCbits.RC0 = !buf[currentRow][0];
  1045  0193  0879               	movf	_currentRow,w
  1046  0194  00F4               	movwf	??_PopulateColumns
  1047  0195  3002               	movlw	2
  1048  0196                     u1005:	
  1049  0196  1003               	clrc
  1050  0197  0DF4               	rlf	??_PopulateColumns,f
  1051  0198  3EFF               	addlw	-1
  1052  0199  1D03               	skipz
  1053  019A  2996               	goto	u1005
  1054  019B  1003               	clrc
  1055  019C  0D74               	rlf	??_PopulateColumns,w
  1056  019D  29CE               	goto	L9
  1057  019E                     l989:	
  1058                           ;user.c: 145: }
  1059                           
  1060                           
  1061                           ;user.c: 146: else if(i==2)
  1062  019E  3002               	movlw	2
  1063  019F  0654               	xorwf	PopulateColumns@i,w
  1064  01A0  0455               	iorwf	PopulateColumns@i+1,w
  1065  01A1  1D03               	btfss	3,2
  1066  01A2  29AF               	goto	l993
  1067                           
  1068                           ;user.c: 147: {
  1069                           ;user.c: 148: PORTCbits.RC0 = !buf[currentRow][1];
  1070  01A3  0879               	movf	_currentRow,w
  1071  01A4  00F4               	movwf	??_PopulateColumns
  1072  01A5  3002               	movlw	2
  1073  01A6                     u1045:	
  1074  01A6  1003               	clrc
  1075  01A7  0DF4               	rlf	??_PopulateColumns,f
  1076  01A8  3EFF               	addlw	-1
  1077  01A9  1D03               	skipz
  1078  01AA  29A6               	goto	u1045
  1079  01AB  1003               	clrc
  1080  01AC  0D74               	rlf	??_PopulateColumns,w
  1081  01AD  3E01               	addlw	1
  1082  01AE  29CE               	goto	L9
  1083  01AF                     l993:	
  1084                           ;user.c: 149: }
  1085                           
  1086                           
  1087                           ;user.c: 150: else if(i==1)
  1088  01AF  0354               	decf	PopulateColumns@i,w
  1089  01B0  0455               	iorwf	PopulateColumns@i+1,w
  1090  01B1  1D03               	btfss	3,2
  1091  01B2  29BF               	goto	l997
  1092                           
  1093                           ;user.c: 151: {
  1094                           ;user.c: 152: PORTCbits.RC0 = !buf[currentRow][2];
  1095  01B3  0879               	movf	_currentRow,w
  1096  01B4  00F4               	movwf	??_PopulateColumns
  1097  01B5  3002               	movlw	2
  1098  01B6                     u1085:	
  1099  01B6  1003               	clrc
  1100  01B7  0DF4               	rlf	??_PopulateColumns,f
  1101  01B8  3EFF               	addlw	-1
  1102  01B9  1D03               	skipz
  1103  01BA  29B6               	goto	u1085
  1104  01BB  1003               	clrc
  1105  01BC  0D74               	rlf	??_PopulateColumns,w
  1106  01BD  3E02               	addlw	2
  1107  01BE  29CE               	goto	L9
  1108  01BF                     l997:	
  1109                           ;user.c: 153: }
  1110                           
  1111                           
  1112                           ;user.c: 154: else if(i==0)
  1113  01BF  0854               	movf	PopulateColumns@i,w
  1114  01C0  0455               	iorwf	PopulateColumns@i+1,w
  1115  01C1  1D03               	btfss	3,2
  1116  01C2  29D0               	goto	l1001
  1117                           
  1118                           ;user.c: 155: {
  1119                           ;user.c: 156: PORTCbits.RC0 = !buf[currentRow][3];
  1120  01C3  0879               	movf	_currentRow,w
  1121  01C4  00F4               	movwf	??_PopulateColumns
  1122  01C5  3002               	movlw	2
  1123  01C6                     u1125:	
  1124  01C6  1003               	clrc
  1125  01C7  0DF4               	rlf	??_PopulateColumns,f
  1126  01C8  3EFF               	addlw	-1
  1127  01C9  1D03               	skipz
  1128  01CA  29C6               	goto	u1125
  1129  01CB  1003               	clrc
  1130  01CC  0D74               	rlf	??_PopulateColumns,w
  1131  01CD  3E03               	addlw	3
  1132  01CE                     L9:	
  1133  01CE  3E20               	addlw	(low (_buf| 0))& (0+255)
  1134  01CF  29DF               	goto	L8
  1135  01D0                     l1001:	
  1136                           ;user.c: 157: }
  1137                           
  1138                           
  1139                           ;user.c: 158: else
  1140                           ;user.c: 159: {
  1141                           ;user.c: 160: PORTCbits.RC0 = !buf[currentRow][i];
  1142  01D0  0879               	movf	_currentRow,w
  1143  01D1  00F4               	movwf	??_PopulateColumns
  1144  01D2  3003               	movlw	3
  1145  01D3                     u1155:	
  1146  01D3  1003               	clrc
  1147  01D4  0DF4               	rlf	??_PopulateColumns,f
  1148  01D5  3EFF               	addlw	-1
  1149  01D6  1D03               	skipz
  1150  01D7  29D3               	goto	u1155
  1151  01D8  3020               	movlw	(low (_buf| 0))& (0+255)
  1152  01D9  0774               	addwf	??_PopulateColumns,w
  1153  01DA  00F5               	movwf	??_PopulateColumns+1
  1154  01DB  0854               	movf	PopulateColumns@i,w
  1155  01DC  0775               	addwf	??_PopulateColumns+1,w
  1156  01DD  00F6               	movwf	??_PopulateColumns+2
  1157  01DE  0876               	movf	??_PopulateColumns+2,w
  1158  01DF                     L8:	
  1159  01DF  0084               	movwf	4
  1160  01E0  1383               	bcf	3,7	;select IRP bank0
  1161  01E1  0800               	movf	0,w
  1162  01E2  1D03               	btfss	3,2
  1163  01E3  29E8               	goto	u1160
  1164  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1165  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1166  01E6  1407               	bsf	7,0	;volatile
  1167  01E7  29EB               	goto	l1003
  1168  01E8                     u1160:	
  1169  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1170  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1171  01EA  1007               	bcf	7,0	;volatile
  1172  01EB                     l1003:	
  1173                           
  1174                           ;user.c: 161: }
  1175                           ;user.c: 164: PORTCbits.RC2 = 1;
  1176  01EB  1507               	bsf	7,2	;volatile
  1177                           
  1178                           ;user.c: 165: PORTCbits.RC2 = 0;
  1179  01EC  1107               	bcf	7,2	;volatile
  1180  01ED  30FF               	movlw	255
  1181  01EE  07D4               	addwf	PopulateColumns@i,f
  1182  01EF  1803               	skipnc
  1183  01F0  0AD5               	incf	PopulateColumns@i+1,f
  1184  01F1  30FF               	movlw	255
  1185  01F2  07D5               	addwf	PopulateColumns@i+1,f
  1186  01F3  1FD5               	btfss	PopulateColumns@i+1,7
  1187  01F4  298E               	goto	l985
  1188  01F5                     l1011:	
  1189                           
  1190                           ;user.c: 169: }
  1191                           ;user.c: 174: currentRow++;
  1192  01F5  3001               	movlw	1
  1193  01F6  00F4               	movwf	??_PopulateColumns
  1194  01F7  0874               	movf	??_PopulateColumns,w
  1195  01F8  07F9               	addwf	_currentRow,f
  1196                           
  1197                           ;user.c: 176: if(currentRow == 6){
  1198  01F9  3006               	movlw	6
  1199  01FA  0679               	xorwf	_currentRow,w
  1200  01FB  1D03               	btfss	3,2
  1201  01FC  0008               	return
  1202                           
  1203                           ;user.c: 177: currentRow = 0;
  1204  01FD  01F9               	clrf	_currentRow
  1205  01FE  0008               	return
  1206  01FF                     __end_of_PopulateColumns:	
  1207                           
  1208                           	psect	text3
  1209  01FF                     __ptext3:	
  1210 ;; *************** function _InitFrameAnimation *****************
  1211 ;; Defined at:
  1212 ;;		line 61 in file "user.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  x               2    9[BANK0 ] int 
  1217 ;;  k               2    7[BANK0 ] int 
  1218 ;;  y               2   11[BANK0 ] int 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1228 ;;      Params:         0       0       0       0
  1229 ;;      Locals:         0       6       0       0
  1230 ;;      Temps:          0       7       0       0
  1231 ;;      Totals:         0      13       0       0
  1232 ;;Total ram usage:       13 bytes
  1233 ;; Hardware stack levels used:    2
  1234 ;; Hardware stack levels required when called:    1
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           
  1243                           ;psect for function _InitFrameAnimation
  1244  01FF                     _InitFrameAnimation:	
  1245                           
  1246                           ;user.c: 64: for(int y = 0;y<6;y++){
  1247                           
  1248                           ;incstack = 0
  1249                           ; Regs used in _InitFrameAnimation: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1250  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0201  01DF               	clrf	InitFrameAnimation@y
  1253  0202  01E0               	clrf	InitFrameAnimation@y+1
  1254  0203                     L10:	
  1255  0203  0860               	movf	InitFrameAnimation@y+1,w
  1256  0204  3A80               	xorlw	128
  1257  0205  00FF               	movwf	127
  1258  0206  3080               	movlw	128
  1259  0207  027F               	subwf	127,w
  1260  0208  1D03               	skipz
  1261  0209  2A0C               	goto	u925
  1262  020A  3006               	movlw	6
  1263  020B  025F               	subwf	InitFrameAnimation@y,w
  1264  020C                     u925:	
  1265  020C  1803               	btfsc	3,0
  1266  020D  0008               	return
  1267                           
  1268                           ;user.c: 65: for(int x =0,k = 7;x<8;x++,k--){
  1269  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1270  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1271  0210  01DD               	clrf	InitFrameAnimation@x
  1272  0211  01DE               	clrf	InitFrameAnimation@x+1
  1273  0212  3007               	movlw	7
  1274  0213  00DB               	movwf	InitFrameAnimation@k
  1275  0214  3000               	movlw	0
  1276  0215  00DC               	movwf	InitFrameAnimation@k+1
  1277  0216  085E               	movf	InitFrameAnimation@x+1,w
  1278  0217  3A80               	xorlw	128
  1279  0218  00FF               	movwf	127
  1280  0219  3080               	movlw	128
  1281  021A  027F               	subwf	127,w
  1282  021B  1D03               	skipz
  1283  021C  2A1F               	goto	u935
  1284  021D  3008               	movlw	8
  1285  021E  025D               	subwf	InitFrameAnimation@x,w
  1286  021F                     u935:	
  1287  021F  1803               	btfsc	3,0
  1288  0220  2A65               	goto	l975
  1289  0221                     l967:	
  1290                           
  1291                           ;user.c: 66: buf[y][x] = (frameAnimation[y] >> k) & 1;
  1292  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1293  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1294  0223  085F               	movf	InitFrameAnimation@y,w
  1295  0224  00D4               	movwf	??_InitFrameAnimation
  1296  0225  0754               	addwf	??_InitFrameAnimation,w
  1297  0226  3E01               	addlw	low ((_frameAnimation-__stringbase)| (0+32768))
  1298  0227  0084               	movwf	4
  1299  0228  118A  2100  118A   	fcall	stringdir
  1300  022B  00D5               	movwf	??_InitFrameAnimation+1
  1301  022C  118A  2100  118A   	fcall	stringdir
  1302  022F  00D6               	movwf	??_InitFrameAnimation+2
  1303  0230  0A5B               	incf	InitFrameAnimation@k,w
  1304  0231  2A35               	goto	u944
  1305  0232                     u945:	
  1306  0232  1003               	clrc
  1307  0233  0CD6               	rrf	??_InitFrameAnimation+2,f
  1308  0234  0CD5               	rrf	??_InitFrameAnimation+1,f
  1309  0235                     u944:	
  1310  0235  3EFF               	addlw	-1
  1311  0236  1D03               	skipz
  1312  0237  2A32               	goto	u945
  1313  0238  0855               	movf	??_InitFrameAnimation+1,w
  1314  0239  3901               	andlw	1
  1315  023A  00D7               	movwf	??_InitFrameAnimation+3
  1316  023B  085F               	movf	InitFrameAnimation@y,w
  1317  023C  00D8               	movwf	??_InitFrameAnimation+4
  1318  023D  3003               	movlw	3
  1319  023E                     u955:	
  1320  023E  1003               	clrc
  1321  023F  0DD8               	rlf	??_InitFrameAnimation+4,f
  1322  0240  3EFF               	addlw	-1
  1323  0241  1D03               	skipz
  1324  0242  2A3E               	goto	u955
  1325  0243  3020               	movlw	(low (_buf| 0))& (0+255)
  1326  0244  0758               	addwf	??_InitFrameAnimation+4,w
  1327  0245  00D9               	movwf	??_InitFrameAnimation+5
  1328  0246  085D               	movf	InitFrameAnimation@x,w
  1329  0247  0759               	addwf	??_InitFrameAnimation+5,w
  1330  0248  00DA               	movwf	??_InitFrameAnimation+6
  1331  0249  085A               	movf	??_InitFrameAnimation+6,w
  1332  024A  0084               	movwf	4
  1333  024B  0857               	movf	??_InitFrameAnimation+3,w
  1334  024C  1383               	bcf	3,7	;select IRP bank0
  1335  024D  0080               	movwf	0
  1336  024E  3001               	movlw	1
  1337  024F  07DD               	addwf	InitFrameAnimation@x,f
  1338  0250  1803               	skipnc
  1339  0251  0ADE               	incf	InitFrameAnimation@x+1,f
  1340  0252  3000               	movlw	0
  1341  0253  07DE               	addwf	InitFrameAnimation@x+1,f
  1342  0254  30FF               	movlw	255
  1343  0255  07DB               	addwf	InitFrameAnimation@k,f
  1344  0256  1803               	skipnc
  1345  0257  0ADC               	incf	InitFrameAnimation@k+1,f
  1346  0258  30FF               	movlw	255
  1347  0259  07DC               	addwf	InitFrameAnimation@k+1,f
  1348  025A  085E               	movf	InitFrameAnimation@x+1,w
  1349  025B  3A80               	xorlw	128
  1350  025C  00FF               	movwf	127
  1351  025D  3080               	movlw	128
  1352  025E  027F               	subwf	127,w
  1353  025F  1D03               	skipz
  1354  0260  2A63               	goto	u965
  1355  0261  3008               	movlw	8
  1356  0262  025D               	subwf	InitFrameAnimation@x,w
  1357  0263                     u965:	
  1358  0263  1C03               	skipc
  1359  0264  2A21               	goto	l967
  1360  0265                     l975:	
  1361  0265  3001               	movlw	1
  1362  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0268  07DF               	addwf	InitFrameAnimation@y,f
  1365  0269  1803               	skipnc
  1366  026A  0AE0               	incf	InitFrameAnimation@y+1,f
  1367  026B  3000               	movlw	0
  1368  026C  07E0               	addwf	InitFrameAnimation@y+1,f
  1369  026D  2A03               	goto	L10
  1370  026E                     __end_of_InitFrameAnimation:	
  1371                           
  1372                           	psect	text4
  1373  037D                     __ptext4:	
  1374 ;; *************** function _InitApp *****************
  1375 ;; Defined at:
  1376 ;;		line 42 in file "user.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1390 ;;      Params:         0       0       0       0
  1391 ;;      Locals:         0       0       0       0
  1392 ;;      Temps:          0       0       0       0
  1393 ;;      Totals:         0       0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:    1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           
  1405                           ;psect for function _InitApp
  1406  037D                     _InitApp:	
  1407                           
  1408                           ;user.c: 51: ANSEL = 0b00000000;
  1409                           
  1410                           ;incstack = 0
  1411                           ; Regs used in _InitApp: [wreg+status,2]
  1412  037D  1683               	bsf	3,5	;RP0=1, select bank1
  1413  037E  1303               	bcf	3,6	;RP1=0, select bank1
  1414  037F  0191               	clrf	17	;volatile
  1415                           
  1416                           ;user.c: 53: TRISA = 0b11111111;
  1417  0380  30FF               	movlw	255
  1418  0381  0085               	movwf	5	;volatile
  1419                           
  1420                           ;user.c: 54: TRISC = 0b11000000;
  1421  0382  30C0               	movlw	192
  1422  0383  0087               	movwf	7	;volatile
  1423                           
  1424                           ;user.c: 56: T0IE = 0;
  1425  0384  128B               	bcf	11,5	;volatile
  1426  0385  0008               	return
  1427  0386                     __end_of_InitApp:	
  1428                           
  1429                           	psect	text5
  1430  0388                     __ptext5:	
  1431 ;; *************** function _ConfigureOscillator *****************
  1432 ;; Defined at:
  1433 ;;		line 18 in file "system.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		None
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1447 ;;      Params:         0       0       0       0
  1448 ;;      Locals:         0       0       0       0
  1449 ;;      Temps:          0       0       0       0
  1450 ;;      Totals:         0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    1
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _ConfigureOscillator
  1463  0388                     _ConfigureOscillator:	
  1464                           
  1465                           ;incstack = 0
  1466                           ; Regs used in _ConfigureOscillator: []
  1467  0388  0008               	return
  1468  0389                     __end_of_ConfigureOscillator:	
  1469                           
  1470                           	psect	text6
  1471  02E4                     __ptext6:	
  1472 ;; *************** function _ClearDisplay *****************
  1473 ;; Defined at:
  1474 ;;		line 72 in file "user.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  i               2    5[COMMON] int 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, btemp+1
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1488 ;;      Params:         0       0       0       0
  1489 ;;      Locals:         2       0       0       0
  1490 ;;      Temps:          1       0       0       0
  1491 ;;      Totals:         3       0       0       0
  1492 ;;Total ram usage:        3 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function _ClearDisplay
  1504  02E4                     _ClearDisplay:	
  1505                           
  1506                           ;user.c: 77: PORTCbits.RC4 = 1;
  1507                           
  1508                           ;incstack = 0
  1509                           ; Regs used in _ClearDisplay: [wreg+status,2+btemp+1]
  1510  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1511  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1512  02E6  1607               	bsf	7,4	;volatile
  1513                           
  1514                           ;user.c: 79: PORTCbits.RC1 = 0;
  1515  02E7  1087               	bcf	7,1	;volatile
  1516                           
  1517                           ;user.c: 80: PORTCbits.RC0 = 1;
  1518  02E8  1407               	bsf	7,0	;volatile
  1519                           
  1520                           ;user.c: 82: for(int i = 0;i<8;i++){
  1521  02E9  01F5               	clrf	ClearDisplay@i
  1522  02EA  01F6               	clrf	ClearDisplay@i+1
  1523  02EB  0876               	movf	ClearDisplay@i+1,w
  1524  02EC  3A80               	xorlw	128
  1525  02ED  00FF               	movwf	127
  1526  02EE  3080               	movlw	128
  1527  02EF  027F               	subwf	127,w
  1528  02F0  1D03               	skipz
  1529  02F1  2AF4               	goto	u495
  1530  02F2  3008               	movlw	8
  1531  02F3  0275               	subwf	ClearDisplay@i,w
  1532  02F4                     u495:	
  1533  02F4  1803               	btfsc	3,0
  1534  02F5  2B14               	goto	l77
  1535  02F6                     l76:	
  1536                           
  1537                           ;user.c: 83: PORTCbits.RC3 = 1;
  1538  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1539  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1540  02F8  1587               	bsf	7,3	;volatile
  1541                           
  1542                           ;user.c: 84: PORTCbits.RC2 = 1;
  1543  02F9  1507               	bsf	7,2	;volatile
  1544                           
  1545                           ;user.c: 85: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1546  02FA  3006               	movlw	6
  1547  02FB  00F4               	movwf	??_ClearDisplay
  1548  02FC                     u1297:	
  1549  02FC  0BF4               	decfsz	??_ClearDisplay,f
  1550  02FD  2AFC               	goto	u1297
  1551  02FE  0000               	nop
  1552                           
  1553                           ;user.c: 87: PORTCbits.RC3 = 0;
  1554  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0300  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0301  1187               	bcf	7,3	;volatile
  1557                           
  1558                           ;user.c: 88: PORTCbits.RC2 = 0;
  1559  0302  1107               	bcf	7,2	;volatile
  1560  0303  3001               	movlw	1
  1561  0304  07F5               	addwf	ClearDisplay@i,f
  1562  0305  1803               	skipnc
  1563  0306  0AF6               	incf	ClearDisplay@i+1,f
  1564  0307  3000               	movlw	0
  1565  0308  07F6               	addwf	ClearDisplay@i+1,f
  1566  0309  0876               	movf	ClearDisplay@i+1,w
  1567  030A  3A80               	xorlw	128
  1568  030B  00FF               	movwf	127
  1569  030C  3080               	movlw	128
  1570  030D  027F               	subwf	127,w
  1571  030E  1D03               	skipz
  1572  030F  2B12               	goto	u505
  1573  0310  3008               	movlw	8
  1574  0311  0275               	subwf	ClearDisplay@i,w
  1575  0312                     u505:	
  1576  0312  1C03               	skipc
  1577  0313  2AF6               	goto	l76
  1578  0314                     l77:	
  1579                           
  1580                           ;user.c: 89: }
  1581                           ;user.c: 91: PORTCbits.RC4 = 0;
  1582  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0316  1207               	bcf	7,4	;volatile
  1585  0317  0008               	return
  1586  0318                     __end_of_ClearDisplay:	
  1587                           
  1588                           	psect	text7
  1589  033B                     __ptext7:	
  1590 ;; *************** function _AdvanceRow *****************
  1591 ;; Defined at:
  1592 ;;		line 97 in file "user.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, btemp+1
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1606 ;;      Params:         0       0       0       0
  1607 ;;      Locals:         0       0       0       0
  1608 ;;      Temps:          0       0       0       0
  1609 ;;      Totals:         0       0       0       0
  1610 ;;Total ram usage:        0 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function _AdvanceRow
  1622  033B                     _AdvanceRow:	
  1623                           
  1624                           ;user.c: 100: if(rowCount >= 6)
  1625                           
  1626                           ;incstack = 0
  1627                           ; Regs used in _AdvanceRow: [wreg+status,2+btemp+1]
  1628  033B  0878               	movf	_rowCount+1,w
  1629  033C  3A80               	xorlw	128
  1630  033D  00FF               	movwf	127
  1631  033E  3080               	movlw	128
  1632  033F  027F               	subwf	127,w
  1633  0340  1D03               	skipz
  1634  0341  2B44               	goto	u795
  1635  0342  3006               	movlw	6
  1636  0343  0277               	subwf	_rowCount,w
  1637  0344                     u795:	
  1638  0344  1C03               	skipc
  1639  0345  2B4B               	goto	l869
  1640                           
  1641                           ;user.c: 101: {
  1642                           ;user.c: 102: PORTCbits.RC1 = 1;
  1643  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0347  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0348  1487               	bsf	7,1	;volatile
  1646                           
  1647                           ;user.c: 104: rowCount = 0;
  1648  0349  01F7               	clrf	_rowCount
  1649  034A  01F8               	clrf	_rowCount+1
  1650  034B                     l869:	
  1651                           
  1652                           ;user.c: 105: }
  1653                           ;user.c: 107: PORTCbits.RC3 = 1;
  1654  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1655  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1656  034D  1587               	bsf	7,3	;volatile
  1657                           
  1658                           ;user.c: 108: PORTCbits.RC3 = 0;
  1659  034E  1187               	bcf	7,3	;volatile
  1660                           
  1661                           ;user.c: 110: rowCount++;
  1662  034F  3001               	movlw	1
  1663  0350  07F7               	addwf	_rowCount,f
  1664  0351  1803               	skipnc
  1665  0352  0AF8               	incf	_rowCount+1,f
  1666  0353  3000               	movlw	0
  1667  0354  07F8               	addwf	_rowCount+1,f
  1668  0355  0008               	return
  1669  0356                     __end_of_AdvanceRow:	
  1670                           
  1671                           	psect	text8
  1672  002C                     __ptext8:	
  1673 ;; *************** function _AdvanceAnimationFrame *****************
  1674 ;; Defined at:
  1675 ;;		line 182 in file "user.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  x               2   15[BANK0 ] int 
  1680 ;;  k               2   13[BANK0 ] int 
  1681 ;;  y               2   17[BANK0 ] int 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1691 ;;      Params:         0       0       0       0
  1692 ;;      Locals:         0       6       0       0
  1693 ;;      Temps:          0       9       0       0
  1694 ;;      Totals:         0      15       0       0
  1695 ;;Total ram usage:       15 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    2
  1698 ;; This function calls:
  1699 ;;		___wmul
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           
  1706                           ;psect for function _AdvanceAnimationFrame
  1707  002C                     _AdvanceAnimationFrame:	
  1708                           
  1709                           ;user.c: 183: if(frame >= maxFrames){
  1710                           
  1711                           ;incstack = 0
  1712                           ; Regs used in _AdvanceAnimationFrame: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1713  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1714  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1715  002E  086B               	movf	_frame+1,w
  1716  002F  3A80               	xorlw	128
  1717  0030  00D8               	movwf	??_AdvanceAnimationFrame
  1718  0031  0853               	movf	_maxFrames+1,w
  1719  0032  3A80               	xorlw	128
  1720  0033  0258               	subwf	??_AdvanceAnimationFrame,w
  1721  0034  1D03               	skipz
  1722  0035  2838               	goto	u1205
  1723  0036  0852               	movf	_maxFrames,w
  1724  0037  026A               	subwf	_frame,w
  1725  0038                     u1205:	
  1726  0038  1C03               	skipc
  1727  0039  283F               	goto	l1019
  1728                           
  1729                           ;user.c: 184: frame = 0;
  1730  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1731  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1732  003C  01EA               	clrf	_frame
  1733  003D  01EB               	clrf	_frame+1
  1734                           
  1735                           ;user.c: 185: } else {
  1736  003E  2847               	goto	l1021
  1737  003F                     l1019:	
  1738                           
  1739                           ;user.c: 186: frame++;
  1740  003F  3001               	movlw	1
  1741  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1742  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1743  0042  07EA               	addwf	_frame,f
  1744  0043  1803               	skipnc
  1745  0044  0AEB               	incf	_frame+1,f
  1746  0045  3000               	movlw	0
  1747  0046  07EB               	addwf	_frame+1,f
  1748  0047                     l1021:	
  1749                           
  1750                           ;user.c: 187: }
  1751                           ;user.c: 190: for(int y = 0;y<6;y++){
  1752  0047  01E5               	clrf	AdvanceAnimationFrame@y
  1753  0048  01E6               	clrf	AdvanceAnimationFrame@y+1
  1754  0049                     L11:	
  1755  0049  0866               	movf	AdvanceAnimationFrame@y+1,w
  1756  004A  3A80               	xorlw	128
  1757  004B  00FF               	movwf	127
  1758  004C  3080               	movlw	128
  1759  004D  027F               	subwf	127,w
  1760  004E  1D03               	skipz
  1761  004F  2852               	goto	u1215
  1762  0050  3006               	movlw	6
  1763  0051  0265               	subwf	AdvanceAnimationFrame@y,w
  1764  0052                     u1215:	
  1765  0052  1803               	btfsc	3,0
  1766  0053  0008               	return
  1767                           
  1768                           ;user.c: 193: for(int x =0,k = 7;x<8;x++,k--){
  1769  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0056  01E3               	clrf	AdvanceAnimationFrame@x
  1772  0057  01E4               	clrf	AdvanceAnimationFrame@x+1
  1773  0058  3007               	movlw	7
  1774  0059  00E1               	movwf	AdvanceAnimationFrame@k
  1775  005A  3000               	movlw	0
  1776  005B  00E2               	movwf	AdvanceAnimationFrame@k+1
  1777  005C  0864               	movf	AdvanceAnimationFrame@x+1,w
  1778  005D  3A80               	xorlw	128
  1779  005E  00FF               	movwf	127
  1780  005F  3080               	movlw	128
  1781  0060  027F               	subwf	127,w
  1782  0061  1D03               	skipz
  1783  0062  2865               	goto	u1225
  1784  0063  3008               	movlw	8
  1785  0064  0263               	subwf	AdvanceAnimationFrame@x,w
  1786  0065                     u1225:	
  1787  0065  1803               	btfsc	3,0
  1788  0066  28BD               	goto	l1043
  1789  0067                     l1035:	
  1790                           
  1791                           ;user.c: 194: buf[y][x] = (frameAnimation[(frame*frameSize)+y] >> k) & 1;
  1792  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1793  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1794  0069  086B               	movf	_frame+1,w
  1795  006A  00D5               	movwf	___wmul@multiplier+1
  1796  006B  086A               	movf	_frame,w
  1797  006C  00D4               	movwf	___wmul@multiplier
  1798  006D  0851               	movf	_frameSize+1,w
  1799  006E  00D7               	movwf	___wmul@multiplicand+1
  1800  006F  0850               	movf	_frameSize,w
  1801  0070  00D6               	movwf	___wmul@multiplicand
  1802  0071  118A  2318  118A   	fcall	___wmul
  1803  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1805  0076  0854               	movf	?___wmul,w
  1806  0077  00D8               	movwf	??_AdvanceAnimationFrame
  1807  0078  0855               	movf	?___wmul+1,w
  1808  0079  00D9               	movwf	??_AdvanceAnimationFrame+1
  1809  007A  0865               	movf	AdvanceAnimationFrame@y,w
  1810  007B  0758               	addwf	??_AdvanceAnimationFrame,w
  1811  007C  00DA               	movwf	??_AdvanceAnimationFrame+2
  1812  007D  075A               	addwf	??_AdvanceAnimationFrame+2,w
  1813  007E  3E01               	addlw	low ((_frameAnimation-__stringbase)| (0+32768))
  1814  007F  0084               	movwf	4
  1815  0080  118A  2100  118A   	fcall	stringdir
  1816  0083  00DB               	movwf	??_AdvanceAnimationFrame+3
  1817  0084  118A  2100  118A   	fcall	stringdir
  1818  0087  00DC               	movwf	??_AdvanceAnimationFrame+4
  1819  0088  0A61               	incf	AdvanceAnimationFrame@k,w
  1820  0089  288D               	goto	u1234
  1821  008A                     u1235:	
  1822  008A  1003               	clrc
  1823  008B  0CDC               	rrf	??_AdvanceAnimationFrame+4,f
  1824  008C  0CDB               	rrf	??_AdvanceAnimationFrame+3,f
  1825  008D                     u1234:	
  1826  008D  3EFF               	addlw	-1
  1827  008E  1D03               	skipz
  1828  008F  288A               	goto	u1235
  1829  0090  085B               	movf	??_AdvanceAnimationFrame+3,w
  1830  0091  3901               	andlw	1
  1831  0092  00DD               	movwf	??_AdvanceAnimationFrame+5
  1832  0093  0865               	movf	AdvanceAnimationFrame@y,w
  1833  0094  00DE               	movwf	??_AdvanceAnimationFrame+6
  1834  0095  3003               	movlw	3
  1835  0096                     u1245:	
  1836  0096  1003               	clrc
  1837  0097  0DDE               	rlf	??_AdvanceAnimationFrame+6,f
  1838  0098  3EFF               	addlw	-1
  1839  0099  1D03               	skipz
  1840  009A  2896               	goto	u1245
  1841  009B  3020               	movlw	(low (_buf| 0))& (0+255)
  1842  009C  075E               	addwf	??_AdvanceAnimationFrame+6,w
  1843  009D  00DF               	movwf	??_AdvanceAnimationFrame+7
  1844  009E  0863               	movf	AdvanceAnimationFrame@x,w
  1845  009F  075F               	addwf	??_AdvanceAnimationFrame+7,w
  1846  00A0  00E0               	movwf	??_AdvanceAnimationFrame+8
  1847  00A1  0860               	movf	??_AdvanceAnimationFrame+8,w
  1848  00A2  0084               	movwf	4
  1849  00A3  085D               	movf	??_AdvanceAnimationFrame+5,w
  1850  00A4  1383               	bcf	3,7	;select IRP bank0
  1851  00A5  0080               	movwf	0
  1852  00A6  3001               	movlw	1
  1853  00A7  07E3               	addwf	AdvanceAnimationFrame@x,f
  1854  00A8  1803               	skipnc
  1855  00A9  0AE4               	incf	AdvanceAnimationFrame@x+1,f
  1856  00AA  3000               	movlw	0
  1857  00AB  07E4               	addwf	AdvanceAnimationFrame@x+1,f
  1858  00AC  30FF               	movlw	255
  1859  00AD  07E1               	addwf	AdvanceAnimationFrame@k,f
  1860  00AE  1803               	skipnc
  1861  00AF  0AE2               	incf	AdvanceAnimationFrame@k+1,f
  1862  00B0  30FF               	movlw	255
  1863  00B1  07E2               	addwf	AdvanceAnimationFrame@k+1,f
  1864  00B2  0864               	movf	AdvanceAnimationFrame@x+1,w
  1865  00B3  3A80               	xorlw	128
  1866  00B4  00FF               	movwf	127
  1867  00B5  3080               	movlw	128
  1868  00B6  027F               	subwf	127,w
  1869  00B7  1D03               	skipz
  1870  00B8  28BB               	goto	u1255
  1871  00B9  3008               	movlw	8
  1872  00BA  0263               	subwf	AdvanceAnimationFrame@x,w
  1873  00BB                     u1255:	
  1874  00BB  1C03               	skipc
  1875  00BC  2867               	goto	l1035
  1876  00BD                     l1043:	
  1877  00BD  3001               	movlw	1
  1878  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1879  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1880  00C0  07E5               	addwf	AdvanceAnimationFrame@y,f
  1881  00C1  1803               	skipnc
  1882  00C2  0AE6               	incf	AdvanceAnimationFrame@y+1,f
  1883  00C3  3000               	movlw	0
  1884  00C4  07E6               	addwf	AdvanceAnimationFrame@y+1,f
  1885  00C5  2849               	goto	L11
  1886  00C6                     __end_of_AdvanceAnimationFrame:	
  1887                           
  1888                           	psect	text9
  1889  0318                     __ptext9:	
  1890 ;; *************** function ___wmul *****************
  1891 ;; Defined at:
  1892 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1895 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  product         2    4[COMMON] unsigned int 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  2    0[BANK0 ] unsigned int 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1907 ;;      Params:         0       4       0       0
  1908 ;;      Locals:         2       0       0       0
  1909 ;;      Temps:          0       0       0       0
  1910 ;;      Totals:         2       4       0       0
  1911 ;;Total ram usage:        6 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    1
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_AdvanceAnimationFrame
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           
  1922                           ;psect for function ___wmul
  1923  0318                     ___wmul:	
  1924                           
  1925                           ;incstack = 0
  1926                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1927  0318  01F4               	clrf	___wmul@product
  1928  0319  01F5               	clrf	___wmul@product+1
  1929  031A                     l941:	
  1930  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1931  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1932  031C  1C54               	btfss	___wmul@multiplier,0
  1933  031D  2B24               	goto	l199
  1934  031E  0856               	movf	___wmul@multiplicand,w
  1935  031F  07F4               	addwf	___wmul@product,f
  1936  0320  1803               	skipnc
  1937  0321  0AF5               	incf	___wmul@product+1,f
  1938  0322  0857               	movf	___wmul@multiplicand+1,w
  1939  0323  07F5               	addwf	___wmul@product+1,f
  1940  0324                     l199:	
  1941  0324  3001               	movlw	1
  1942  0325                     u895:	
  1943  0325  1003               	clrc
  1944  0326  0DD6               	rlf	___wmul@multiplicand,f
  1945  0327  0DD7               	rlf	___wmul@multiplicand+1,f
  1946  0328  3EFF               	addlw	-1
  1947  0329  1D03               	skipz
  1948  032A  2B25               	goto	u895
  1949  032B  3001               	movlw	1
  1950  032C                     u905:	
  1951  032C  1003               	clrc
  1952  032D  0CD5               	rrf	___wmul@multiplier+1,f
  1953  032E  0CD4               	rrf	___wmul@multiplier,f
  1954  032F  3EFF               	addlw	-1
  1955  0330  1D03               	skipz
  1956  0331  2B2C               	goto	u905
  1957  0332  0854               	movf	___wmul@multiplier,w
  1958  0333  0455               	iorwf	___wmul@multiplier+1,w
  1959  0334  1D03               	btfss	3,2
  1960  0335  2B1A               	goto	l941
  1961  0336  0875               	movf	___wmul@product+1,w
  1962  0337  00D5               	movwf	?___wmul+1
  1963  0338  0874               	movf	___wmul@product,w
  1964  0339  00D4               	movwf	?___wmul
  1965  033A  0008               	return
  1966  033B                     __end_of___wmul:	
  1967                           
  1968                           	psect	text10
  1969  0366                     __ptext10:	
  1970 ;; *************** function _isr *****************
  1971 ;; Defined at:
  1972 ;;		line 24 in file "interrupts.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		None
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1986 ;;      Params:         0       0       0       0
  1987 ;;      Locals:         0       0       0       0
  1988 ;;      Temps:          4       0       0       0
  1989 ;;      Totals:         4       0       0       0
  1990 ;;Total ram usage:        4 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		Interrupt level 1
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           
  2000                           ;psect for function _isr
  2001  0366                     _isr:	
  2002                           
  2003                           ;interrupts.c: 35: if(T0IF == 1)
  2004  0366  190B               	btfsc	11,2	;volatile
  2005                           
  2006                           ;interrupts.c: 36: {
  2007                           ;interrupts.c: 38: T0IF = 0;
  2008  0367  110B               	bcf	11,2	;volatile
  2009                           
  2010                           ;interrupts.c: 40: else
  2011                           ;interrupts.c: 41: {
  2012                           
  2013                           ;interrupts.c: 39: }
  2014  0368  0873               	movf	??_isr+3,w
  2015  0369  00FF               	movwf	127
  2016  036A  0872               	movf	??_isr+2,w
  2017  036B  008A               	movwf	10
  2018  036C  0871               	movf	??_isr+1,w
  2019  036D  0084               	movwf	4
  2020  036E  0E70               	swapf	??_isr^(0+-128),w
  2021  036F  0083               	movwf	3
  2022  0370  0EFE               	swapf	126,f
  2023  0371  0E7E               	swapf	126,w
  2024  0372  0009               	retfie
  2025  0373                     __end_of_isr:	
  2026  007E                     btemp	set	126	;btemp
  2027  007E                     wtemp0	set	126
  2028                           
  2029                           	psect	intentry
  2030  0004                     __pintentry:	
  2031                           ;incstack = 0
  2032                           ; Regs used in _isr: []
  2033                           
  2034  0004                     interrupt_function:	
  2035  007E                     saved_w	set	btemp
  2036  0004  00FE               	movwf	btemp
  2037  0005  0E03               	swapf	3,w
  2038  0006  00F0               	movwf	??_isr
  2039  0007  0804               	movf	4,w
  2040  0008  00F1               	movwf	??_isr+1
  2041  0009  080A               	movf	10,w
  2042  000A  00F2               	movwf	??_isr+2
  2043  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2044  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2045  000D  087F               	movf	btemp+1,w
  2046  000E  00F3               	movwf	??_isr+3
  2047  000F  118A  2B66         	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    128
    Data        54
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     22      76
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ClearDisplay
    _main->_PopulateColumns
    _AdvanceAnimationFrame->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_AdvanceAnimationFrame
    _AdvanceAnimationFrame->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1131
                                             19 BANK0      3     3      0
              _AdvanceAnimationFrame
                         _AdvanceRow
                       _ClearDisplay
                _ConfigureOscillator
                            _InitApp
                 _InitFrameAnimation
                    _PopulateColumns
                       _ReadyDisplay
 ---------------------------------------------------------------------------------
 (1) _ReadyDisplay                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PopulateColumns                                      5     5      0     223
                                              4 COMMON     3     3      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _InitFrameAnimation                                  13    13      0     266
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearDisplay                                         3     3      0      46
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _AdvanceRow                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AdvanceAnimationFrame                               15    15      0     556
                                              4 BANK0     15    15      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AdvanceAnimationFrame
     ___wmul
   _AdvanceRow
   _ClearDisplay
   _ConfigureOscillator
   _InitApp
   _InitFrameAnimation
   _PopulateColumns
   _ReadyDisplay

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      4C       3       95.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      56      10        0.0%
ABS                  0      0      56       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Nov 13 12:28:43 2019

                             pc 0002                     __CFG_CP$OFF 0000                              l76 02F6  
                            l77 0314                              fsr 0004             ___wmul@multiplicand 0056  
                           l199 0324                             l941 031A                             l869 034B  
                           l975 0265                             l967 0221                             l993 01AF  
                           l985 018E                             l997 01BF                             l989 019E  
                           u505 0312                    __CFG_CPD$OFF 0000                             u495 02F4  
                           u905 032C                             u925 020C                             u935 021F  
                           u944 0235                             u945 0232                             u795 0344  
                           u955 023E                             u965 0263                             u895 0325  
                           _buf 0020                             _isr 0366                             fsr0 0004  
                           indf 0000          ?_AdvanceAnimationFrame 0070                    __CFG_IESO$ON 0000  
        __end_of_frameAnimation 0186                            l1001 01D0                            l1003 01EB  
                          l1011 01F5                            l1021 0047                            l1043 00BD  
                          l1035 0067                            l1019 003F                            l1059 0281  
                          ?_isr 0070                      _AdvanceRow 033B                            _T0IE 005D  
                          _T0IF 005A                            u1005 0196                            u1205 0038  
                          u1125 01C6                            u1045 01A6                            u1215 0052  
                          u1160 01E8                            u1225 0065                            u1234 008D  
                          u1235 008A                            u1155 01D3                            u1245 0096  
                          u1085 01B6                            u1255 00BB                            u1275 02AA  
                          u1287 028E                            u1297 02FC                     main@counter 0068  
                 __CFG_FCMEN$ON 0000                            _main 026E                            btemp 007E  
                          start 0011                   __CFG_MCLRE$ON 0000                 __end_of_InitApp 0386  
                         ??_isr 0070                           ?_main 0070                   __CFG_WDTE$OFF 0000  
                         _ANSEL 0091                           _TRISA 0085                           _TRISC 0087  
           _ConfigureOscillator 0388                           _frame 006A                  __CFG_BOREN$OFF 0000  
                         pclath 000A                           status 0003                           wtemp0 007E  
          ?_ConfigureOscillator 0070                 __initialization 0013                   ?_ReadyDisplay 0070  
                  __end_of_main 02B0                PopulateColumns@i 0054                          ??_main 0067  
                 ClearDisplay@i 0075           __size_of_ClearDisplay 0034                     ?_AdvanceRow 0070  
                     ??_InitApp 0074           ??_ConfigureOscillator 0074                  __CFG_PWRTE$OFF 0000  
           InitFrameAnimation@k 005B             InitFrameAnimation@x 005D             InitFrameAnimation@y 005F  
                ??_ReadyDisplay 0074                          ___wmul 0318                    _ClearDisplay 02E4  
                  __pdataCOMMON 0077              _InitFrameAnimation 01FF                          saved_w 007E  
           ?_InitFrameAnimation 0070                 _PopulateColumns 0186         __end_of__initialization 0029  
                __pcstackCOMMON 0070                    __pidataBANK0 02B0            ??_InitFrameAnimation 0054  
           __size_of_AdvanceRow 001B         ??_AdvanceAnimationFrame 0058                      __pbssBANK0 006A  
                    __pmaintext 026E                         ?___wmul 0054                      __pintentry 0004  
       __end_of_PopulateColumns 01FF            __end_of_ReadyDisplay 037D                      __stringtab 0100  
                       _InitApp 037D                 __size_of___wmul 0023                      _currentRow 0079  
                       __ptext1 0373                         __ptext2 0186                         __ptext3 01FF  
                       __ptext4 037D                         __ptext5 0388                         __ptext6 02E4  
                       __ptext7 033B                         __ptext8 002C                         __ptext9 0318  
                  __size_of_isr 000D                    ??_AdvanceRow 0074            end_of_initialization 0029  
            __end_of_AdvanceRow 0356                       _PORTCbits 0007                ?_PopulateColumns 0070  
   __end_of_ConfigureOscillator 0389                  __end_of___wmul 033B                   __pidataCOMMON 0386  
         __size_of_ReadyDisplay 000A  __size_of_AdvanceAnimationFrame 009A   __end_of_AdvanceAnimationFrame 00C6  
           start_initialization 0013                     __end_of_isr 0373                    _ReadyDisplay 0373  
                      ??___wmul 0074                      init_fetch0 0356                     __pdataBANK0 0020  
   __size_of_InitFrameAnimation 006F                     __pbssCOMMON 0079                       ___latbits 0001  
                 __pcstackBANK0 0054                        ?_InitApp 0070                       __pstrings 0100  
                     _frameSize 0050                       _maxFrames 0052               interrupt_function 0004  
                ___wmul@product 0074                     __stringbase 0105                   ?_ClearDisplay 0070  
             ___wmul@multiplier 0054                __size_of_InitApp 0009                  ??_ClearDisplay 0074  
            __end_of__stringtab 0106                        __ptext10 0366        __size_of_PopulateColumns 0079  
                 __size_of_main 0042    __size_of_ConfigureOscillator 0001                        _rowCount 0077  
        AdvanceAnimationFrame@k 0061          AdvanceAnimationFrame@x 0063          AdvanceAnimationFrame@y 0065  
         _AdvanceAnimationFrame 002C                        init_ram0 035A                        intlevel1 0000  
                     stringcode 0100      __end_of_InitFrameAnimation 026E                        stringdir 0100  
                      stringtab 0100                  _frameAnimation 0106              __CFG_FOSC$INTOSCIO 0000  
          __end_of_ClearDisplay 0318               ??_PopulateColumns 0074  
