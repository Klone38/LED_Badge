

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Nov 15 10:50:33 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F688
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 1.44
    28                           ; Generated 14/09/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F688 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0007                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0087                     	;# 
    90  008C                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0095                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0007                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  0081                     	;# 
   136  0085                     	;# 
   137  0087                     	;# 
   138  008C                     	;# 
   139  008E                     	;# 
   140  008F                     	;# 
   141  0090                     	;# 
   142  0091                     	;# 
   143  0095                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0007                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0087                     	;# 
   186  008C                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0095                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0007                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000E                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0014                     	;# 
   223  0015                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001E                     	;# 
   230  001F                     	;# 
   231  0081                     	;# 
   232  0085                     	;# 
   233  0087                     	;# 
   234  008C                     	;# 
   235  008E                     	;# 
   236  008F                     	;# 
   237  0090                     	;# 
   238  0091                     	;# 
   239  0095                     	;# 
   240  0095                     	;# 
   241  0096                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  009F                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0007                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0087                     	;# 
   282  008C                     	;# 
   283  008E                     	;# 
   284  008F                     	;# 
   285  0090                     	;# 
   286  0091                     	;# 
   287  0095                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0096                     	;# 
   291  0097                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009A                     	;# 
   295  009A                     	;# 
   296  009B                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0007                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0087                     	;# 
   330  008C                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0095                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349                           
   350                           	psect	idataBANK0
   351  02B4                     __pidataBANK0:	
   352                           
   353                           ;initializer for _buf
   354  02B4  3401               	retlw	1
   355  02B5  3401               	retlw	1
   356  02B6  3401               	retlw	1
   357  02B7  3401               	retlw	1
   358  02B8  3401               	retlw	1
   359  02B9  3401               	retlw	1
   360  02BA  3401               	retlw	1
   361  02BB  3401               	retlw	1
   362  02BC  3401               	retlw	1
   363  02BD  3401               	retlw	1
   364  02BE  3401               	retlw	1
   365  02BF  3401               	retlw	1
   366  02C0  3401               	retlw	1
   367  02C1  3401               	retlw	1
   368  02C2  3401               	retlw	1
   369  02C3  3401               	retlw	1
   370  02C4  3401               	retlw	1
   371  02C5  3401               	retlw	1
   372  02C6  3401               	retlw	1
   373  02C7  3401               	retlw	1
   374  02C8  3401               	retlw	1
   375  02C9  3401               	retlw	1
   376  02CA  3401               	retlw	1
   377  02CB  3401               	retlw	1
   378  02CC  3401               	retlw	1
   379  02CD  3401               	retlw	1
   380  02CE  3401               	retlw	1
   381  02CF  3401               	retlw	1
   382  02D0  3401               	retlw	1
   383  02D1  3401               	retlw	1
   384  02D2  3401               	retlw	1
   385  02D3  3401               	retlw	1
   386  02D4  3401               	retlw	1
   387  02D5  3401               	retlw	1
   388  02D6  3401               	retlw	1
   389  02D7  3401               	retlw	1
   390  02D8  3401               	retlw	1
   391  02D9  3401               	retlw	1
   392  02DA  3401               	retlw	1
   393  02DB  3401               	retlw	1
   394  02DC  3401               	retlw	1
   395  02DD  3401               	retlw	1
   396  02DE  3401               	retlw	1
   397  02DF  3401               	retlw	1
   398  02E0  3401               	retlw	1
   399  02E1  3401               	retlw	1
   400  02E2  3401               	retlw	1
   401  02E3  3401               	retlw	1
   402                           
   403                           ;initializer for _rowCount
   404  02E4  3402               	retlw	2
   405  02E5  3400               	retlw	0
   406                           
   407                           ;initializer for _maxFrames
   408  02E6  3418               	retlw	24
   409  02E7  3400               	retlw	0
   410                           
   411                           	psect	strings
   412  0100                     __pstrings:	
   413  0100                     stringtab:	
   414  0100                     __stringtab:	
   415  0100                     stringcode:	
   416                           ;	String table - string pointers are 1 byte each
   417                           
   418  0100                     stringdir:	
   419  0100  3001               	movlw	high stringdir
   420  0101  008A               	movwf	10
   421  0102  0804               	movf	4,w
   422  0103  0A84               	incf	4,f
   423  0104  0782               	addwf	2,f
   424  0105                     __stringbase:	
   425  0105  3400               	retlw	0
   426  0106                     __end_of__stringtab:	
   427  0106                     _frameAnimation:	
   428  0106  3400               	retlw	0
   429  0107  3400               	retlw	0
   430  0108  341D               	retlw	29
   431  0109  3400               	retlw	0
   432  010A  3415               	retlw	21
   433  010B  3400               	retlw	0
   434  010C  3417               	retlw	23
   435  010D  3400               	retlw	0
   436  010E  3400               	retlw	0
   437  010F  3400               	retlw	0
   438  0110  340F               	retlw	15
   439  0111  3400               	retlw	0
   440  0112  3409               	retlw	9
   441  0113  3400               	retlw	0
   442  0114  3409               	retlw	9
   443  0115  3400               	retlw	0
   444  0116  3400               	retlw	0
   445  0117  3400               	retlw	0
   446  0118  340F               	retlw	15
   447  0119  3400               	retlw	0
   448  011A  3404               	retlw	4
   449  011B  3400               	retlw	0
   450  011C  3408               	retlw	8
   451  011D  3400               	retlw	0
   452  011E  3400               	retlw	0
   453  011F  3400               	retlw	0
   454  0120  3406               	retlw	6
   455  0121  3400               	retlw	0
   456  0122  3409               	retlw	9
   457  0123  3400               	retlw	0
   458  0124  3406               	retlw	6
   459  0125  3400               	retlw	0
   460  0126  3400               	retlw	0
   461  0127  3400               	retlw	0
   462  0128  341F               	retlw	31
   463  0129  3400               	retlw	0
   464  012A  3400               	retlw	0
   465  012B  3400               	retlw	0
   466  012C  341F               	retlw	31
   467  012D  3400               	retlw	0
   468  012E  3400               	retlw	0
   469  012F  3400               	retlw	0
   470  0130  3417               	retlw	23
   471  0131  3400               	retlw	0
   472  0132  3400               	retlw	0
   473  0133  3400               	retlw	0
   474  0134  340F               	retlw	15
   475  0135  3400               	retlw	0
   476  0136  3404               	retlw	4
   477  0137  3400               	retlw	0
   478  0138  3408               	retlw	8
   479  0139  3400               	retlw	0
   480  013A  3407               	retlw	7
   481  013B  3400               	retlw	0
   482  013C  3400               	retlw	0
   483  013D  3400               	retlw	0
   484  013E  341D               	retlw	29
   485  013F  3400               	retlw	0
   486  0140  3415               	retlw	21
   487  0141  3400               	retlw	0
   488  0142  340F               	retlw	15
   489  0143  3400               	retlw	0
   490  0144  3400               	retlw	0
   491  0145  3400               	retlw	0
   492  0146  3400               	retlw	0
   493  0147  3400               	retlw	0
   494  0148  3400               	retlw	0
   495  0149  3400               	retlw	0
   496  014A  3410               	retlw	16
   497  014B  3400               	retlw	0
   498  014C  3410               	retlw	16
   499  014D  3400               	retlw	0
   500  014E  341F               	retlw	31
   501  014F  3400               	retlw	0
   502  0150  3410               	retlw	16
   503  0151  3400               	retlw	0
   504  0152  3410               	retlw	16
   505  0153  3400               	retlw	0
   506  0154  3400               	retlw	0
   507  0155  3400               	retlw	0
   508  0156  340E               	retlw	14
   509  0157  3400               	retlw	0
   510  0158  3415               	retlw	21
   511  0159  3400               	retlw	0
   512  015A  340D               	retlw	13
   513  015B  3400               	retlw	0
   514  015C  3400               	retlw	0
   515  015D  3400               	retlw	0
   516  015E  3405               	retlw	5
   517  015F  3400               	retlw	0
   518  0160  3402               	retlw	2
   519  0161  3400               	retlw	0
   520  0162  3405               	retlw	5
   521  0163  3400               	retlw	0
   522  0164  3400               	retlw	0
   523  0165  3400               	retlw	0
   524  0166  3408               	retlw	8
   525  0167  3400               	retlw	0
   526  0168  340F               	retlw	15
   527  0169  3400               	retlw	0
   528  016A  3408               	retlw	8
   529  016B  3400               	retlw	0
   530  016C  3400               	retlw	0
   531  016D  3400               	retlw	0
   532  016E  3400               	retlw	0
   533  016F  3400               	retlw	0
   534  0170  341D               	retlw	29
   535  0171  3400               	retlw	0
   536  0172  3400               	retlw	0
   537  0173  3400               	retlw	0
   538  0174  341D               	retlw	29
   539  0175  3400               	retlw	0
   540  0176  3400               	retlw	0
   541  0177  3400               	retlw	0
   542  0178  3402               	retlw	2
   543  0179  3400               	retlw	0
   544  017A  3419               	retlw	25
   545  017B  3400               	retlw	0
   546  017C  3401               	retlw	1
   547  017D  3400               	retlw	0
   548  017E  3401               	retlw	1
   549  017F  3400               	retlw	0
   550  0180  3401               	retlw	1
   551  0181  3400               	retlw	0
   552  0182  3419               	retlw	25
   553  0183  3400               	retlw	0
   554  0184  3402               	retlw	2
   555  0185  3400               	retlw	0
   556  0186                     __end_of_frameAnimation:	
   557  0186                     _frameSize:	
   558  0186  3406               	retlw	6
   559  0187  3400               	retlw	0
   560  0188                     __end_of_frameSize:	
   561  0188                     _animationLength:	
   562  0188  3440               	retlw	64
   563  0189  3400               	retlw	0
   564  018A                     __end_of_animationLength:	
   565  0007                     _PORTCbits	set	7
   566  005D                     _T0IE	set	93
   567  005A                     _T0IF	set	90
   568  0087                     _TRISC	set	135
   569  0085                     _TRISA	set	133
   570  0091                     _ANSEL	set	145
   571                           
   572                           ; #config settings
   573  0000                     
   574                           	psect	cinit
   575  0013                     start_initialization:	
   576  0013                     __initialization:	
   577                           
   578                           ; Initialize objects allocated to BANK0
   579  0013  1383               	bcf	3,7	;select IRP bank0
   580  0014  3054               	movlw	low (__pdataBANK0+52)
   581  0015  00FD               	movwf	btemp+-1
   582  0016  3002               	movlw	high __pidataBANK0
   583  0017  00FE               	movwf	btemp
   584  0018  30B4               	movlw	low __pidataBANK0
   585  0019  00FF               	movwf	btemp+1
   586  001A  3020               	movlw	low __pdataBANK0
   587  001B  0084               	movwf	4
   588  001C  118A  2360         	fcall	init_ram0
   589                           
   590                           ; Clear objects allocated to BANK0
   591  001E  01EA               	clrf	__pbssBANK0& (0+127)
   592  001F  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   593                           
   594                           ; Clear objects allocated to COMMON
   595  0020  01F7               	clrf	__pbssCOMMON& (0+127)
   596  0021  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   597  0022  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   598  0023                     end_of_initialization:	
   599                           ;End of C runtime variable initialization code
   600                           
   601  0023                     __end_of__initialization:	
   602  0023  0183               	clrf	3
   603  0024  118A  2A72         	ljmp	_main	;jump to C main() function
   604                           
   605                           	psect	bssCOMMON
   606  0077                     __pbssCOMMON:	
   607  0077                     _scrollIndex:	
   608  0077                     	ds	2
   609  0079                     _currentRow:	
   610  0079                     	ds	1
   611                           
   612                           	psect	bssBANK0
   613  006A                     __pbssBANK0:	
   614  006A                     _currentFrame:	
   615  006A                     	ds	2
   616                           
   617                           	psect	dataBANK0
   618  0020                     __pdataBANK0:	
   619  0020                     _buf:	
   620  0020                     	ds	48
   621  0050                     _rowCount:	
   622  0050                     	ds	2
   623  0052                     _maxFrames:	
   624  0052                     	ds	2
   625                           
   626                           	psect	inittext
   627  035C                     init_fetch0:	
   628                           ;	Called with low address in FSR and high address in W
   629                           
   630  035C  087E               	movf	126,w
   631  035D  008A               	movwf	10
   632  035E  087F               	movf	127,w
   633  035F  0082               	movwf	2
   634  0360                     init_ram0:	
   635                           ;Called with:
   636                           ;	high address of idata address in btemp 
   637                           ;	low address of idata address in btemp+1 
   638                           ;	low address of data in FSR
   639                           ;	high address + 1 of data in btemp-1
   640                           
   641  0360  235C  118A         	fcall	init_fetch0
   642  0362  0080               	movwf	0
   643  0363  0A84               	incf	4,f
   644  0364  0804               	movf	4,w
   645  0365  067D               	xorwf	125,w
   646  0366  1903               	btfsc	3,2
   647  0367  3400               	retlw	0
   648  0368  0AFF               	incf	127,f
   649  0369  1903               	btfsc	3,2
   650  036A  0AFE               	incf	126,f
   651  036B  2B60               	goto	init_ram0
   652                           
   653                           	psect	cstackCOMMON
   654  0070                     __pcstackCOMMON:	
   655  0070                     ?_ConfigureOscillator:	
   656  0070                     ?_InitApp:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_ClearDisplay:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_InitFrameAnimation:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_ReadyDisplay:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_PopulateColumns:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_AdvanceRow:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_AdvanceAnimationFrame:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_isr:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ??_isr:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_main:	
   684                           ; 1 bytes @ 0x0
   685                           
   686                           
   687                           ; 1 bytes @ 0x0
   688  0070                     	ds	4
   689  0074                     ??_ConfigureOscillator:	
   690  0074                     ??_InitApp:	
   691                           ; 1 bytes @ 0x4
   692                           
   693  0074                     ??_ClearDisplay:	
   694                           ; 1 bytes @ 0x4
   695                           
   696  0074                     ??_ReadyDisplay:	
   697                           ; 1 bytes @ 0x4
   698                           
   699  0074                     ??_PopulateColumns:	
   700                           ; 1 bytes @ 0x4
   701                           
   702  0074                     ??_AdvanceRow:	
   703                           ; 1 bytes @ 0x4
   704                           
   705  0074                     ??___wmul:	
   706                           ; 1 bytes @ 0x4
   707                           
   708  0074                     ___wmul@product:	
   709                           ; 1 bytes @ 0x4
   710                           
   711                           
   712                           ; 2 bytes @ 0x4
   713  0074                     	ds	1
   714  0075                     ClearDisplay@i:	
   715                           
   716                           ; 2 bytes @ 0x5
   717  0075                     	ds	2
   718                           
   719                           	psect	cstackBANK0
   720  0054                     __pcstackBANK0:	
   721  0054                     ??_InitFrameAnimation:	
   722  0054                     ?___wmul:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0054                     PopulateColumns@i:	
   726                           ; 2 bytes @ 0x0
   727                           
   728  0054                     ___wmul@multiplier:	
   729                           ; 2 bytes @ 0x0
   730                           
   731                           
   732                           ; 2 bytes @ 0x0
   733  0054                     	ds	2
   734  0056                     ___wmul@multiplicand:	
   735                           
   736                           ; 2 bytes @ 0x2
   737  0056                     	ds	2
   738  0058                     ??_AdvanceAnimationFrame:	
   739                           
   740                           ; 1 bytes @ 0x4
   741  0058                     	ds	3
   742  005B                     InitFrameAnimation@k:	
   743                           
   744                           ; 2 bytes @ 0x7
   745  005B                     	ds	2
   746  005D                     InitFrameAnimation@x:	
   747                           
   748                           ; 2 bytes @ 0x9
   749  005D                     	ds	2
   750  005F                     InitFrameAnimation@y:	
   751                           
   752                           ; 2 bytes @ 0xB
   753  005F                     	ds	2
   754  0061                     AdvanceAnimationFrame@k:	
   755                           
   756                           ; 2 bytes @ 0xD
   757  0061                     	ds	2
   758  0063                     AdvanceAnimationFrame@x:	
   759                           
   760                           ; 2 bytes @ 0xF
   761  0063                     	ds	2
   762  0065                     AdvanceAnimationFrame@y:	
   763                           
   764                           ; 2 bytes @ 0x11
   765  0065                     	ds	2
   766  0067                     ??_main:	
   767                           
   768                           ; 1 bytes @ 0x13
   769  0067                     	ds	1
   770  0068                     main@counter:	
   771                           
   772                           ; 2 bytes @ 0x14
   773  0068                     	ds	2
   774                           
   775                           	psect	maintext
   776  0272                     __pmaintext:	
   777 ;;
   778 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   779 ;;
   780 ;; *************** function _main *****************
   781 ;; Defined at:
   782 ;;		line 26 in file "main.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  counter         2   20[BANK0 ] int 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : B00/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   796 ;;      Params:         0       0       0       0
   797 ;;      Locals:         0       2       0       0
   798 ;;      Temps:          0       1       0       0
   799 ;;      Totals:         0       3       0       0
   800 ;;Total ram usage:        3 bytes
   801 ;; Hardware stack levels required when called:    3
   802 ;; This function calls:
   803 ;;		_AdvanceAnimationFrame
   804 ;;		_AdvanceRow
   805 ;;		_ClearDisplay
   806 ;;		_ConfigureOscillator
   807 ;;		_InitApp
   808 ;;		_InitFrameAnimation
   809 ;;		_PopulateColumns
   810 ;;		_ReadyDisplay
   811 ;; This function is called by:
   812 ;;		Startup code after reset
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           
   817                           ;psect for function _main
   818  0272                     _main:	
   819                           
   820                           ;main.c: 29: ConfigureOscillator();
   821                           
   822                           ;incstack = 0
   823                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   824  0272  118A  238C  118A   	fcall	_ConfigureOscillator
   825                           
   826                           ;main.c: 32: InitApp();
   827  0275  118A  2383  118A   	fcall	_InitApp
   828                           
   829                           ;main.c: 34: ClearDisplay();
   830  0278  118A  22E8  118A   	fcall	_ClearDisplay
   831                           
   832                           ;main.c: 35: InitFrameAnimation();
   833  027B  118A  2203  118A   	fcall	_InitFrameAnimation
   834                           
   835                           ;main.c: 36: ReadyDisplay();
   836  027E  118A  2379  118A   	fcall	_ReadyDisplay
   837  0281                     L1:	
   838                           
   839                           ;main.c: 38: int counter = 0;
   840  0281  1283               	bcf	3,5	;RP0=0, select bank0
   841  0282  1303               	bcf	3,6	;RP1=0, select bank0
   842  0283  01E8               	clrf	main@counter
   843  0284  01E9               	clrf	main@counter+1
   844  0285                     l1163:	
   845                           ;main.c: 40: while(1)
   846                           
   847                           
   848                           ;main.c: 41: {
   849                           ;main.c: 42: PORTCbits.RC4 = 1;
   850  0285  1283               	bcf	3,5	;RP0=0, select bank0
   851  0286  1303               	bcf	3,6	;RP1=0, select bank0
   852  0287  1607               	bsf	7,4	;volatile
   853                           
   854                           ;main.c: 44: PopulateColumns();
   855  0288  118A  218A  118A   	fcall	_PopulateColumns
   856                           
   857                           ;main.c: 46: PORTCbits.RC4 = 0;
   858  028B  1283               	bcf	3,5	;RP0=0, select bank0
   859  028C  1303               	bcf	3,6	;RP1=0, select bank0
   860  028D  1207               	bcf	7,4	;volatile
   861                           
   862                           ;main.c: 48: _delay((unsigned long)((500)*(8000000/4000000.0)));
   863  028E  30C7               	movlw	199
   864  028F  1283               	bcf	3,5	;RP0=0, select bank0
   865  0290  1303               	bcf	3,6	;RP1=0, select bank0
   866  0291  00E7               	movwf	??_main
   867  0292                     u1507:	
   868  0292  2A93               	nop2
   869  0293  0BE7               	decfsz	??_main,f
   870  0294  2A92               	goto	u1507
   871  0295  2A96               	nop2
   872  0296  0000               	nop
   873                           
   874                           ;main.c: 50: PORTCbits.RC4 = 1;
   875  0297  1283               	bcf	3,5	;RP0=0, select bank0
   876  0298  1303               	bcf	3,6	;RP1=0, select bank0
   877  0299  1607               	bsf	7,4	;volatile
   878                           
   879                           ;main.c: 53: AdvanceRow();
   880  029A  118A  233F  118A   	fcall	_AdvanceRow
   881                           
   882                           ;main.c: 55: counter++;
   883  029D  3001               	movlw	1
   884  029E  1283               	bcf	3,5	;RP0=0, select bank0
   885  029F  1303               	bcf	3,6	;RP1=0, select bank0
   886  02A0  07E8               	addwf	main@counter,f
   887  02A1  1803               	skipnc
   888  02A2  0AE9               	incf	main@counter+1,f
   889  02A3  3000               	movlw	0
   890  02A4  07E9               	addwf	main@counter+1,f
   891                           
   892                           ;main.c: 57: if(counter > 500){
   893  02A5  0869               	movf	main@counter+1,w
   894  02A6  3A80               	xorlw	128
   895  02A7  00FF               	movwf	127
   896  02A8  3081               	movlw	129
   897  02A9  027F               	subwf	127,w
   898  02AA  1D03               	skipz
   899  02AB  2AAE               	goto	u1495
   900  02AC  30F5               	movlw	245
   901  02AD  0268               	subwf	main@counter,w
   902  02AE                     u1495:	
   903  02AE  1C03               	skipc
   904  02AF  2A85               	goto	l1163
   905                           
   906                           ;main.c: 58: AdvanceAnimationFrame();
   907  02B0  118A  2026  118A   	fcall	_AdvanceAnimationFrame
   908  02B3  2A81               	goto	L1
   909  02B4                     __end_of_main:	
   910                           ;main.c: 59: counter = 0;
   911                           
   912                           
   913                           	psect	text1
   914  0379                     __ptext1:	
   915 ;; *************** function _ReadyDisplay *****************
   916 ;; Defined at:
   917 ;;		line 126 in file "user.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		None
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   931 ;;      Params:         0       0       0       0
   932 ;;      Locals:         0       0       0       0
   933 ;;      Temps:          0       0       0       0
   934 ;;      Totals:         0       0       0       0
   935 ;;Total ram usage:        0 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    1
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_main
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           
   946                           ;psect for function _ReadyDisplay
   947  0379                     _ReadyDisplay:	
   948                           
   949                           ;user.c: 128: PORTCbits.RC4 = 1;
   950                           
   951                           ;incstack = 0
   952                           ; Regs used in _ReadyDisplay: []
   953  0379  1283               	bcf	3,5	;RP0=0, select bank0
   954  037A  1303               	bcf	3,6	;RP1=0, select bank0
   955  037B  1607               	bsf	7,4	;volatile
   956                           
   957                           ;user.c: 130: PORTCbits.RC1 = 1;
   958  037C  1487               	bsf	7,1	;volatile
   959                           
   960                           ;user.c: 133: PORTCbits.RC3 = 1;
   961  037D  1587               	bsf	7,3	;volatile
   962                           
   963                           ;user.c: 134: PORTCbits.RC3 = 0;
   964  037E  1187               	bcf	7,3	;volatile
   965                           
   966                           ;user.c: 135: PORTCbits.RC3 = 1;
   967  037F  1587               	bsf	7,3	;volatile
   968                           
   969                           ;user.c: 136: PORTCbits.RC3 = 0;
   970  0380  1187               	bcf	7,3	;volatile
   971                           
   972                           ;user.c: 138: PORTCbits.RC4 = 0;
   973  0381  1207               	bcf	7,4	;volatile
   974  0382  0008               	return
   975  0383                     __end_of_ReadyDisplay:	
   976                           
   977                           	psect	text2
   978  018A                     __ptext2:	
   979 ;; *************** function _PopulateColumns *****************
   980 ;; Defined at:
   981 ;;		line 143 in file "user.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  i               2    0[BANK0 ] int 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   995 ;;      Params:         0       0       0       0
   996 ;;      Locals:         0       2       0       0
   997 ;;      Temps:          3       0       0       0
   998 ;;      Totals:         3       2       0       0
   999 ;;Total ram usage:        5 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           
  1010                           ;psect for function _PopulateColumns
  1011  018A                     _PopulateColumns:	
  1012                           
  1013                           ;user.c: 148: for(int i =7;i>=0;i--)
  1014                           
  1015                           ;incstack = 0
  1016                           ; Regs used in _PopulateColumns: [wreg-fsr0h+status,2+status,0]
  1017  018A  3007               	movlw	7
  1018  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1019  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1020  018D  00D4               	movwf	PopulateColumns@i
  1021  018E  3000               	movlw	0
  1022  018F  00D5               	movwf	PopulateColumns@i+1
  1023  0190  1BD5               	btfsc	PopulateColumns@i+1,7
  1024  0191  29F9               	goto	l1115
  1025  0192                     l1089:	
  1026                           
  1027                           ;user.c: 149: {
  1028                           ;user.c: 154: if(i==3)
  1029  0192  3003               	movlw	3
  1030  0193  0654               	xorwf	PopulateColumns@i,w
  1031  0194  0455               	iorwf	PopulateColumns@i+1,w
  1032  0195  1D03               	btfss	3,2
  1033  0196  29A2               	goto	l1093
  1034                           
  1035                           ;user.c: 155: {
  1036                           ;user.c: 156: PORTCbits.RC0 = !buf[currentRow][0];
  1037  0197  0879               	movf	_currentRow,w
  1038  0198  00F4               	movwf	??_PopulateColumns
  1039  0199  3002               	movlw	2
  1040  019A                     u1225:	
  1041  019A  1003               	clrc
  1042  019B  0DF4               	rlf	??_PopulateColumns,f
  1043  019C  3EFF               	addlw	-1
  1044  019D  1D03               	skipz
  1045  019E  299A               	goto	u1225
  1046  019F  1003               	clrc
  1047  01A0  0D74               	rlf	??_PopulateColumns,w
  1048  01A1  29D2               	goto	L9
  1049  01A2                     l1093:	
  1050                           ;user.c: 157: }
  1051                           
  1052                           
  1053                           ;user.c: 158: else if(i==2)
  1054  01A2  3002               	movlw	2
  1055  01A3  0654               	xorwf	PopulateColumns@i,w
  1056  01A4  0455               	iorwf	PopulateColumns@i+1,w
  1057  01A5  1D03               	btfss	3,2
  1058  01A6  29B3               	goto	l1097
  1059                           
  1060                           ;user.c: 159: {
  1061                           ;user.c: 160: PORTCbits.RC0 = !buf[currentRow][1];
  1062  01A7  0879               	movf	_currentRow,w
  1063  01A8  00F4               	movwf	??_PopulateColumns
  1064  01A9  3002               	movlw	2
  1065  01AA                     u1265:	
  1066  01AA  1003               	clrc
  1067  01AB  0DF4               	rlf	??_PopulateColumns,f
  1068  01AC  3EFF               	addlw	-1
  1069  01AD  1D03               	skipz
  1070  01AE  29AA               	goto	u1265
  1071  01AF  1003               	clrc
  1072  01B0  0D74               	rlf	??_PopulateColumns,w
  1073  01B1  3E01               	addlw	1
  1074  01B2  29D2               	goto	L9
  1075  01B3                     l1097:	
  1076                           ;user.c: 161: }
  1077                           
  1078                           
  1079                           ;user.c: 162: else if(i==1)
  1080  01B3  0354               	decf	PopulateColumns@i,w
  1081  01B4  0455               	iorwf	PopulateColumns@i+1,w
  1082  01B5  1D03               	btfss	3,2
  1083  01B6  29C3               	goto	l1101
  1084                           
  1085                           ;user.c: 163: {
  1086                           ;user.c: 164: PORTCbits.RC0 = !buf[currentRow][2];
  1087  01B7  0879               	movf	_currentRow,w
  1088  01B8  00F4               	movwf	??_PopulateColumns
  1089  01B9  3002               	movlw	2
  1090  01BA                     u1305:	
  1091  01BA  1003               	clrc
  1092  01BB  0DF4               	rlf	??_PopulateColumns,f
  1093  01BC  3EFF               	addlw	-1
  1094  01BD  1D03               	skipz
  1095  01BE  29BA               	goto	u1305
  1096  01BF  1003               	clrc
  1097  01C0  0D74               	rlf	??_PopulateColumns,w
  1098  01C1  3E02               	addlw	2
  1099  01C2  29D2               	goto	L9
  1100  01C3                     l1101:	
  1101                           ;user.c: 165: }
  1102                           
  1103                           
  1104                           ;user.c: 166: else if(i==0)
  1105  01C3  0854               	movf	PopulateColumns@i,w
  1106  01C4  0455               	iorwf	PopulateColumns@i+1,w
  1107  01C5  1D03               	btfss	3,2
  1108  01C6  29D4               	goto	l1105
  1109                           
  1110                           ;user.c: 167: {
  1111                           ;user.c: 168: PORTCbits.RC0 = !buf[currentRow][3];
  1112  01C7  0879               	movf	_currentRow,w
  1113  01C8  00F4               	movwf	??_PopulateColumns
  1114  01C9  3002               	movlw	2
  1115  01CA                     u1345:	
  1116  01CA  1003               	clrc
  1117  01CB  0DF4               	rlf	??_PopulateColumns,f
  1118  01CC  3EFF               	addlw	-1
  1119  01CD  1D03               	skipz
  1120  01CE  29CA               	goto	u1345
  1121  01CF  1003               	clrc
  1122  01D0  0D74               	rlf	??_PopulateColumns,w
  1123  01D1  3E03               	addlw	3
  1124  01D2                     L9:	
  1125  01D2  3E20               	addlw	(low (_buf| 0))& (0+255)
  1126  01D3  29E3               	goto	L8
  1127  01D4                     l1105:	
  1128                           ;user.c: 169: }
  1129                           
  1130                           
  1131                           ;user.c: 170: else
  1132                           ;user.c: 171: {
  1133                           ;user.c: 172: PORTCbits.RC0 = !buf[currentRow][i];
  1134  01D4  0879               	movf	_currentRow,w
  1135  01D5  00F4               	movwf	??_PopulateColumns
  1136  01D6  3003               	movlw	3
  1137  01D7                     u1375:	
  1138  01D7  1003               	clrc
  1139  01D8  0DF4               	rlf	??_PopulateColumns,f
  1140  01D9  3EFF               	addlw	-1
  1141  01DA  1D03               	skipz
  1142  01DB  29D7               	goto	u1375
  1143  01DC  3020               	movlw	(low (_buf| 0))& (0+255)
  1144  01DD  0774               	addwf	??_PopulateColumns,w
  1145  01DE  00F5               	movwf	??_PopulateColumns+1
  1146  01DF  0854               	movf	PopulateColumns@i,w
  1147  01E0  0775               	addwf	??_PopulateColumns+1,w
  1148  01E1  00F6               	movwf	??_PopulateColumns+2
  1149  01E2  0876               	movf	??_PopulateColumns+2,w
  1150  01E3                     L8:	
  1151  01E3  0084               	movwf	4
  1152  01E4  1383               	bcf	3,7	;select IRP bank0
  1153  01E5  0800               	movf	0,w
  1154  01E6  1D03               	btfss	3,2
  1155  01E7  29EC               	goto	u1380
  1156  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1157  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1158  01EA  1407               	bsf	7,0	;volatile
  1159  01EB  29EF               	goto	l1107
  1160  01EC                     u1380:	
  1161  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1162  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1163  01EE  1007               	bcf	7,0	;volatile
  1164  01EF                     l1107:	
  1165                           
  1166                           ;user.c: 173: }
  1167                           ;user.c: 176: PORTCbits.RC2 = 1;
  1168  01EF  1507               	bsf	7,2	;volatile
  1169                           
  1170                           ;user.c: 177: PORTCbits.RC2 = 0;
  1171  01F0  1107               	bcf	7,2	;volatile
  1172  01F1  30FF               	movlw	255
  1173  01F2  07D4               	addwf	PopulateColumns@i,f
  1174  01F3  1803               	skipnc
  1175  01F4  0AD5               	incf	PopulateColumns@i+1,f
  1176  01F5  30FF               	movlw	255
  1177  01F6  07D5               	addwf	PopulateColumns@i+1,f
  1178  01F7  1FD5               	btfss	PopulateColumns@i+1,7
  1179  01F8  2992               	goto	l1089
  1180  01F9                     l1115:	
  1181                           
  1182                           ;user.c: 179: }
  1183                           ;user.c: 181: currentRow++;
  1184  01F9  3001               	movlw	1
  1185  01FA  00F4               	movwf	??_PopulateColumns
  1186  01FB  0874               	movf	??_PopulateColumns,w
  1187  01FC  07F9               	addwf	_currentRow,f
  1188                           
  1189                           ;user.c: 183: if(currentRow == 6){
  1190  01FD  3006               	movlw	6
  1191  01FE  0679               	xorwf	_currentRow,w
  1192  01FF  1D03               	btfss	3,2
  1193  0200  0008               	return
  1194                           
  1195                           ;user.c: 184: currentRow = 0;
  1196  0201  01F9               	clrf	_currentRow
  1197  0202  0008               	return
  1198  0203                     __end_of_PopulateColumns:	
  1199                           
  1200                           	psect	text3
  1201  0203                     __ptext3:	
  1202 ;; *************** function _InitFrameAnimation *****************
  1203 ;; Defined at:
  1204 ;;		line 66 in file "user.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  x               2    9[BANK0 ] int 
  1209 ;;  k               2    7[BANK0 ] int 
  1210 ;;  y               2   11[BANK0 ] int 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1220 ;;      Params:         0       0       0       0
  1221 ;;      Locals:         0       6       0       0
  1222 ;;      Temps:          0       7       0       0
  1223 ;;      Totals:         0      13       0       0
  1224 ;;Total ram usage:       13 bytes
  1225 ;; Hardware stack levels used:    2
  1226 ;; Hardware stack levels required when called:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _InitFrameAnimation
  1236  0203                     _InitFrameAnimation:	
  1237                           
  1238                           ;user.c: 69: for(int y = 0;y<6;y++){
  1239                           
  1240                           ;incstack = 0
  1241                           ; Regs used in _InitFrameAnimation: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1242  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0205  01DF               	clrf	InitFrameAnimation@y
  1245  0206  01E0               	clrf	InitFrameAnimation@y+1
  1246  0207                     L10:	
  1247  0207  0860               	movf	InitFrameAnimation@y+1,w
  1248  0208  3A80               	xorlw	128
  1249  0209  00FF               	movwf	127
  1250  020A  3080               	movlw	128
  1251  020B  027F               	subwf	127,w
  1252  020C  1D03               	skipz
  1253  020D  2A10               	goto	u1145
  1254  020E  3006               	movlw	6
  1255  020F  025F               	subwf	InitFrameAnimation@y,w
  1256  0210                     u1145:	
  1257  0210  1803               	btfsc	3,0
  1258  0211  0008               	return
  1259                           
  1260                           ;user.c: 70: for(int x =0,k = 7;x<8;x++,k--){
  1261  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0214  01DD               	clrf	InitFrameAnimation@x
  1264  0215  01DE               	clrf	InitFrameAnimation@x+1
  1265  0216  3007               	movlw	7
  1266  0217  00DB               	movwf	InitFrameAnimation@k
  1267  0218  3000               	movlw	0
  1268  0219  00DC               	movwf	InitFrameAnimation@k+1
  1269  021A  085E               	movf	InitFrameAnimation@x+1,w
  1270  021B  3A80               	xorlw	128
  1271  021C  00FF               	movwf	127
  1272  021D  3080               	movlw	128
  1273  021E  027F               	subwf	127,w
  1274  021F  1D03               	skipz
  1275  0220  2A23               	goto	u1155
  1276  0221  3008               	movlw	8
  1277  0222  025D               	subwf	InitFrameAnimation@x,w
  1278  0223                     u1155:	
  1279  0223  1803               	btfsc	3,0
  1280  0224  2A69               	goto	l1079
  1281  0225                     l1071:	
  1282                           
  1283                           ;user.c: 71: buf[y][x] = (frameAnimation[y] >> k) & 1;
  1284  0225  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0226  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0227  085F               	movf	InitFrameAnimation@y,w
  1287  0228  00D4               	movwf	??_InitFrameAnimation
  1288  0229  0754               	addwf	??_InitFrameAnimation,w
  1289  022A  3E01               	addlw	low ((_frameAnimation-__stringbase)| (0+32768))
  1290  022B  0084               	movwf	4
  1291  022C  118A  2100  118A   	fcall	stringdir
  1292  022F  00D5               	movwf	??_InitFrameAnimation+1
  1293  0230  118A  2100  118A   	fcall	stringdir
  1294  0233  00D6               	movwf	??_InitFrameAnimation+2
  1295  0234  0A5B               	incf	InitFrameAnimation@k,w
  1296  0235  2A39               	goto	u1164
  1297  0236                     u1165:	
  1298  0236  1003               	clrc
  1299  0237  0CD6               	rrf	??_InitFrameAnimation+2,f
  1300  0238  0CD5               	rrf	??_InitFrameAnimation+1,f
  1301  0239                     u1164:	
  1302  0239  3EFF               	addlw	-1
  1303  023A  1D03               	skipz
  1304  023B  2A36               	goto	u1165
  1305  023C  0855               	movf	??_InitFrameAnimation+1,w
  1306  023D  3901               	andlw	1
  1307  023E  00D7               	movwf	??_InitFrameAnimation+3
  1308  023F  085F               	movf	InitFrameAnimation@y,w
  1309  0240  00D8               	movwf	??_InitFrameAnimation+4
  1310  0241  3003               	movlw	3
  1311  0242                     u1175:	
  1312  0242  1003               	clrc
  1313  0243  0DD8               	rlf	??_InitFrameAnimation+4,f
  1314  0244  3EFF               	addlw	-1
  1315  0245  1D03               	skipz
  1316  0246  2A42               	goto	u1175
  1317  0247  3020               	movlw	(low (_buf| 0))& (0+255)
  1318  0248  0758               	addwf	??_InitFrameAnimation+4,w
  1319  0249  00D9               	movwf	??_InitFrameAnimation+5
  1320  024A  085D               	movf	InitFrameAnimation@x,w
  1321  024B  0759               	addwf	??_InitFrameAnimation+5,w
  1322  024C  00DA               	movwf	??_InitFrameAnimation+6
  1323  024D  085A               	movf	??_InitFrameAnimation+6,w
  1324  024E  0084               	movwf	4
  1325  024F  0857               	movf	??_InitFrameAnimation+3,w
  1326  0250  1383               	bcf	3,7	;select IRP bank0
  1327  0251  0080               	movwf	0
  1328  0252  3001               	movlw	1
  1329  0253  07DD               	addwf	InitFrameAnimation@x,f
  1330  0254  1803               	skipnc
  1331  0255  0ADE               	incf	InitFrameAnimation@x+1,f
  1332  0256  3000               	movlw	0
  1333  0257  07DE               	addwf	InitFrameAnimation@x+1,f
  1334  0258  30FF               	movlw	255
  1335  0259  07DB               	addwf	InitFrameAnimation@k,f
  1336  025A  1803               	skipnc
  1337  025B  0ADC               	incf	InitFrameAnimation@k+1,f
  1338  025C  30FF               	movlw	255
  1339  025D  07DC               	addwf	InitFrameAnimation@k+1,f
  1340  025E  085E               	movf	InitFrameAnimation@x+1,w
  1341  025F  3A80               	xorlw	128
  1342  0260  00FF               	movwf	127
  1343  0261  3080               	movlw	128
  1344  0262  027F               	subwf	127,w
  1345  0263  1D03               	skipz
  1346  0264  2A67               	goto	u1185
  1347  0265  3008               	movlw	8
  1348  0266  025D               	subwf	InitFrameAnimation@x,w
  1349  0267                     u1185:	
  1350  0267  1C03               	skipc
  1351  0268  2A25               	goto	l1071
  1352  0269                     l1079:	
  1353  0269  3001               	movlw	1
  1354  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1355  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1356  026C  07DF               	addwf	InitFrameAnimation@y,f
  1357  026D  1803               	skipnc
  1358  026E  0AE0               	incf	InitFrameAnimation@y+1,f
  1359  026F  3000               	movlw	0
  1360  0270  07E0               	addwf	InitFrameAnimation@y+1,f
  1361  0271  2A07               	goto	L10
  1362  0272                     __end_of_InitFrameAnimation:	
  1363                           
  1364                           	psect	text4
  1365  0383                     __ptext4:	
  1366 ;; *************** function _InitApp *****************
  1367 ;; Defined at:
  1368 ;;		line 47 in file "user.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1382 ;;      Params:         0       0       0       0
  1383 ;;      Locals:         0       0       0       0
  1384 ;;      Temps:          0       0       0       0
  1385 ;;      Totals:         0       0       0       0
  1386 ;;Total ram usage:        0 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           
  1397                           ;psect for function _InitApp
  1398  0383                     _InitApp:	
  1399                           
  1400                           ;user.c: 56: ANSEL = 0b00000000;
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in _InitApp: [wreg+status,2]
  1404  0383  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0384  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0385  0191               	clrf	17	;volatile
  1407                           
  1408                           ;user.c: 58: TRISA = 0b11111111;
  1409  0386  30FF               	movlw	255
  1410  0387  0085               	movwf	5	;volatile
  1411                           
  1412                           ;user.c: 59: TRISC = 0b11000000;
  1413  0388  30C0               	movlw	192
  1414  0389  0087               	movwf	7	;volatile
  1415                           
  1416                           ;user.c: 61: T0IE = 0;
  1417  038A  128B               	bcf	11,5	;volatile
  1418  038B  0008               	return
  1419  038C                     __end_of_InitApp:	
  1420                           
  1421                           	psect	text5
  1422  038C                     __ptext5:	
  1423 ;; *************** function _ConfigureOscillator *****************
  1424 ;; Defined at:
  1425 ;;		line 18 in file "system.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		None
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1439 ;;      Params:         0       0       0       0
  1440 ;;      Locals:         0       0       0       0
  1441 ;;      Temps:          0       0       0       0
  1442 ;;      Totals:         0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    1
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           
  1454                           ;psect for function _ConfigureOscillator
  1455  038C                     _ConfigureOscillator:	
  1456                           
  1457                           ;incstack = 0
  1458                           ; Regs used in _ConfigureOscillator: []
  1459  038C  0008               	return
  1460  038D                     __end_of_ConfigureOscillator:	
  1461                           
  1462                           	psect	text6
  1463  02E8                     __ptext6:	
  1464 ;; *************** function _ClearDisplay *****************
  1465 ;; Defined at:
  1466 ;;		line 84 in file "user.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  i               2    5[COMMON] int 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, btemp+1
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1480 ;;      Params:         0       0       0       0
  1481 ;;      Locals:         2       0       0       0
  1482 ;;      Temps:          1       0       0       0
  1483 ;;      Totals:         3       0       0       0
  1484 ;;Total ram usage:        3 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           
  1495                           ;psect for function _ClearDisplay
  1496  02E8                     _ClearDisplay:	
  1497                           
  1498                           ;user.c: 89: PORTCbits.RC4 = 1;
  1499                           
  1500                           ;incstack = 0
  1501                           ; Regs used in _ClearDisplay: [wreg+status,2+btemp+1]
  1502  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1503  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1504  02EA  1607               	bsf	7,4	;volatile
  1505                           
  1506                           ;user.c: 91: PORTCbits.RC1 = 0;
  1507  02EB  1087               	bcf	7,1	;volatile
  1508                           
  1509                           ;user.c: 92: PORTCbits.RC0 = 1;
  1510  02EC  1407               	bsf	7,0	;volatile
  1511                           
  1512                           ;user.c: 94: for(int i = 0;i<8;i++){
  1513  02ED  01F5               	clrf	ClearDisplay@i
  1514  02EE  01F6               	clrf	ClearDisplay@i+1
  1515  02EF  0876               	movf	ClearDisplay@i+1,w
  1516  02F0  3A80               	xorlw	128
  1517  02F1  00FF               	movwf	127
  1518  02F2  3080               	movlw	128
  1519  02F3  027F               	subwf	127,w
  1520  02F4  1D03               	skipz
  1521  02F5  2AF8               	goto	u605
  1522  02F6  3008               	movlw	8
  1523  02F7  0275               	subwf	ClearDisplay@i,w
  1524  02F8                     u605:	
  1525  02F8  1803               	btfsc	3,0
  1526  02F9  2B18               	goto	l88
  1527  02FA                     l87:	
  1528                           
  1529                           ;user.c: 95: PORTCbits.RC3 = 1;
  1530  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1531  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1532  02FC  1587               	bsf	7,3	;volatile
  1533                           
  1534                           ;user.c: 96: PORTCbits.RC2 = 1;
  1535  02FD  1507               	bsf	7,2	;volatile
  1536                           
  1537                           ;user.c: 97: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1538  02FE  3006               	movlw	6
  1539  02FF  00F4               	movwf	??_ClearDisplay
  1540  0300                     u1517:	
  1541  0300  0BF4               	decfsz	??_ClearDisplay,f
  1542  0301  2B00               	goto	u1517
  1543  0302  0000               	nop
  1544                           
  1545                           ;user.c: 99: PORTCbits.RC3 = 0;
  1546  0303  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0304  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0305  1187               	bcf	7,3	;volatile
  1549                           
  1550                           ;user.c: 100: PORTCbits.RC2 = 0;
  1551  0306  1107               	bcf	7,2	;volatile
  1552  0307  3001               	movlw	1
  1553  0308  07F5               	addwf	ClearDisplay@i,f
  1554  0309  1803               	skipnc
  1555  030A  0AF6               	incf	ClearDisplay@i+1,f
  1556  030B  3000               	movlw	0
  1557  030C  07F6               	addwf	ClearDisplay@i+1,f
  1558  030D  0876               	movf	ClearDisplay@i+1,w
  1559  030E  3A80               	xorlw	128
  1560  030F  00FF               	movwf	127
  1561  0310  3080               	movlw	128
  1562  0311  027F               	subwf	127,w
  1563  0312  1D03               	skipz
  1564  0313  2B16               	goto	u615
  1565  0314  3008               	movlw	8
  1566  0315  0275               	subwf	ClearDisplay@i,w
  1567  0316                     u615:	
  1568  0316  1C03               	skipc
  1569  0317  2AFA               	goto	l87
  1570  0318                     l88:	
  1571                           
  1572                           ;user.c: 101: }
  1573                           ;user.c: 103: PORTCbits.RC4 = 0;
  1574  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1575  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1576  031A  1207               	bcf	7,4	;volatile
  1577  031B  0008               	return
  1578  031C                     __end_of_ClearDisplay:	
  1579                           
  1580                           	psect	text7
  1581  033F                     __ptext7:	
  1582 ;; *************** function _AdvanceRow *****************
  1583 ;; Defined at:
  1584 ;;		line 109 in file "user.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, btemp+1
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1598 ;;      Params:         0       0       0       0
  1599 ;;      Locals:         0       0       0       0
  1600 ;;      Temps:          0       0       0       0
  1601 ;;      Totals:         0       0       0       0
  1602 ;;Total ram usage:        0 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_main
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           
  1613                           ;psect for function _AdvanceRow
  1614  033F                     _AdvanceRow:	
  1615                           
  1616                           ;user.c: 112: if(rowCount >= 6)
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _AdvanceRow: [wreg+status,2+btemp+1]
  1620  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0341  0851               	movf	_rowCount+1,w
  1623  0342  3A80               	xorlw	128
  1624  0343  00FF               	movwf	127
  1625  0344  3080               	movlw	128
  1626  0345  027F               	subwf	127,w
  1627  0346  1D03               	skipz
  1628  0347  2B4A               	goto	u905
  1629  0348  3006               	movlw	6
  1630  0349  0250               	subwf	_rowCount,w
  1631  034A                     u905:	
  1632  034A  1C03               	skipc
  1633  034B  2B51               	goto	l929
  1634                           
  1635                           ;user.c: 113: {
  1636                           ;user.c: 114: PORTCbits.RC1 = 1;
  1637  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1638  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1639  034E  1487               	bsf	7,1	;volatile
  1640                           
  1641                           ;user.c: 116: rowCount = 0;
  1642  034F  01D0               	clrf	_rowCount
  1643  0350  01D1               	clrf	_rowCount+1
  1644  0351                     l929:	
  1645                           
  1646                           ;user.c: 117: }
  1647                           ;user.c: 119: PORTCbits.RC3 = 1;
  1648  0351  1283               	bcf	3,5	;RP0=0, select bank0
  1649  0352  1303               	bcf	3,6	;RP1=0, select bank0
  1650  0353  1587               	bsf	7,3	;volatile
  1651                           
  1652                           ;user.c: 120: PORTCbits.RC3 = 0;
  1653  0354  1187               	bcf	7,3	;volatile
  1654                           
  1655                           ;user.c: 122: rowCount++;
  1656  0355  3001               	movlw	1
  1657  0356  07D0               	addwf	_rowCount,f
  1658  0357  1803               	skipnc
  1659  0358  0AD1               	incf	_rowCount+1,f
  1660  0359  3000               	movlw	0
  1661  035A  07D1               	addwf	_rowCount+1,f
  1662  035B  0008               	return
  1663  035C                     __end_of_AdvanceRow:	
  1664                           
  1665                           	psect	text8
  1666  0026                     __ptext8:	
  1667 ;; *************** function _AdvanceAnimationFrame *****************
  1668 ;; Defined at:
  1669 ;;		line 190 in file "user.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  x               2   15[BANK0 ] int 
  1674 ;;  k               2   13[BANK0 ] int 
  1675 ;;  y               2   17[BANK0 ] int 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1685 ;;      Params:         0       0       0       0
  1686 ;;      Locals:         0       6       0       0
  1687 ;;      Temps:          0       9       0       0
  1688 ;;      Totals:         0      15       0       0
  1689 ;;Total ram usage:       15 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    2
  1692 ;; This function calls:
  1693 ;;		___wmul
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _AdvanceAnimationFrame
  1701  0026                     _AdvanceAnimationFrame:	
  1702                           
  1703                           ;user.c: 191: if(currentFrame >= maxFrames){
  1704                           
  1705                           ;incstack = 0
  1706                           ; Regs used in _AdvanceAnimationFrame: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1707  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0027  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0028  086B               	movf	_currentFrame+1,w
  1710  0029  3A80               	xorlw	128
  1711  002A  00D8               	movwf	??_AdvanceAnimationFrame
  1712  002B  0853               	movf	_maxFrames+1,w
  1713  002C  3A80               	xorlw	128
  1714  002D  0258               	subwf	??_AdvanceAnimationFrame,w
  1715  002E  1D03               	skipz
  1716  002F  2832               	goto	u1425
  1717  0030  0852               	movf	_maxFrames,w
  1718  0031  026A               	subwf	_currentFrame,w
  1719  0032                     u1425:	
  1720  0032  1C03               	skipc
  1721  0033  2839               	goto	l1123
  1722                           
  1723                           ;user.c: 192: currentFrame = 0;
  1724  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0036  01EA               	clrf	_currentFrame
  1727  0037  01EB               	clrf	_currentFrame+1
  1728                           
  1729                           ;user.c: 193: } else {
  1730  0038  2841               	goto	l1125
  1731  0039                     l1123:	
  1732                           
  1733                           ;user.c: 194: currentFrame++;
  1734  0039  3001               	movlw	1
  1735  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1736  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1737  003C  07EA               	addwf	_currentFrame,f
  1738  003D  1803               	skipnc
  1739  003E  0AEB               	incf	_currentFrame+1,f
  1740  003F  3000               	movlw	0
  1741  0040  07EB               	addwf	_currentFrame+1,f
  1742  0041                     l1125:	
  1743                           
  1744                           ;user.c: 195: }
  1745                           ;user.c: 198: for(int y = 0;y<6;y++){
  1746  0041  01E5               	clrf	AdvanceAnimationFrame@y
  1747  0042  01E6               	clrf	AdvanceAnimationFrame@y+1
  1748  0043                     L11:	
  1749  0043  0866               	movf	AdvanceAnimationFrame@y+1,w
  1750  0044  3A80               	xorlw	128
  1751  0045  00FF               	movwf	127
  1752  0046  3080               	movlw	128
  1753  0047  027F               	subwf	127,w
  1754  0048  1D03               	skipz
  1755  0049  284C               	goto	u1435
  1756  004A  3006               	movlw	6
  1757  004B  0265               	subwf	AdvanceAnimationFrame@y,w
  1758  004C                     u1435:	
  1759  004C  1803               	btfsc	3,0
  1760  004D  0008               	return
  1761                           
  1762                           ;user.c: 201: for(int x =0,k = 7;x<8;x++,k--){
  1763  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1764  004F  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0050  01E3               	clrf	AdvanceAnimationFrame@x
  1766  0051  01E4               	clrf	AdvanceAnimationFrame@x+1
  1767  0052  3007               	movlw	7
  1768  0053  00E1               	movwf	AdvanceAnimationFrame@k
  1769  0054  3000               	movlw	0
  1770  0055  00E2               	movwf	AdvanceAnimationFrame@k+1
  1771  0056  0864               	movf	AdvanceAnimationFrame@x+1,w
  1772  0057  3A80               	xorlw	128
  1773  0058  00FF               	movwf	127
  1774  0059  3080               	movlw	128
  1775  005A  027F               	subwf	127,w
  1776  005B  1D03               	skipz
  1777  005C  285F               	goto	u1445
  1778  005D  3008               	movlw	8
  1779  005E  0263               	subwf	AdvanceAnimationFrame@x,w
  1780  005F                     u1445:	
  1781  005F  1803               	btfsc	3,0
  1782  0060  28BD               	goto	l1147
  1783  0061                     l1139:	
  1784                           
  1785                           ;user.c: 202: buf[y][x] = (frameAnimation[(currentFrame*frameSize)+y] >> k) & 1;
  1786  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0063  086B               	movf	_currentFrame+1,w
  1789  0064  00D5               	movwf	___wmul@multiplier+1
  1790  0065  086A               	movf	_currentFrame,w
  1791  0066  00D4               	movwf	___wmul@multiplier
  1792  0067  3081               	movlw	low (_frameSize-__stringbase)
  1793  0068  0084               	movwf	4
  1794  0069  118A  2100  118A   	fcall	stringdir
  1795  006C  00D6               	movwf	___wmul@multiplicand
  1796  006D  118A  2100  118A   	fcall	stringdir
  1797  0070  00D7               	movwf	___wmul@multiplicand+1
  1798  0071  118A  231C  118A   	fcall	___wmul
  1799  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0076  0854               	movf	?___wmul,w
  1802  0077  00D8               	movwf	??_AdvanceAnimationFrame
  1803  0078  0855               	movf	?___wmul+1,w
  1804  0079  00D9               	movwf	??_AdvanceAnimationFrame+1
  1805  007A  0865               	movf	AdvanceAnimationFrame@y,w
  1806  007B  0758               	addwf	??_AdvanceAnimationFrame,w
  1807  007C  00DA               	movwf	??_AdvanceAnimationFrame+2
  1808  007D  075A               	addwf	??_AdvanceAnimationFrame+2,w
  1809  007E  3E01               	addlw	low ((_frameAnimation-__stringbase)| (0+32768))
  1810  007F  0084               	movwf	4
  1811  0080  118A  2100  118A   	fcall	stringdir
  1812  0083  00DB               	movwf	??_AdvanceAnimationFrame+3
  1813  0084  118A  2100  118A   	fcall	stringdir
  1814  0087  00DC               	movwf	??_AdvanceAnimationFrame+4
  1815  0088  0A61               	incf	AdvanceAnimationFrame@k,w
  1816  0089  288D               	goto	u1454
  1817  008A                     u1455:	
  1818  008A  1003               	clrc
  1819  008B  0CDC               	rrf	??_AdvanceAnimationFrame+4,f
  1820  008C  0CDB               	rrf	??_AdvanceAnimationFrame+3,f
  1821  008D                     u1454:	
  1822  008D  3EFF               	addlw	-1
  1823  008E  1D03               	skipz
  1824  008F  288A               	goto	u1455
  1825  0090  085B               	movf	??_AdvanceAnimationFrame+3,w
  1826  0091  3901               	andlw	1
  1827  0092  00DD               	movwf	??_AdvanceAnimationFrame+5
  1828  0093  0865               	movf	AdvanceAnimationFrame@y,w
  1829  0094  00DE               	movwf	??_AdvanceAnimationFrame+6
  1830  0095  3003               	movlw	3
  1831  0096                     u1465:	
  1832  0096  1003               	clrc
  1833  0097  0DDE               	rlf	??_AdvanceAnimationFrame+6,f
  1834  0098  3EFF               	addlw	-1
  1835  0099  1D03               	skipz
  1836  009A  2896               	goto	u1465
  1837  009B  3020               	movlw	(low (_buf| 0))& (0+255)
  1838  009C  075E               	addwf	??_AdvanceAnimationFrame+6,w
  1839  009D  00DF               	movwf	??_AdvanceAnimationFrame+7
  1840  009E  0863               	movf	AdvanceAnimationFrame@x,w
  1841  009F  075F               	addwf	??_AdvanceAnimationFrame+7,w
  1842  00A0  00E0               	movwf	??_AdvanceAnimationFrame+8
  1843  00A1  0860               	movf	??_AdvanceAnimationFrame+8,w
  1844  00A2  0084               	movwf	4
  1845  00A3  085D               	movf	??_AdvanceAnimationFrame+5,w
  1846  00A4  1383               	bcf	3,7	;select IRP bank0
  1847  00A5  0080               	movwf	0
  1848  00A6  3001               	movlw	1
  1849  00A7  07E3               	addwf	AdvanceAnimationFrame@x,f
  1850  00A8  1803               	skipnc
  1851  00A9  0AE4               	incf	AdvanceAnimationFrame@x+1,f
  1852  00AA  3000               	movlw	0
  1853  00AB  07E4               	addwf	AdvanceAnimationFrame@x+1,f
  1854  00AC  30FF               	movlw	255
  1855  00AD  07E1               	addwf	AdvanceAnimationFrame@k,f
  1856  00AE  1803               	skipnc
  1857  00AF  0AE2               	incf	AdvanceAnimationFrame@k+1,f
  1858  00B0  30FF               	movlw	255
  1859  00B1  07E2               	addwf	AdvanceAnimationFrame@k+1,f
  1860  00B2  0864               	movf	AdvanceAnimationFrame@x+1,w
  1861  00B3  3A80               	xorlw	128
  1862  00B4  00FF               	movwf	127
  1863  00B5  3080               	movlw	128
  1864  00B6  027F               	subwf	127,w
  1865  00B7  1D03               	skipz
  1866  00B8  28BB               	goto	u1475
  1867  00B9  3008               	movlw	8
  1868  00BA  0263               	subwf	AdvanceAnimationFrame@x,w
  1869  00BB                     u1475:	
  1870  00BB  1C03               	skipc
  1871  00BC  2861               	goto	l1139
  1872  00BD                     l1147:	
  1873  00BD  3001               	movlw	1
  1874  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1875  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1876  00C0  07E5               	addwf	AdvanceAnimationFrame@y,f
  1877  00C1  1803               	skipnc
  1878  00C2  0AE6               	incf	AdvanceAnimationFrame@y+1,f
  1879  00C3  3000               	movlw	0
  1880  00C4  07E6               	addwf	AdvanceAnimationFrame@y+1,f
  1881  00C5  2843               	goto	L11
  1882  00C6                     __end_of_AdvanceAnimationFrame:	
  1883                           
  1884                           	psect	text9
  1885  031C                     __ptext9:	
  1886 ;; *************** function ___wmul *****************
  1887 ;; Defined at:
  1888 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1891 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  product         2    4[COMMON] unsigned int 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  2    0[BANK0 ] unsigned int 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1903 ;;      Params:         0       4       0       0
  1904 ;;      Locals:         2       0       0       0
  1905 ;;      Temps:          0       0       0       0
  1906 ;;      Totals:         2       4       0       0
  1907 ;;Total ram usage:        6 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    1
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_AdvanceAnimationFrame
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function ___wmul
  1919  031C                     ___wmul:	
  1920                           
  1921                           ;incstack = 0
  1922                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1923  031C  01F4               	clrf	___wmul@product
  1924  031D  01F5               	clrf	___wmul@product+1
  1925  031E                     l1045:	
  1926  031E  1283               	bcf	3,5	;RP0=0, select bank0
  1927  031F  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0320  1C54               	btfss	___wmul@multiplier,0
  1929  0321  2B28               	goto	l215
  1930  0322  0856               	movf	___wmul@multiplicand,w
  1931  0323  07F4               	addwf	___wmul@product,f
  1932  0324  1803               	skipnc
  1933  0325  0AF5               	incf	___wmul@product+1,f
  1934  0326  0857               	movf	___wmul@multiplicand+1,w
  1935  0327  07F5               	addwf	___wmul@product+1,f
  1936  0328                     l215:	
  1937  0328  3001               	movlw	1
  1938  0329                     u1115:	
  1939  0329  1003               	clrc
  1940  032A  0DD6               	rlf	___wmul@multiplicand,f
  1941  032B  0DD7               	rlf	___wmul@multiplicand+1,f
  1942  032C  3EFF               	addlw	-1
  1943  032D  1D03               	skipz
  1944  032E  2B29               	goto	u1115
  1945  032F  3001               	movlw	1
  1946  0330                     u1125:	
  1947  0330  1003               	clrc
  1948  0331  0CD5               	rrf	___wmul@multiplier+1,f
  1949  0332  0CD4               	rrf	___wmul@multiplier,f
  1950  0333  3EFF               	addlw	-1
  1951  0334  1D03               	skipz
  1952  0335  2B30               	goto	u1125
  1953  0336  0854               	movf	___wmul@multiplier,w
  1954  0337  0455               	iorwf	___wmul@multiplier+1,w
  1955  0338  1D03               	btfss	3,2
  1956  0339  2B1E               	goto	l1045
  1957  033A  0875               	movf	___wmul@product+1,w
  1958  033B  00D5               	movwf	?___wmul+1
  1959  033C  0874               	movf	___wmul@product,w
  1960  033D  00D4               	movwf	?___wmul
  1961  033E  0008               	return
  1962  033F                     __end_of___wmul:	
  1963                           
  1964                           	psect	text10
  1965  036C                     __ptext10:	
  1966 ;; *************** function _isr *****************
  1967 ;; Defined at:
  1968 ;;		line 24 in file "interrupts.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		None
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1982 ;;      Params:         0       0       0       0
  1983 ;;      Locals:         0       0       0       0
  1984 ;;      Temps:          4       0       0       0
  1985 ;;      Totals:         4       0       0       0
  1986 ;;Total ram usage:        4 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		Interrupt level 1
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _isr
  1997  036C                     _isr:	
  1998                           
  1999                           ;interrupts.c: 35: if(T0IF == 1)
  2000  036C  190B               	btfsc	11,2	;volatile
  2001                           
  2002                           ;interrupts.c: 36: {
  2003                           ;interrupts.c: 38: T0IF = 0;
  2004  036D  110B               	bcf	11,2	;volatile
  2005                           
  2006                           ;interrupts.c: 40: else
  2007                           ;interrupts.c: 41: {
  2008                           
  2009                           ;interrupts.c: 39: }
  2010  036E  0873               	movf	??_isr+3,w
  2011  036F  00FF               	movwf	127
  2012  0370  0872               	movf	??_isr+2,w
  2013  0371  008A               	movwf	10
  2014  0372  0871               	movf	??_isr+1,w
  2015  0373  0084               	movwf	4
  2016  0374  0E70               	swapf	??_isr^(0+-128),w
  2017  0375  0083               	movwf	3
  2018  0376  0EFE               	swapf	126,f
  2019  0377  0E7E               	swapf	126,w
  2020  0378  0009               	retfie
  2021  0379                     __end_of_isr:	
  2022  007E                     btemp	set	126	;btemp
  2023  007E                     wtemp0	set	126
  2024                           
  2025                           	psect	intentry
  2026  0004                     __pintentry:	
  2027                           ;incstack = 0
  2028                           ; Regs used in _isr: []
  2029                           
  2030  0004                     interrupt_function:	
  2031  007E                     saved_w	set	btemp
  2032  0004  00FE               	movwf	btemp
  2033  0005  0E03               	swapf	3,w
  2034  0006  00F0               	movwf	??_isr
  2035  0007  0804               	movf	4,w
  2036  0008  00F1               	movwf	??_isr+1
  2037  0009  080A               	movf	10,w
  2038  000A  00F2               	movwf	??_isr+2
  2039  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2040  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2041  000D  087F               	movf	btemp+1,w
  2042  000E  00F3               	movwf	??_isr+3
  2043  000F  118A  2B6C         	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    132
    Data        52
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     22      76
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ClearDisplay
    _main->_PopulateColumns
    _AdvanceAnimationFrame->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_AdvanceAnimationFrame
    _AdvanceAnimationFrame->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1131
                                             19 BANK0      3     3      0
              _AdvanceAnimationFrame
                         _AdvanceRow
                       _ClearDisplay
                _ConfigureOscillator
                            _InitApp
                 _InitFrameAnimation
                    _PopulateColumns
                       _ReadyDisplay
 ---------------------------------------------------------------------------------
 (1) _ReadyDisplay                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PopulateColumns                                      5     5      0     223
                                              4 COMMON     3     3      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _InitFrameAnimation                                  13    13      0     266
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearDisplay                                         3     3      0      46
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _AdvanceRow                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AdvanceAnimationFrame                               15    15      0     556
                                              4 BANK0     15    15      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AdvanceAnimationFrame
     ___wmul
   _AdvanceRow
   _ClearDisplay
   _ConfigureOscillator
   _InitApp
   _InitFrameAnimation
   _PopulateColumns
   _ReadyDisplay

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      4C       3       95.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      56      10        0.0%
ABS                  0      0      56       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Nov 15 10:50:33 2019

                             pc 0002                     __CFG_CP$OFF 0000                              l87 02FA  
                            l88 0318                              fsr 0004             ___wmul@multiplicand 0056  
                           l215 0328                             l929 0351                    __CFG_CPD$OFF 0000  
                           u605 02F8                             u615 0316                             u905 034A  
                           _buf 0020                             _isr 036C                             fsr0 0004  
                           indf 0000          ?_AdvanceAnimationFrame 0070                    __CFG_IESO$ON 0000  
        __end_of_frameAnimation 0186                            l1101 01C3                            l1105 01D4  
                          l1123 0039                            l1107 01EF                            l1115 01F9  
                          l1045 031E                            l1125 0041                            l1071 0225  
                          l1147 00BD                            l1139 0061                            l1163 0285  
                          l1093 01A2                            l1079 0269                            l1097 01B3  
                          l1089 0192                            ?_isr 0070                      _AdvanceRow 033F  
                          _T0IE 005D                            _T0IF 005A                            u1115 0329  
                          u1125 0330                            u1145 0210                            u1305 01BA  
                          u1225 019A                            u1155 0223                            u1164 0239  
                          u1165 0236                            u1175 0242                            u1425 0032  
                          u1185 0267                            u1345 01CA                            u1265 01AA  
                          u1435 004C                            u1507 0292                            u1380 01EC  
                          u1445 005F                            u1517 0300                            u1454 008D  
                          u1455 008A                            u1375 01D7                            u1465 0096  
                          u1475 00BB                            u1495 02AE                     main@counter 0068  
                 __CFG_FCMEN$ON 0000                            _main 0272                            btemp 007E  
       __end_of_animationLength 018A                            start 0011                   __CFG_MCLRE$ON 0000  
               __end_of_InitApp 038C                           ??_isr 0070                           ?_main 0070  
                 __CFG_WDTE$OFF 0000                           _ANSEL 0091                           _TRISA 0085  
                         _TRISC 0087             _ConfigureOscillator 038C                  __CFG_BOREN$OFF 0000  
                         pclath 000A                           status 0003                           wtemp0 007E  
          ?_ConfigureOscillator 0070                 __initialization 0013                   ?_ReadyDisplay 0070  
                  __end_of_main 02B4                PopulateColumns@i 0054                          ??_main 0067  
                 ClearDisplay@i 0075           __size_of_ClearDisplay 0034                     ?_AdvanceRow 0070  
                     ??_InitApp 0074           ??_ConfigureOscillator 0074                  __CFG_PWRTE$OFF 0000  
           InitFrameAnimation@k 005B             InitFrameAnimation@x 005D             InitFrameAnimation@y 005F  
                ??_ReadyDisplay 0074                          ___wmul 031C                    _ClearDisplay 02E8  
            _InitFrameAnimation 0203                          saved_w 007E             ?_InitFrameAnimation 0070  
               _PopulateColumns 018A         __end_of__initialization 0023                  __pcstackCOMMON 0070  
                  __pidataBANK0 02B4            ??_InitFrameAnimation 0054             __size_of_AdvanceRow 001D  
       ??_AdvanceAnimationFrame 0058                      __pbssBANK0 006A                      __pmaintext 0272  
                       ?___wmul 0054                      __pintentry 0004         __end_of_PopulateColumns 0203  
          __end_of_ReadyDisplay 0383                      __stringtab 0100                         _InitApp 0383  
               __size_of___wmul 0023               __end_of_frameSize 0188                      _currentRow 0079  
                       __ptext1 0379                         __ptext2 018A                         __ptext3 0203  
                       __ptext4 0383                         __ptext5 038C                         __ptext6 02E8  
                       __ptext7 033F                         __ptext8 0026                         __ptext9 031C  
                  __size_of_isr 000D                    ??_AdvanceRow 0074            end_of_initialization 0023  
            __end_of_AdvanceRow 035C                       _PORTCbits 0007                ?_PopulateColumns 0070  
   __end_of_ConfigureOscillator 038D                  __end_of___wmul 033F           __size_of_ReadyDisplay 000A  
__size_of_AdvanceAnimationFrame 00A0   __end_of_AdvanceAnimationFrame 00C6             start_initialization 0013  
                   __end_of_isr 0379                    _ReadyDisplay 0379                        ??___wmul 0074  
                    init_fetch0 035C                     __pdataBANK0 0020     __size_of_InitFrameAnimation 006F  
                   __pbssCOMMON 0077                       ___latbits 0001                   __pcstackBANK0 0054  
                  _currentFrame 006A                        ?_InitApp 0070                       __pstrings 0100  
                     _frameSize 0186                       _maxFrames 0052               interrupt_function 0004  
                ___wmul@product 0074                     __stringbase 0105                   ?_ClearDisplay 0070  
             ___wmul@multiplier 0054                __size_of_InitApp 0009                  ??_ClearDisplay 0074  
            __end_of__stringtab 0106                        __ptext10 036C        __size_of_PopulateColumns 0079  
                 __size_of_main 0042    __size_of_ConfigureOscillator 0001                        _rowCount 0050  
        AdvanceAnimationFrame@k 0061          AdvanceAnimationFrame@x 0063          AdvanceAnimationFrame@y 0065  
         _AdvanceAnimationFrame 0026                        init_ram0 0360                        intlevel1 0000  
                     stringcode 0100      __end_of_InitFrameAnimation 0272                     _scrollIndex 0077  
               _animationLength 0188                        stringdir 0100                        stringtab 0100  
                _frameAnimation 0106              __CFG_FOSC$INTOSCIO 0000            __end_of_ClearDisplay 031C  
             ??_PopulateColumns 0074  
